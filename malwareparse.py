import re
import os
import numpy as np

f1 = open('newfile.txt','r')

category_dict = dict()

#Iterate tru the sample text files found in samples_folder, and make the categories dictionary
foldername = "samples_folder"
for txtfile in os.listdir(foldername):
       # obtain the words from a file by transforming its contents into a string, strip it of any 
       # trailing blanks, and making an array by spliting it by newlines  
       words = open(foldername+"/"+txtfile, "r").read().strip().split('\n')
       # txtfile[:-4] is the name of the file, split it by '_' and take the second element as
       # the name of the category
       category_dict.update(dict.fromkeys(words, txtfile[:-4].split('_')[1]))

# set for faster word operation
word_set = set(category_dict.keys()) 
line_number = 1

# array created to hold transition counts. 8 "current" states with 8 possibilites of another state
# column headings (future state) in order: math, logic, priv, stack ,nop, memory, branch, other
# row headings (current state) in order: math, logic, priv, stack, nop, memory, branch, other
# counts should be added as such: if current state = math and next state is math, z[0,0]+=1, if current 
# state = logic and the next state is stack, then z[1,3]+=1 etc.
z = np.array([[0,0,0,0,0,0,0,0][0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]])

for word in word_set:
	for line in f1:
		for m in re.finditer(word,line):
			#increment the corresponding matrix

for word in word_set:
        for line in f1:
                for m in re.finditer(word, line):
                        print "Found", m.group(0), "line", line_number, "at", m.start(), "-", m.end()
                        line_number += 1

f1.close()

